{
  "openapi": "3.0.1",
  "info": {
    "agentName": "slack",
    "agentPath": "@microfox/slack",
    "title": "Slack",
    "version": "1.2.0",
    "mcpVersion": "1.0.2",
    "description": "An agent to interact with Slack workspace using Slack API with powerful tools for messaging, channel management, user management and more",
    "iconUrl": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack-icon.svg",
    "status": "stable",
    "contact": {
      "name": "Microfox Dev Support",
      "email": "support@microfox.com"
    }
  },
  "servers": [
    {
      "url": "https://api.microfox.com/c/slack",
      "description": "Unified wrapper endpoint"
    }
  ],
  "ai": {
    "systemPrompt": "Theese tools can interact with a Slack workspace. It can manage channels, users, send messages, and more. When a user asks to perform an action, first find the necessary IDs (like channel or user IDs) using list or search functions before executing the action."
  },
  "components": {
    "schemas": {
      "x-auth-packages": [
        {
          "type": "@microfox/packages",
          "packageName": "@microfox/slack"
        }
      ]
    }
  },
  "paths": {
    "/addUserToChannel": {
      "post": {
        "operationId": "addUserToChannel",
        "summary": "Adds a user to a Slack channel.",
        "description": "Adds a specified user to a specified Slack channel & returns information about the channel, including various properties such as channel name, creation timestamp, and member count.",
        "tags": ["channel", "user"],
        "ai": {
          "systemPrompt": "To add a user to a channel, provide the `channelId` (starts with 'C') and `userId` (starts with 'U'). DO NOT ASSUME THESE IDS BY NAMES. If the `channelId` is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output. To find a `userId`, use `getActiveUsersIds` or `getUsersByEmails` only if exact user email is known."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the addUserToChannel sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel to add the user to. Channel IDs start with 'C'."
                          },
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user to add. User IDs start with 'U'."
                          }
                        },
                        "required": ["channelId", "userId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the channel."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the channel."
                        },
                        "is_channel": {
                          "type": "boolean",
                          "description": "Indicates if the object represents a channel."
                        },
                        "is_group": {
                          "type": "boolean",
                          "description": "Indicates if the object represents a private channel."
                        },
                        "is_im": {
                          "type": "boolean",
                          "description": "Indicates if the object represents a direct message conversation."
                        },
                        "created": {
                          "type": "integer",
                          "description": "A Unix timestamp indicating when the channel was created."
                        },
                        "creator": {
                          "type": "string",
                          "description": "The ID of the user who created the channel."
                        },
                        "is_archived": {
                          "type": "boolean",
                          "description": "Indicates if the channel is archived."
                        },
                        "is_general": {
                          "type": "boolean",
                          "description": "Indicates if the channel is the default \"general\" channel."
                        },
                        "unlinked": {
                          "type": "integer"
                        },
                        "name_normalized": {
                          "type": "string",
                          "description": "The channel name, but with any special characters replaced."
                        },
                        "is_shared": {
                          "type": "boolean",
                          "description": "Indicates if the channel is shared with other workspaces."
                        },
                        "is_ext_shared": {
                          "type": "boolean",
                          "description": "Indicates if the channel is part of an external shared connection."
                        },
                        "is_org_shared": {
                          "type": "boolean",
                          "description": "Indicates if the channel is shared with the entire organization."
                        },
                        "pending_shared": {
                          "type": "array",
                          "description": "A list of team IDs that have been invited to the channel but have not yet joined",
                          "items": {
                            "type": "string"
                          }
                        },
                        "is_pending_ext_shared": {
                          "type": "boolean",
                          "description": "Indicates if the conversation is ready to become an external shared channel but needs approval"
                        },
                        "is_member": {
                          "type": "boolean",
                          "description": "Indicates if the calling user is a member of the channel."
                        },
                        "is_private": {
                          "type": "boolean",
                          "description": "Indicates if the channel is private."
                        },
                        "is_mpim": {
                          "type": "boolean",
                          "description": "Indicates if the object represents a multi-person direct message."
                        },
                        "topic": {
                          "type": "object",
                          "description": "An object containing the channel's topic information."
                        },
                        "purpose": {
                          "type": "object",
                          "description": "An object containing the channel's purpose information."
                        },
                        "previous_names": {
                          "type": "array",
                          "description": "A list of any previous names the channel had."
                        },
                        "num_members": {
                          "type": "integer",
                          "description": "The number of members in the channel."
                        },
                        "last_read": {
                          "type": "string",
                          "description": "The timestamp of the last message the user read in the channel."
                        },
                        "latest": {
                          "type": "object",
                          "description": "The latest message in the channel."
                        },
                        "unread_count": {
                          "type": "integer",
                          "description": "The number of unread messages for the user in the channel."
                        },
                        "unread_count_display": {
                          "type": "integer",
                          "description": "The number of unread messages to display for the user."
                        },
                        "is_open": {
                          "type": "boolean",
                          "description": "Indicates if the channel is open for the user."
                        }
                      }
                    }
                  },
                  "required": ["ok", "channel"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not authorized to add user to channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Channel or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/createChannel": {
      "post": {
        "operationId": "createChannel",
        "summary": "Creates a new channel in Slack.",
        "description": "Creates a new channel in Slack, which can be either public or private.",
        "tags": ["channel"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the createChannel sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the channel to create."
                          },
                          "isPrivate": {
                            "type": "boolean",
                            "description": "Whether the channel should be private. Defaults to false."
                          },
                          "join": {
                            "type": "boolean",
                            "description": "Whether the user should join the channel. Defaults to true."
                          }
                        },
                        "required": ["name"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the channel."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the channel."
                    },
                    "is_channel": {
                      "type": "boolean",
                      "description": "Indicates if the object represents a channel."
                    },
                    "is_group": {
                      "type": "boolean",
                      "description": "Indicates if the object represents a private channel."
                    },
                    "is_im": {
                      "type": "boolean",
                      "description": "Indicates if the object represents a direct message conversation."
                    },
                    "created": {
                      "type": "integer",
                      "description": "A Unix timestamp indicating when the channel was created."
                    },
                    "creator": {
                      "type": "string",
                      "description": "The ID of the user who created the channel."
                    },
                    "is_archived": {
                      "type": "boolean",
                      "description": "Indicates if the channel is archived."
                    },
                    "is_general": {
                      "type": "boolean",
                      "description": "Indicates if the channel is the default \"general\" channel."
                    },
                    "unlinked": {
                      "type": "integer",
                      "description": "The number of members that have been removed from the channel"
                    },
                    "name_normalized": {
                      "type": "string",
                      "description": "The channel name, but with any special characters replaced."
                    },
                    "is_shared": {
                      "type": "boolean",
                      "description": "Indicates if the channel is shared with other workspaces."
                    },
                    "is_ext_shared": {
                      "type": "boolean",
                      "description": "Indicates if the channel is part of an external shared connection."
                    },
                    "is_org_shared": {
                      "type": "boolean",
                      "description": "Indicates if the channel is shared with the entire organization."
                    },
                    "pending_shared": {
                      "type": "array",
                      "description": "A list of team IDs that have been invited to the channel but have not yet joined",
                      "items": {
                        "type": "string"
                      }
                    },
                    "is_pending_ext_shared": {
                      "type": "boolean",
                      "description": "Indicates if the conversation is ready to become an external shared channel but needs approval"
                    },
                    "is_member": {
                      "type": "boolean",
                      "description": "Indicates if the calling user is a member of the channel."
                    },
                    "is_private": {
                      "type": "boolean",
                      "description": "Indicates if the channel is private."
                    },
                    "is_mpim": {
                      "type": "boolean",
                      "description": "Indicates if the object represents a multi-person direct message."
                    },
                    "topic": {
                      "type": "object",
                      "description": "An object containing the channel's topic information."
                    },
                    "purpose": {
                      "type": "object",
                      "description": "An object containing the channel's purpose information."
                    },
                    "previous_names": {
                      "type": "array",
                      "description": "A list of any previous names the channel had."
                    },
                    "num_members": {
                      "type": "integer",
                      "description": "The number of members in the channel."
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "is_channel",
                    "is_private",
                    "created",
                    "creator"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not authorized to create channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating lack of permissions"
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating a server-side issue"
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
    "/getChannelConversationInfo": {
      "post": {
        "operationId": "getChannelConversationInfo",
        "summary": "Retrieves detailed information about a specific Slack channel.",
        "description": "Fetches comprehensive data about a given Slack channel using its ID. Returns a conversation object containing various properties that describe the channel's characteristics, status, and metadata.",
        "ai": {
          "systemPrompt": "Provide a `channelId` (starts with 'C') to retrieve conversation info. DO NOT ASSUME THE CHANNEL ID BY NAME. If the channelId is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output. If needed, paginate until the channelId is found using nextCursor in the response of the last try. This does not provide the chat history of the channel, use `getConversationHistory` to get the chat history of the channel."
        },
        "tags": ["channel"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getChannelConversationInfo sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "description": "Container for function arguments.",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "channelId: The ID of the channel to get information about. Channel IDs start with 'C'."
                          }
                        },
                        "required": ["channelId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "is_channel": {
                      "type": "boolean"
                    },
                    "is_group": {
                      "type": "boolean"
                    },
                    "is_im": {
                      "type": "boolean"
                    },
                    "is_mpim": {
                      "type": "boolean"
                    },
                    "is_private": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "integer"
                    },
                    "creator": {
                      "type": "string"
                    },
                    "is_archived": {
                      "type": "boolean"
                    },
                    "is_general": {
                      "type": "boolean"
                    },
                    "unlinked": {
                      "type": "integer"
                    },
                    "name_normalized": {
                      "type": "string"
                    },
                    "is_shared": {
                      "type": "boolean"
                    },
                    "is_frozen": {
                      "type": "boolean"
                    },
                    "is_org_shared": {
                      "type": "boolean"
                    },
                    "is_pending_ext_shared": {
                      "type": "boolean",
                      "description": "Indicates if the conversation is ready to become an external shared channel but needs approval"
                    },
                    "pending_shared": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context_team_id": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "integer"
                    },
                    "parent_conversation": {
                      "type": "string"
                    },
                    "is_ext_shared": {
                      "type": "boolean"
                    },
                    "shared_team_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pending_connected_team_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "is_member": {
                      "type": "boolean"
                    },
                    "topic": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "creator": {
                          "type": "string"
                        },
                        "last_set": {
                          "type": "integer"
                        }
                      }
                    },
                    "purpose": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "creator": {
                          "type": "string"
                        },
                        "last_set": {
                          "type": "integer"
                        }
                      }
                    },
                    "previous_names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "num_members": {
                      "type": "integer"
                    },
                    "locale": {
                      "type": "string"
                    },
                    "last_read": {
                      "type": "integer"
                    },
                    "latest": {
                      "type": "string"
                    },
                    "unread_count": {
                      "type": "integer"
                    },
                    "unread_count_display": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server cannot process the request due to a client error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it doesn't know how to handle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getConversationHistory": {
      "post": {
        "operationId": "getConversationHistory",
        "summary": "Fetches a conversation's history of messages and events.",
        "description": "Fetches a conversation's history of messages and events from a specific channel.",
        "tags": ["channel", "message"],
        "ai": {
          "systemPrompt": "Provide a `channelId` (starts with 'C') to retrieve conversation history. DO NOT ASSUME THE CHANNEL ID BY NAME. If the channel ID is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output. If needed, paginate until the channelId is found using nextCursor in the response of the last try"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getConversationHistory sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel to fetch history for. Channel IDs start with 'C'."
                          },
                          "limit": {
                            "type": "integer",
                            "description": "The maximum number of items to return."
                          },
                          "latest": {
                            "type": "string",
                            "description": "End of the time range of messages to include in results."
                          },
                          "oldest": {
                            "type": "string",
                            "description": "Start of the time range of messages to include in results."
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Include messages with latest or oldest timestamps in results."
                          },
                          "cursor": {
                            "type": "string",
                            "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata."
                          }
                        },
                        "required": ["channelId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "ts": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The server cannot process the request due to a client error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserInfo": {
      "post": {
        "operationId": "getUserInfo",
        "summary": "Retrieves detailed information about a specific Slack user.",
        "description": "Fetches comprehensive details about a Slack user, including their profile information, team membership, and account status.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserInfo sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "description": "Container for function arguments.",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "userId: The ID of the user to get information for. User IDs start with 'U'."
                          }
                        },
                        "required": ["userId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The user's ID."
                    },
                    "team_id": {
                      "type": "string",
                      "description": "The ID of the team the user belongs to."
                    },
                    "name": {
                      "type": "string",
                      "description": "The user's username."
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "true if the user has been deleted."
                    },
                    "color": {
                      "type": "string",
                      "description": "A hexadecimal color code that is used to color the user's name in Slack clients."
                    },
                    "real_name": {
                      "type": "string",
                      "description": "The user's real name."
                    },
                    "tz": {
                      "type": "string",
                      "description": "The user's timezone (e.g., America/Los_Angeles)."
                    },
                    "tz_label": {
                      "type": "string",
                      "description": "A human-readable string for the user's timezone."
                    },
                    "tz_offset": {
                      "type": "integer",
                      "description": "The user's timezone offset in seconds."
                    },
                    "profile": {
                      "type": "object",
                      "description": "A profile object containing more details about the user.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The user's title."
                        },
                        "phone": {
                          "type": "string",
                          "description": "The user's phone number."
                        },
                        "skype": {
                          "type": "string",
                          "description": "The user's Skype username."
                        },
                        "real_name": {
                          "type": "string",
                          "description": "The user's real name."
                        },
                        "real_name_normalized": {
                          "type": "string",
                          "description": "The user's real name, normalized."
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The user's display name."
                        },
                        "display_name_normalized": {
                          "type": "string",
                          "description": "The user's display name, normalized."
                        },
                        "status_text": {
                          "type": "string",
                          "description": "The user's status text."
                        },
                        "status_emoji": {
                          "type": "string",
                          "description": "The user's status emoji."
                        },
                        "avatar_hash": {
                          "type": "string",
                          "description": "A hash of the user's avatar image."
                        },
                        "image_original": {
                          "type": "string",
                          "description": "The URL of the user's original-sized profile image."
                        },
                        "image_24": {
                          "type": "string",
                          "description": "The URL of the user's 24x24 profile image."
                        },
                        "image_32": {
                          "type": "string",
                          "description": "The URL of the user's 32x32 profile image."
                        },
                        "image_48": {
                          "type": "string",
                          "description": "The URL of the user's 48x48 profile image."
                        },
                        "image_72": {
                          "type": "string",
                          "description": "The URL of the user's 72x72 profile image."
                        },
                        "image_192": {
                          "type": "string",
                          "description": "The URL of the user's 192x192 profile image."
                        },
                        "image_512": {
                          "type": "string",
                          "description": "The URL of the user's 512x512 profile image."
                        },
                        "team": {
                          "type": "string",
                          "description": "The ID of the team the user belongs to."
                        }
                      }
                    },
                    "is_admin": {
                      "type": "boolean",
                      "description": "true if the user is an admin."
                    },
                    "is_owner": {
                      "type": "boolean",
                      "description": "true if the user is an owner."
                    },
                    "is_primary_owner": {
                      "type": "boolean",
                      "description": "true if the user is the primary owner."
                    },
                    "is_restricted": {
                      "type": "boolean",
                      "description": "true if the user is a restricted user (single-channel guest)."
                    },
                    "is_ultra_restricted": {
                      "type": "boolean",
                      "description": "true if the user is an ultra-restricted user (multi-channel guest)."
                    },
                    "is_bot": {
                      "type": "boolean",
                      "description": "true if the user is a bot."
                    },
                    "updated": {
                      "type": "integer",
                      "description": "A timestamp of when the user's profile was last updated."
                    },
                    "is_app_user": {
                      "type": "boolean",
                      "description": "true if the user is an app user."
                    },
                    "has_2fa": {
                      "type": "boolean",
                      "description": "true if the user has two-factor authentication enabled."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid user ID or other client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/joinChannel": {
      "post": {
        "operationId": "joinChannel",
        "summary": "Joins a Slack channel.",
        "description": "Join a specified Slack channel.",
        "tags": ["channel"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the joinChannel sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel to join. Channel IDs start with 'C'."
                          }
                        },
                        "required": ["channelId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the channel."
                        }
                      }
                    }
                  },
                  "required": ["ok", "channel"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not authorized to join channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["ok", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/getActiveUsers": {
      "post": {
        "operationId": "getActiveUsers",
        "summary": "Lists all active users in a Slack workspace.",
        "description": "Retrieves a list of all active users in a Slack workspace, excluding any deactivated users. It provides detailed information about each user.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getActiveUsers sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "description": "Container for function arguments.",
                        "properties": {
                          "includeBots": {
                            "type": "boolean",
                            "description": "Whether to include bots."
                          },
                          "cursor": {
                            "type": "string",
                            "description": "A cursor to the next page of results."
                          },
                          "limit": {
                            "type": "number",
                            "description": "The maximum number of users to return."
                          }
                        }
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing an array of active user objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the workspace user"
                          },
                          "team_id": {
                            "type": "string",
                            "description": "The ID of the team the user belongs to"
                          },
                          "name": {
                            "type": "string",
                            "description": "The username of the user"
                          },
                          "deleted": {
                            "type": "boolean",
                            "description": "Indicates if the user has been deactivated (always false for this method)"
                          },
                          "color": {
                            "type": "string",
                            "description": "Used in some clients to display a special username color"
                          },
                          "real_name": {
                            "type": "string",
                            "description": "The user's first and last name"
                          },
                          "tz": {
                            "type": "string",
                            "description": "A human-readable string for the geographic timezone-related region"
                          },
                          "tz_label": {
                            "type": "string",
                            "description": "Describes the commonly used name of the tz timezone"
                          },
                          "tz_offset": {
                            "type": "integer",
                            "description": "Number of seconds to offset UTC time by for this user's tz"
                          },
                          "profile": {
                            "type": "object",
                            "description": "The profile object contains the default fields of a user's workspace profile",
                            "properties": {
                              "title": { "type": "string" },
                              "phone": { "type": "string" },
                              "skype": { "type": "string" },
                              "real_name": { "type": "string" },
                              "real_name_normalized": { "type": "string" },
                              "display_name": { "type": "string" },
                              "display_name_normalized": { "type": "string" },
                              "fields": { "type": "object" },
                              "status_text": { "type": "string" },
                              "status_emoji": { "type": "string" },
                              "status_expiration": { "type": "integer" },
                              "avatar_hash": { "type": "string" },
                              "start_date": { "type": "string" },
                              "image_original": { "type": "string" },
                              "is_custom_image": { "type": "boolean" },
                              "email": { "type": "string" },
                              "pronouns": { "type": "string" },
                              "first_name": { "type": "string" },
                              "last_name": { "type": "string" },
                              "image_24": { "type": "string" },
                              "image_32": { "type": "string" },
                              "image_48": { "type": "string" },
                              "image_72": { "type": "string" },
                              "image_192": { "type": "string" },
                              "image_512": { "type": "string" },
                              "image_1024": { "type": "string" },
                              "status_text_canonical": { "type": "string" },
                              "team": { "type": "string" }
                            }
                          },
                          "is_admin": {
                            "type": "boolean",
                            "description": "Indicates whether the user is an Admin of the current workspace"
                          },
                          "is_owner": {
                            "type": "boolean",
                            "description": "Indicates whether the user is an Owner of the current workspace"
                          },
                          "is_primary_owner": {
                            "type": "boolean",
                            "description": "Indicates whether the user is the Primary Owner of the current workspace"
                          },
                          "is_restricted": {
                            "type": "boolean",
                            "description": "Indicates whether or not the user is a guest user"
                          },
                          "is_ultra_restricted": {
                            "type": "boolean",
                            "description": "Indicates whether or not the user is a single-channel guest"
                          },
                          "is_bot": {
                            "type": "boolean",
                            "description": "Indicates whether the user is a bot user"
                          },
                          "is_app_user": {
                            "type": "boolean",
                            "description": "Indicates whether the user is an authorized user of the calling app"
                          },
                          "updated": {
                            "type": "string",
                            "description": "A Unix timestamp indicating when the user object was last updated"
                          },
                          "is_email_confirmed": {
                            "type": "boolean",
                            "description": "Indicates if the user's email address has been confirmed"
                          },
                          "who_can_share_contact_card": {
                            "type": "string",
                            "description": "Who can share the user's contact card"
                          },
                          "enterprise_user": {
                            "type": "object",
                            "description": "An object containing info related to an Enterprise Grid user"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Indicates if the user is active"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "A cursor to the next page of results"
                    }
                  },
                  "required": ["users", "nextCursor"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getChannelsIds": {
      "post": {
        "operationId": "getChannelsIds",
        "summary": "Retrieves a map of channel IDs to channel names.",
        "description": "Returns an array of minimal objects, each containing the ID and name of a channel in the workspace. This is a helper to get the channel IDs by names.",
        "tags": ["channel"],
        "ai": {
          "systemPrompt": "Lists all public and private channels in the workspace and returns a map of their IDs and names. Use this when searching for channelId by channel name."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getChannelsIds sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "description": "Container for function arguments.",
                        "properties": {
                          "cursor": {
                            "type": "string",
                            "description": "A cursor to the next page of results."
                          },
                          "limit": {
                            "type": "number",
                            "description": "The maximum number of channels to return. Defaults to 50."
                          }
                        }
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the channel."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the channel."
                          }
                        },
                        "required": ["id", "name"]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "A cursor to the next page of results"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getChannels": {
      "post": {
        "operationId": "getChannels",
        "summary": "Lists all public and private channels in a Slack workspace.",
        "description": "Retrieves detailed information about all public and private channels in a Slack workspace.",
        "tags": ["channel"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getChannels sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "description": "Container for function arguments.",
                        "properties": {
                          "cursor": {
                            "type": "string",
                            "description": "A cursor to the next page of results."
                          },
                          "limit": {
                            "type": "number",
                            "description": "The maximum number of channels to return. Defaults to 50."
                          }
                        }
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response containing an array of conversation objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the conversation"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the channel-like thing, without a leading hash sign"
                          },
                          "is_channel": {
                            "type": "boolean",
                            "description": "Indicates whether a conversation is a channel"
                          },
                          "is_group": {
                            "type": "boolean",
                            "description": "Means the channel is a private channel created before March 2021"
                          },
                          "is_im": {
                            "type": "boolean",
                            "description": "Means the conversation is a direct message between two individuals or a user and a bot"
                          },
                          "is_mpim": {
                            "type": "boolean",
                            "description": "Represents an unnamed private conversation between multiple users"
                          },
                          "is_private": {
                            "type": "boolean",
                            "description": "Means the conversation is privileged between two or more members"
                          },
                          "created": {
                            "type": "integer",
                            "description": "Timestamp of when the conversation was created"
                          },
                          "creator": {
                            "type": "string",
                            "description": "The ID of the member that created this conversation"
                          },
                          "is_archived": {
                            "type": "boolean",
                            "description": "Indicates a conversation is archived"
                          },
                          "is_general": {
                            "type": "boolean",
                            "description": "Means the channel is the workspace's 'general' discussion channel"
                          },
                          "unlinked": { "type": "integer" },
                          "name_normalized": {
                            "type": "string",
                            "description": "The 'normalized' name of a channel"
                          },
                          "is_shared": {
                            "type": "boolean",
                            "description": "Means the conversation is shared between multiple workspaces"
                          },
                          "is_frozen": {
                            "type": "boolean",
                            "description": "Indicates that the channel is frozen"
                          },
                          "is_org_shared": {
                            "type": "boolean",
                            "description": "Indicates whether this shared channel is shared between Enterprise Grid workspaces within the same organization"
                          },
                          "is_pending_ext_shared": {
                            "type": "boolean",
                            "description": "Means the conversation is ready to become an is_ext_shared channel, but needs approval"
                          },
                          "pending_shared": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "A list of team IDs that have been invited to the channel but have not yet joined"
                          },
                          "context_team_id": {
                            "type": "string",
                            "description": "The team ID of the team that this channel belongs to"
                          },
                          "updated": {
                            "type": "integer",
                            "description": "The timestamp, in milliseconds, when the channel settings were updated"
                          },
                          "parent_conversation": {
                            "type": "string",
                            "description": "The ID of the parent conversation for threaded messages"
                          },
                          "is_ext_shared": {
                            "type": "boolean",
                            "description": "Indicates whether a conversation is part of a Shared Channel with a remote organization"
                          },
                          "shared_team_ids": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "A list of team IDs that are part of this shared channel"
                          },
                          "pending_connected_team_ids": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "A list of team IDs that have been invited to connect to the channel but have not yet accepted"
                          },
                          "is_member": {
                            "type": "boolean",
                            "description": "Indicates whether the user, bot user or Slack app associated with the token making the API call is itself a member of the conversation"
                          },
                          "topic": {
                            "type": "object",
                            "properties": {
                              "value": { "type": "string" },
                              "creator": { "type": "string" },
                              "last_set": { "type": "integer" }
                            },
                            "description": "Provides information about the channel topic"
                          },
                          "purpose": {
                            "type": "object",
                            "properties": {
                              "value": { "type": "string" },
                              "creator": { "type": "string" },
                              "last_set": { "type": "integer" }
                            },
                            "description": "Provides information about the channel purpose"
                          },
                          "previous_names": {
                            "type": "array",
                            "items": { "type": "string" },
                            "description": "A list of previous names for the channel"
                          },
                          "num_members": {
                            "type": "integer",
                            "description": "The number of members in the conversation"
                          },
                          "locale": {
                            "type": "string",
                            "description": "The locale for this conversation"
                          },
                          "last_read": {
                            "type": "integer",
                            "description": "The timestamp for the last message the calling user has read in this channel"
                          },
                          "latest": {
                            "type": "string",
                            "description": "The latest message in the channel"
                          },
                          "unread_count": {
                            "type": "integer",
                            "description": "A full count of visible messages that the calling user has yet to read"
                          },
                          "unread_count_display": {
                            "type": "integer",
                            "description": "A count of messages that the calling user has yet to read that matter to them"
                          }
                        },
                        "required": ["id", "name", "is_channel"]
                      },
                      "nextCursor": {
                        "type": "string",
                        "description": "A cursor to the next page of results"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be served",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it doesn't know how to handle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "error": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/getChannelMembers": {
      "post": {
        "operationId": "getChannelMembers",
        "summary": "List all users in a specific Slack channel.",
        "description": "Retrieves a list of all users in a specified Slack channel. It provides a detailed information about each user.",
        "tags": ["channel", "user"],
        "ai": {
          "systemPrompt": "To get a list of users in a specific channel, provide the `channelId` (starts with 'C'). DO NOT ASSUME THE CHANNEL ID BY NAME. If the channelId is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output. If needed, paginate until the channelId is found using nextCursor in the response of the last try. DO NOT CALL THIS ON NEWLY CREATED CHANNELS which don't have any members yet."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getChannelMembers sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "description": "Container for function arguments.",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "channelId: The ID of the channel to get the members of. Channel IDs start with 'C'."
                          }
                        },
                        "required": ["channelId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "User ID"
                  },
                  "description": "An array of user IDs who are members of the specified channel."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid channel ID or other client error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getActiveUsersIds": {
      "post": {
        "operationId": "getActiveUsersIds",
        "summary": "Retrieves a map of user IDs to user names and emails.",
        "description": "Returns an array of objects, each containing the ID, name, real name, display name, title, and email of an active users in the workspace.",
        "tags": ["user"],
        "ai": {
          "systemPrompt": "This function lists all active users in the workspace and returns a map of their IDs, names, and emails. ALWAYS use this when you need to find a userId by their name or email. If needed, paginate until the userId is found using nextCursor in the response of the last try"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getActiveUsersIds sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "includeBots": {
                            "type": "boolean",
                            "description": "Whether to include bot users in the list. Defaults to false."
                          },
                          "cursor": {
                            "type": "string",
                            "description": "A cursor to the next page of results."
                          },
                          "limit": {
                            "type": "number",
                            "description": "The maximum number of users to return."
                          }
                        }
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the user."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the user."
                          },
                          "real_name": {
                            "type": "string",
                            "description": "The real name of the user."
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the user."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the user."
                          },
                          "email": {
                            "type": "string",
                            "description": "The email of the user."
                          }
                        },
                        "required": ["id", "name"]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "A cursor to the next page of results"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messageChannel": {
      "post": {
        "operationId": "messageChannel",
        "summary": "Send a message to a Slack channel.",
        "description": "Sends a text message to a specified Slack channel. Returns details about the sent message including its timestamp and channel.",
        "tags": ["message", "channel"],
        "ai": {
          "systemPrompt": "Requires `channelId` (starts with 'C') and `text` to send a message to a channel. DO NOT ASSUME THE CHANNEL ID BY NAME. If channelId is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the messageChannel sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel to send the message to. Channel IDs start with 'C'."
                          },
                          "text": {
                            "type": "string",
                            "description": "The text of the message."
                          }
                        },
                        "required": ["channelId", "text"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "true if the request was successful."
                    },
                    "channel": {
                      "type": "string",
                      "description": "The ID of the channel where the message was posted."
                    },
                    "ts": {
                      "type": "string",
                      "description": "The timestamp of the message."
                    },
                    "message": {
                      "type": "object",
                      "description": "An object containing the details of the sent message."
                    }
                  },
                  "required": ["ok", "channel", "ts", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be served.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messageUser": {
      "post": {
        "operationId": "messageUser",
        "summary": "Send a direct message to a Slack user.",
        "description": "Sends a direct message to a specified Slack user. Returns details about the sent message, including its timestamp and the channel where it was posted.",
        "tags": ["message", "user"],
        "ai": {
          "systemPrompt": "To send a direct message, provide the `userId` (starts with 'U'). DO NOT ASSUME THE USER ID BY NAME. If the user's ID is unknown, use `getActiveUsersIds` to get the paginated userIds to names mapper and find the userId by name from the output or use `getUsersByEmails` only if exact user email is known."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the messageUser sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user to send the message to. User IDs start with 'U'."
                          },
                          "text": {
                            "type": "string",
                            "description": "The text of the message to be sent."
                          }
                        },
                        "required": ["userId", "text"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "true if the request was successful."
                    },
                    "channel": {
                      "type": "string",
                      "description": "The ID of the channel where the message was posted."
                    },
                    "ts": {
                      "type": "string",
                      "description": "The timestamp of the message."
                    },
                    "message": {
                      "type": "object",
                      "description": "An object containing the details of the sent message.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of message."
                        },
                        "subtype": {
                          "type": "string",
                          "description": "The subtype of the message."
                        },
                        "text": {
                          "type": "string",
                          "description": "The text of the message."
                        },
                        "ts": {
                          "type": "string",
                          "description": "The timestamp of the message."
                        },
                        "bot_id": {
                          "type": "string",
                          "description": "The ID of the bot that sent the message."
                        },
                        "username": {
                          "type": "string",
                          "description": "The username of the bot that sent the message."
                        },
                        "attachments": {
                          "type": "array",
                          "description": "An array of attachments."
                        }
                      }
                    }
                  },
                  "required": ["ok", "channel", "ts", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be served.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reactMessage": {
      "post": {
        "operationId": "reactMessage",
        "summary": "Adds a reaction to a message in Slack.",
        "description": "Adds an emoji reaction to a specific message in a Slack channel. It requires the channel ID, message timestamp, and the name of the emoji reaction.",
        "tags": ["message"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the reactMessage sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel where the message is. Channel IDs start with 'C'."
                          },
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp of the message to react to."
                          },
                          "reaction": {
                            "type": "string",
                            "description": "The name of the emoji to use for the reaction (e.g., \"thumbsup\")."
                          }
                        },
                        "required": ["channelId", "timestamp", "reaction"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "true if the request was successful."
                    }
                  },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeUserFromChannel": {
      "post": {
        "operationId": "removeUserFromChannel",
        "summary": "Removes a user from a Slack channel.",
        "description": "Removes a specified user from a given Slack channel.",
        "tags": ["channel", "user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the removeUserFromChannel sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel to remove the user from. Channel IDs start with 'C'."
                          },
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user to remove. User IDs start with 'U'."
                          }
                        },
                        "required": ["channelId", "userId"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful."
                    }
                  },
                  "required": ["ok"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/replyMessage": {
      "post": {
        "operationId": "replyMessage",
        "summary": "Replies to a message in a Slack thread.",
        "description": "Replies to an existing message in a Slack thread.",
        "tags": ["message"],
        "ai": {
          "systemPrompt": "To reply within a thread, provide the `channelId` (starts with 'C'), the `thread_ts` of the parent message, and the `text` of your reply. DO NOT ASSUME THE CHANNEL ID OR THREAD TIMESTAMP BY NAME. If channelId is unknown, use `getChannelsIds` to get the paginated channelIds to names mapper and find the channelId by name from the output. If thread_ts is unknown, use `getConversationHistory` to find it."
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the replyMessage sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "channelId": {
                            "type": "string",
                            "description": "The ID of the channel where the message is. Channel IDs start with 'C'."
                          },
                          "thread_ts": {
                            "type": "string",
                            "description": "The timestamp of the message to reply to, which establishes the thread."
                          },
                          "text": {
                            "type": "string",
                            "description": "The text of the reply."
                          }
                        },
                        "required": ["channelId", "thread_ts", "text"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "true if the request was successful."
                    },
                    "channel": {
                      "type": "string",
                      "description": "The ID of the channel where the message was posted."
                    },
                    "ts": {
                      "type": "string",
                      "description": "The timestamp of the message."
                    },
                    "message": {
                      "type": "object",
                      "description": "An object containing the details of the sent message."
                    }
                  },
                  "required": ["ok", "channel", "ts", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be served.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserByEmail": {
      "post": {
        "operationId": "getUserByEmail",
        "summary": "Searches for a Slack user by their email address.",
        "description": "Finds a user in a Slack workspace using their email address. Returns a comprehensive user object containing detailed information about the found user.",
        "ai": {
          "systemPrompt": "Provide the `email` of the user to find. DO NOT ASSUME THE EMAIL BY NAME. If the email is unknown, use `getActiveUsersIds` to get the paginated userIds to names mapper and find the userId by email from the output."
        },
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUserByEmail sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The email address of the user to find."
                          }
                        },
                        "required": ["email"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "team_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "deleted": {
                      "type": "boolean"
                    },
                    "color": {
                      "type": "string"
                    },
                    "real_name": {
                      "type": "string"
                    },
                    "tz": {
                      "type": "string"
                    },
                    "tz_label": {
                      "type": "string"
                    },
                    "tz_offset": {
                      "type": "integer"
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "skype": {
                          "type": "string"
                        },
                        "real_name": {
                          "type": "string"
                        },
                        "real_name_normalized": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "display_name_normalized": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object"
                        },
                        "status_text": {
                          "type": "string"
                        },
                        "status_emoji": {
                          "type": "string"
                        },
                        "status_expiration": {
                          "type": "integer"
                        },
                        "avatar_hash": {
                          "type": "string"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "image_original": {
                          "type": "string"
                        },
                        "is_custom_image": {
                          "type": "boolean"
                        },
                        "email": {
                          "type": "string"
                        },
                        "pronouns": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "image_24": {
                          "type": "string"
                        },
                        "image_32": {
                          "type": "string"
                        },
                        "image_48": {
                          "type": "string"
                        },
                        "image_72": {
                          "type": "string"
                        },
                        "image_192": {
                          "type": "string"
                        },
                        "image_512": {
                          "type": "string"
                        },
                        "image_1024": {
                          "type": "string"
                        },
                        "status_text_canonical": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        }
                      }
                    },
                    "is_admin": {
                      "type": "boolean"
                    },
                    "is_owner": {
                      "type": "boolean"
                    },
                    "is_primary_owner": {
                      "type": "boolean"
                    },
                    "is_restricted": {
                      "type": "boolean"
                    },
                    "is_ultra_restricted": {
                      "type": "boolean"
                    },
                    "is_bot": {
                      "type": "boolean"
                    },
                    "is_app_user": {
                      "type": "boolean"
                    },
                    "updated": {
                      "type": "string"
                    },
                    "is_email_confirmed": {
                      "type": "boolean"
                    },
                    "who_can_share_contact_card": {
                      "type": "string"
                    },
                    "enterprise_user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid email format or missing email"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/getUsersByEmails": {
      "post": {
        "operationId": "getUsersByEmails",
        "summary": "Searches for multiple Slack users by their email addresses.",
        "description": "Finds multiple users in a Slack workspace using their email addresses. Returns an array of comprehensive user objects containing detailed information about the found users.",
        "tags": ["user"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the getUsersByEmails sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of email addresses for the users to find."
                          }
                        },
                        "required": ["emails"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "team_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "color": {
                          "type": "string"
                        },
                        "real_name": {
                          "type": "string"
                        },
                        "tz": {
                          "type": "string"
                        },
                        "tz_label": {
                          "type": "string"
                        },
                        "tz_offset": {
                          "type": "integer"
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "skype": {
                              "type": "string"
                            },
                            "real_name": {
                              "type": "string"
                            },
                            "real_name_normalized": {
                              "type": "string"
                            },
                            "display_name": {
                              "type": "string"
                            },
                            "display_name_normalized": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object"
                            },
                            "status_text": {
                              "type": "string"
                            },
                            "status_emoji": {
                              "type": "string"
                            },
                            "status_expiration": {
                              "type": "integer"
                            },
                            "avatar_hash": {
                              "type": "string"
                            },
                            "start_date": {
                              "type": "string"
                            },
                            "image_original": {
                              "type": "string"
                            },
                            "is_custom_image": {
                              "type": "boolean"
                            },
                            "email": {
                              "type": "string"
                            },
                            "pronouns": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            },
                            "image_24": {
                              "type": "string"
                            },
                            "image_32": {
                              "type": "string"
                            },
                            "image_48": {
                              "type": "string"
                            },
                            "image_72": {
                              "type": "string"
                            },
                            "image_192": {
                              "type": "string"
                            },
                            "image_512": {
                              "type": "string"
                            },
                            "image_1024": {
                              "type": "string"
                            },
                            "status_text_canonical": {
                              "type": "string"
                            },
                            "team": {
                              "type": "string"
                            }
                          }
                        },
                        "is_admin": {
                          "type": "boolean"
                        },
                        "is_owner": {
                          "type": "boolean"
                        },
                        "is_primary_owner": {
                          "type": "boolean"
                        },
                        "is_restricted": {
                          "type": "boolean"
                        },
                        "is_ultra_restricted": {
                          "type": "boolean"
                        },
                        "is_bot": {
                          "type": "boolean"
                        },
                        "is_app_user": {
                          "type": "boolean"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "is_email_confirmed": {
                          "type": "boolean"
                        },
                        "who_can_share_contact_card": {
                          "type": "string"
                        },
                        "enterprise_user": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid email format or missing email"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/setReminder": {
      "post": {
        "operationId": "setReminder",
        "summary": "Sets a reminder for a user in Slack.",
        "description": "Creates a new reminder for a specified user in Slack. It allows setting the reminder text and the time when the reminder should be triggered.",
        "tags": ["user", "reminder"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the setReminder sls call",
                    "properties": {
                      "arguments": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user to set a reminder for. User IDs start with 'U'."
                          },
                          "text": {
                            "type": "string",
                            "description": "The text of the reminder."
                          },
                          "time": {
                            "type": "string",
                            "description": "A string describing when the reminder should fire (e.g., \"in 5 minutes\", \"at 10pm\", or a Unix timestamp)."
                          }
                        },
                        "required": ["userId", "text", "time"]
                      }
                    },
                    "required": ["arguments"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "true if the request was successful."
                    },
                    "reminder": {
                      "type": "object",
                      "description": "An object containing details of the new reminder.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the created reminder."
                        }
                      }
                    }
                  },
                  "required": ["ok", "reminder"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was invalid or cannot be served.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "channel",
      "description": "Operations related to Slack channels."
    },
    {
      "name": "user",
      "description": "Operations related to Slack users."
    },
    {
      "name": "message",
      "description": "Operations related to sending and managing messages."
    },
    {
      "name": "file",
      "description": "Operations related to files in Slack."
    },
    {
      "name": "reminder",
      "description": "Operations related to setting reminders."
    }
  ]
}
