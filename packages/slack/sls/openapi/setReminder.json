{
  "post": {
    "operationId": "setReminder",
    "summary": "Sets a reminder for a user in Slack.",
    "description": "The setReminder function creates a new reminder for a specified user in Slack. It allows setting the reminder text and the time when the reminder should be triggered. This function is part of the MicrofoxSlackClient and interacts with Slack's API to manage reminders.",
    "tags": [
      "user",
      "reminder"
    ],
    "ai": {
      "systemPrompt": "Set a reminder by providing a `userId`, the reminder `text`, and the `time` (e.g., 'in 30 minutes' or a Unix timestamp)."
    },
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the setReminder sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The ID of the user to set a reminder for."
                      },
                      "text": {
                        "type": "string",
                        "description": "The text of the reminder."
                      },
                      "time": {
                        "type": "string",
                        "description": "A string describing when the reminder should fire (e.g., \"in 5 minutes\", \"at 10pm\", or a Unix timestamp)."
                      }
                    },
                    "required": [
                      "userId",
                      "text",
                      "time"
                    ]
                  },
                  "constructor": {
                    "type": "string",
                    "description": "Name of the constructor to use.",
                    "enum": [
                      "MicrofoxSlackClient"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "true if the request was successful."
                },
                "reminder": {
                  "type": "object",
                  "description": "An object containing details of the new reminder.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the created reminder."
                    }
                  }
                }
              },
              "required": [
                "ok",
                "reminder"
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad Request - The request was invalid or cannot be served.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error - The server has encountered a situation it doesn't know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}