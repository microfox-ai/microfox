{
  "post": {
    "operationId": "conversations.history",
    "summary": "Fetches a conversation's history of messages and events.",
    "description": "This function retrieves the message and event history for a specified conversation (channel) in Slack. It allows for pagination and filtering of results based on timestamps. The function returns an array of message objects along with metadata about the conversation and response.",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the conversations.history sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "description": "Parameters for fetching conversation history",
                    "properties": {
                      "channel": {
                        "type": "string",
                        "description": "Conversation ID to fetch history for."
                      },
                      "cursor": {
                        "type": "string",
                        "description": "Pagination cursor for fetching next set of results."
                      },
                      "include_all_metadata": {
                        "type": "boolean",
                        "description": "Whether to return all metadata associated with messages.",
                        "default": false
                      },
                      "inclusive": {
                        "type": "boolean",
                        "description": "Include messages with 'oldest' or 'latest' timestamps in results."
                      },
                      "latest": {
                        "type": "string",
                        "description": "Unix timestamp. Only messages before this time will be included."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of items to return."
                      },
                      "oldest": {
                        "type": "string",
                        "description": "Unix timestamp. Only messages after this time will be included."
                      }
                    },
                    "required": [
                      "channel"
                    ]
                  },
                  "constructor": {
                    "type": "string",
                    "description": "Name of the constructor to use.",
                    "enum": [
                      "WebClient"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response with conversation history",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "Indicates if the request was successful."
                },
                "messages": {
                  "type": "array",
                  "description": "Array of message objects",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of message."
                      },
                      "user": {
                        "type": "string",
                        "description": "The ID of the user who sent the message."
                      },
                      "text": {
                        "type": "string",
                        "description": "The text of the message."
                      },
                      "ts": {
                        "type": "string",
                        "description": "The timestamp of the message."
                      }
                    }
                  }
                },
                "has_more": {
                  "type": "boolean",
                  "description": "Indicates if there are more messages to retrieve."
                },
                "pin_count": {
                  "type": "integer",
                  "description": "The number of pinned messages in the channel."
                },
                "response_metadata": {
                  "type": "object",
                  "description": "An object containing pagination information."
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "channel_not_found",
                    "invalid_cursor",
                    "invalid_ts_latest",
                    "invalid_ts_oldest",
                    "not_in_channel",
                    "missing_scope",
                    "invalid_arg_name",
                    "invalid_array_arg",
                    "invalid_charset",
                    "invalid_form_data",
                    "invalid_post_type",
                    "missing_post_type"
                  ]
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "not_authed",
                    "invalid_auth",
                    "account_inactive",
                    "token_revoked"
                  ]
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Permission error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "no_permission"
                  ]
                }
              }
            }
          }
        }
      },
      "429": {
        "description": "Rate limited",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "ratelimited"
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "fatal_error",
                    "internal_error"
                  ]
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "service_unavailable"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}