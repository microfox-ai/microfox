{
  "post": {
    "operationId": "users.lookupByEmail",
    "summary": "Look up a Slack user by their email address",
    "description": "This function finds a user in a Slack workspace using their email address. It's particularly useful for integrations where you have a user's email but not their Slack ID. The function returns detailed information about the user if found, including their profile data and various account flags.",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the users.lookupByEmail sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "description": "Parameters for looking up a user by email",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "An email address belonging to a user in the workspace"
                      }
                    },
                    "required": [
                      "email"
                    ]
                  },
                  "constructor": {
                    "type": "string",
                    "description": "Name of the constructor to use.",
                    "enum": [
                      "WebClient"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "Indicates if the request was successful"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The user's ID"
                    },
                    "team_id": {
                      "type": "string",
                      "description": "The ID of the team the user belongs to"
                    },
                    "name": {
                      "type": "string",
                      "description": "The user's username"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "True if the user has been deleted"
                    },
                    "color": {
                      "type": "string",
                      "description": "A hexadecimal color code for the user's name in Slack clients"
                    },
                    "real_name": {
                      "type": "string",
                      "description": "The user's real name"
                    },
                    "tz": {
                      "type": "string",
                      "description": "The user's timezone"
                    },
                    "tz_label": {
                      "type": "string",
                      "description": "A human-readable string for the user's timezone"
                    },
                    "tz_offset": {
                      "type": "integer",
                      "description": "The user's timezone offset in seconds"
                    },
                    "profile": {
                      "type": "object",
                      "description": "A profile object containing more details about the user",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The user's title"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The user's phone number"
                        },
                        "skype": {
                          "type": "string",
                          "description": "The user's Skype username"
                        },
                        "real_name": {
                          "type": "string",
                          "description": "The user's real name"
                        },
                        "real_name_normalized": {
                          "type": "string",
                          "description": "The user's real name, normalized"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The user's display name"
                        },
                        "display_name_normalized": {
                          "type": "string",
                          "description": "The user's display name, normalized"
                        },
                        "status_text": {
                          "type": "string",
                          "description": "The user's status text"
                        },
                        "status_emoji": {
                          "type": "string",
                          "description": "The user's status emoji"
                        },
                        "avatar_hash": {
                          "type": "string",
                          "description": "A hash of the user's avatar image"
                        },
                        "image_original": {
                          "type": "string",
                          "description": "The URL of the user's original-sized profile image"
                        },
                        "image_24": {
                          "type": "string",
                          "description": "The URL of the user's 24x24 profile image"
                        },
                        "image_32": {
                          "type": "string",
                          "description": "The URL of the user's 32x32 profile image"
                        },
                        "image_48": {
                          "type": "string",
                          "description": "The URL of the user's 48x48 profile image"
                        },
                        "image_72": {
                          "type": "string",
                          "description": "The URL of the user's 72x72 profile image"
                        },
                        "image_192": {
                          "type": "string",
                          "description": "The URL of the user's 192x192 profile image"
                        },
                        "image_512": {
                          "type": "string",
                          "description": "The URL of the user's 512x512 profile image"
                        },
                        "team": {
                          "type": "string",
                          "description": "The ID of the team the user belongs to"
                        }
                      }
                    },
                    "is_admin": {
                      "type": "boolean",
                      "description": "True if the user is an admin"
                    },
                    "is_owner": {
                      "type": "boolean",
                      "description": "True if the user is an owner"
                    },
                    "is_primary_owner": {
                      "type": "boolean",
                      "description": "True if the user is the primary owner"
                    },
                    "is_restricted": {
                      "type": "boolean",
                      "description": "True if the user is a restricted user (single-channel guest)"
                    },
                    "is_ultra_restricted": {
                      "type": "boolean",
                      "description": "True if the user is an ultra-restricted user (multi-channel guest)"
                    },
                    "is_bot": {
                      "type": "boolean",
                      "description": "True if the user is a bot"
                    },
                    "updated": {
                      "type": "integer",
                      "description": "A timestamp of when the user's profile was last updated"
                    },
                    "is_app_user": {
                      "type": "boolean",
                      "description": "True if the user is an app user"
                    },
                    "has_2fa": {
                      "type": "boolean",
                      "description": "True if the user has two-factor authentication enabled"
                    }
                  }
                }
              },
              "required": [
                "ok",
                "user"
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "users_not_found",
                    "invalid_arg_name",
                    "invalid_array_arg",
                    "invalid_charset",
                    "invalid_form_data",
                    "invalid_post_type",
                    "missing_post_type"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "401": {
        "description": "Authentication error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "not_authed",
                    "invalid_auth",
                    "account_inactive",
                    "token_revoked",
                    "no_permission"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "403": {
        "description": "Permission error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "missing_scope"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "Rate limited",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "ratelimited"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "fatal_error",
                    "internal_error"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "503": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Always false for error responses"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "service_unavailable"
                  ],
                  "description": "Error code"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      }
    }
  }
}