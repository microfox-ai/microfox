{
  "post": {
    "operationId": "replyMessage",
    "summary": "Send a threaded reply to a message in a Slack channel.",
    "description": "This function allows sending a reply to a specific message in a Slack channel, creating or continuing a thread. It takes the channel ID, the timestamp of the original message, and the reply text as inputs. The function returns details about the sent message, including its timestamp and channel information.",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the replyMessage sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "description": "Parameters for sending a reply message",
                    "properties": {
                      "channelId": {
                        "type": "string",
                        "description": "The ID of the channel where the message is"
                      },
                      "thread_ts": {
                        "type": "string",
                        "description": "The timestamp of the message to reply to, which identifies the thread"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text of the reply"
                      }
                    },
                    "required": [
                      "channelId",
                      "thread_ts",
                      "text"
                    ]
                  },
                  "constructor": {
                    "type": "string",
                    "description": "Name of the constructor to use.",
                    "enum": [
                      "MicrofoxSlackClient"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "Indicates if the request was successful"
                },
                "channel": {
                  "type": "string",
                  "description": "The ID of the channel where the message was posted"
                },
                "ts": {
                  "type": "string",
                  "description": "The timestamp of the message"
                },
                "message": {
                  "type": "object",
                  "description": "An object containing the details of the sent message",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of message"
                    },
                    "subtype": {
                      "type": "string",
                      "description": "The subtype of the message"
                    },
                    "text": {
                      "type": "string",
                      "description": "The text of the message"
                    },
                    "ts": {
                      "type": "string",
                      "description": "The timestamp of the message"
                    },
                    "bot_id": {
                      "type": "string",
                      "description": "The ID of the bot that sent the message"
                    },
                    "username": {
                      "type": "string",
                      "description": "The username of the bot that sent the message"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "An array of attachments",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "required": [
                "ok",
                "channel",
                "ts",
                "message"
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "404": {
        "description": "Not Found - Channel or message not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests - Rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      }
    }
  }
}