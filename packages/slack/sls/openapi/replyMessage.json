{
  "post": {
    "operationId": "replyMessage",
    "summary": "Replies to a message in a Slack thread.",
    "description": "Replies to an existing message in a Slack thread.",
    "tags": [
      "message"
    ],
    "ai": {
      "systemPrompt": "To reply within a thread, provide the `channelId` (starts with 'C'), the `thread_ts` of the parent message, and the `text` of your reply."
    },
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the replyMessage sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "properties": {
                      "channelId": {
                        "type": "string",
                        "description": "The ID of the channel where the message is. Channel IDs start with 'C'."
                      },
                      "thread_ts": {
                        "type": "string",
                        "description": "The timestamp of the message to reply to, which establishes the thread."
                      },
                      "text": {
                        "type": "string",
                        "description": "The text of the reply."
                      },
                      "username": {
                        "type": "string",
                        "description": "Optional custom username for the message."
                      },
                      "icon_url": {
                        "type": "string",
                        "description": "Optional URL to an image to use as the icon for the message."
                      }
                    },
                    "required": [
                      "channelId",
                      "thread_ts",
                      "text"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "true if the request was successful."
                },
                "channel": {
                  "type": "string",
                  "description": "The ID of the channel where the message was posted."
                },
                "ts": {
                  "type": "string",
                  "description": "The timestamp of the message."
                },
                "message": {
                  "type": "object",
                  "description": "An object containing the details of the sent message."
                }
              },
              "required": [
                "ok",
                "channel",
                "ts",
                "message"
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad Request - The request was invalid or cannot be served.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
