{
  "post": {
    "operationId": "views.open",
    "summary": "Opens a modal view for a user in Slack.",
    "description": "The views.open method opens a modal for a user in Slack. It requires a trigger_id obtained from a user interaction and a view payload defining the modal's content and behavior. This method allows for creating interactive surfaces for various purposes such as forms, alerts, and more.",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the views.open sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "description": "Parameters for opening a modal view",
                    "properties": {
                      "trigger_id": {
                        "type": "string",
                        "description": "A short-lived token received after a user interaction, used to open the modal"
                      },
                      "view": {
                        "type": "object",
                        "description": "A view payload defining the modal's content and behavior",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "modal"
                            ],
                            "description": "The type of view, must be 'modal' for modals"
                          },
                          "title": {
                            "type": "object",
                            "description": "The title that appears in the top-left of the modal",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "plain_text"
                                ],
                                "description": "Must be 'plain_text' for modal titles"
                              },
                              "text": {
                                "type": "string",
                                "maxLength": 24,
                                "description": "The text content of the title, max 24 characters"
                              }
                            },
                            "required": [
                              "type",
                              "text"
                            ]
                          },
                          "submit": {
                            "type": "object",
                            "description": "Defines the text displayed in the submit button",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "plain_text"
                                ],
                                "description": "Must be 'plain_text' for submit button"
                              },
                              "text": {
                                "type": "string",
                                "maxLength": 24,
                                "description": "The text content of the submit button, max 24 characters"
                              }
                            },
                            "required": [
                              "type",
                              "text"
                            ]
                          },
                          "blocks": {
                            "type": "array",
                            "description": "An array of blocks that defines the content of the view",
                            "maxItems": 100,
                            "items": {
                              "type": "object",
                              "description": "A block object defining part of the modal's content"
                            }
                          },
                          "private_metadata": {
                            "type": "string",
                            "maxLength": 3000,
                            "description": "A string sent to your app in view_submission and block_actions events"
                          },
                          "callback_id": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "An identifier to recognize interactions and submissions of this view"
                          },
                          "external_id": {
                            "type": "string",
                            "description": "A custom identifier that must be unique for all views on a per-team basis"
                          },
                          "clear_on_close": {
                            "type": "boolean",
                            "description": "When true, clicking the close button clears all views in the modal and closes it",
                            "default": false
                          },
                          "notify_on_close": {
                            "type": "boolean",
                            "description": "When true, Slack sends a view_closed event when a user clicks the close button",
                            "default": false
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "blocks"
                        ]
                      }
                    },
                    "required": [
                      "trigger_id",
                      "view"
                    ]
                  },
                  "constructor": {
                    "type": "string",
                    "description": "Name of the constructor to use.",
                    "enum": [
                      "WebClient"
                    ]
                  }
                },
                "required": [
                  "arguments"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "description": "Indicates if the request was successful"
                },
                "view": {
                  "type": "object",
                  "description": "The view object representing the opened modal",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for the view"
                    },
                    "team_id": {
                      "type": "string",
                      "description": "The ID of the team that the view belongs to"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of view, set to 'modal' for modals"
                    },
                    "title": {
                      "type": "object",
                      "description": "The title of the modal"
                    },
                    "submit": {
                      "type": "object",
                      "description": "The submit button of the modal"
                    },
                    "blocks": {
                      "type": "array",
                      "description": "An array of blocks that defines the content of the view"
                    },
                    "private_metadata": {
                      "type": "string",
                      "description": "Custom string sent in view_submission and block_actions events"
                    },
                    "callback_id": {
                      "type": "string",
                      "description": "Identifier for interactions and submissions of this view"
                    },
                    "external_id": {
                      "type": "string",
                      "description": "Custom identifier unique for all views on a per-team basis"
                    },
                    "state": {
                      "type": "object",
                      "description": "State of interactive components in the view"
                    },
                    "hash": {
                      "type": "string",
                      "description": "Unique value to ensure correct view updates"
                    },
                    "clear_on_close": {
                      "type": "boolean",
                      "description": "Indicates if clicking close clears all views and closes the modal"
                    },
                    "notify_on_close": {
                      "type": "boolean",
                      "description": "Indicates if Slack sends a view_closed event on close"
                    },
                    "root_view_id": {
                      "type": "string",
                      "description": "The ID of the root view"
                    },
                    "app_id": {
                      "type": "string",
                      "description": "The ID of the app that created the view"
                    },
                    "bot_id": {
                      "type": "string",
                      "description": "The ID of the bot user that created the view"
                    }
                  }
                }
              },
              "required": [
                "ok",
                "view"
              ]
            }
          }
        }
      },
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Indicates the request was unsuccessful"
                },
                "error": {
                  "type": "string",
                  "description": "Error code",
                  "enum": [
                    "duplicate_external_id",
                    "exchanged_trigger_id",
                    "expired_trigger_id",
                    "invalid_trigger_id",
                    "view_too_large",
                    "not_authed",
                    "invalid_auth",
                    "invalid_arg_name",
                    "invalid_array_arg",
                    "invalid_charset",
                    "invalid_form_data",
                    "invalid_post_type",
                    "missing_post_type",
                    "request_timeout"
                  ]
                },
                "response_metadata": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of error messages"
                    }
                  }
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Indicates the request was unsuccessful"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "invalid_auth",
                    "account_inactive",
                    "token_revoked",
                    "no_permission"
                  ],
                  "description": "Error code for unauthorized access"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "Rate limited",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Indicates the request was unsuccessful"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "ratelimited",
                    "accesslimited"
                  ],
                  "description": "Error code for rate limiting"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Indicates the request was unsuccessful"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "fatal_error",
                    "internal_error"
                  ],
                  "description": "Error code for server errors"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      },
      "503": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean",
                  "enum": [
                    false
                  ],
                  "description": "Indicates the request was unsuccessful"
                },
                "error": {
                  "type": "string",
                  "enum": [
                    "service_unavailable"
                  ],
                  "description": "Error code for service unavailability"
                }
              },
              "required": [
                "ok",
                "error"
              ]
            }
          }
        }
      }
    }
  }
}