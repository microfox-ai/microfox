{
  "openapi": "3.0.1",
  "info": {
    "title": "Microfox Slack Web Tiny API",
    "version": "1.0.0",
    "mcp_version": "1.0.1",
    "description": "Single entry-point API for all Microfox Slack Web Tiny functions via a wrapper Lambda",
    "contact": {
      "name": "Microfox Dev Support",
      "email": "support@microfox.com"
    }
  },
  "servers": [
    {
      "url": "https://api.microfox.com/c/slack-web-tiny",
      "description": "Unified wrapper endpoint"
    }
  ],
  "paths": {
    "/sendMessage": {
      "post": {
        "operationId": "sendMessage",
        "summary": "Sends a message to a specified Slack channel.",
        "description": "This function posts a message to a Slack channel using the provided SlackMessage object. It supports sending simple text messages, messages with Block Kit blocks, threaded replies, and interactive elements like buttons. The function returns a promise that resolves to a SlackMessageResponse containing details about the sent message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the sendMessage sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "SlackMessage object containing message details",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel ID or name where the message will be sent"
                              },
                              "text": {
                                "type": "string",
                                "description": "Message text content"
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "description": "Optional Block Kit blocks for rich message formatting"
                              },
                              "attachments": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "description": "Optional legacy attachments for message formatting"
                              },
                              "thread_ts": {
                                "type": "string",
                                "description": "Optional timestamp of parent message for threading"
                              },
                              "reply_broadcast": {
                                "type": "boolean",
                                "description": "Optional flag to broadcast reply in thread"
                              }
                            },
                            "required": [
                              "channel",
                              "text"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SLACK_BOT_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SLACK_BOT_TOKEN"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/slack-web-tiny"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Success indicator"
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel ID where the message was sent"
                    },
                    "ts": {
                      "type": "string",
                      "description": "Timestamp of the sent message"
                    },
                    "message": {
                      "type": "object",
                      "description": "Message details",
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "const": "invalid_auth"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "const": "rate_limited"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server issue"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/updateMessage": {
      "post": {
        "operationId": "updateMessage",
        "summary": "Updates an existing message in a Slack channel.",
        "description": "This function modifies the content of a previously sent message in a Slack channel. It allows updating the message text, blocks, and attachments. The function returns a promise that resolves to the Slack API response, containing information about the updated message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the updateMessage sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "An object containing the updated message data",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel ID where the message is located"
                              },
                              "ts": {
                                "type": "string",
                                "description": "Message timestamp"
                              },
                              "text": {
                                "type": "string",
                                "description": "New message text (optional)"
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "description": "Updated blocks (optional)"
                              },
                              "attachments": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "description": "Updated attachments (optional)"
                              }
                            },
                            "required": [
                              "channel",
                              "ts"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SLACK_BOT_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SLACK_BOT_TOKEN"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/slack-web-tiny"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Success indicator"
                    },
                    "channel": {
                      "type": "string",
                      "description": "Channel ID"
                    },
                    "ts": {
                      "type": "string",
                      "description": "Message timestamp"
                    },
                    "message": {
                      "type": "object",
                      "description": "Message details",
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Message or channel not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/uploadFile": {
      "post": {
        "operationId": "uploadFile",
        "summary": "Upload a file to Slack channels or conversations.",
        "description": "This function allows users to upload and share files in Slack channels or conversations. It supports various file upload options including content, filename, file type, and additional metadata. The function returns a promise that resolves to the Slack API response containing file details or error information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the uploadFile sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "File upload configuration object",
                            "properties": {
                              "channels": {
                                "type": "string",
                                "description": "Comma-separated channel IDs where the file will be shared"
                              },
                              "content": {
                                "type": "string",
                                "description": "File content as string"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of the file being uploaded"
                              },
                              "filetype": {
                                "type": "string",
                                "description": "File type identifier"
                              },
                              "initial_comment": {
                                "type": "string",
                                "description": "Initial comment to be added with the file"
                              },
                              "thread_ts": {
                                "type": "string",
                                "description": "Thread timestamp if the file is being added to a thread"
                              },
                              "title": {
                                "type": "string",
                                "description": "Title of the file"
                              }
                            }
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "SLACK_BOT_TOKEN"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of SLACK_BOT_TOKEN"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/slack-web-tiny"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful file upload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "description": "Indicates if the upload was successful"
                    },
                    "file": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the uploaded file"
                        }
                      },
                      "description": "Details of the uploaded file"
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "const": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server-side issue"
                    }
                  },
                  "required": [
                    "ok",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}