{
  "name": "@microfox/slack-oauth",
  "title": "Microfox Slack OAuth",
  "description": "TypeScript package simplifying Slack OAuth 2.0, providing methods for authorization URL generation, token exchange, validation, and revocation.",
  "path": "packages/slack-oauth",
  "dependencies": [
    "zod"
  ],
  "status": "oauthConnector",
  "authEndpoint": "/connect/slack",
  "oauth2Scopes": [
    "app_mentions:read",
    "assistant:write",
    "channels:history",
    "channels:join",
    "chat:write",
    "chat:write.customize",
    "commands",
    "files:read",
    "files:write",
    "groups:history",
    "groups:read",
    "groups:write",
    "groups:write.invites",
    "im:history",
    "im:write",
    "reactions:read",
    "reactions:write",
    "reminders:read",
    "reminders:write",
    "identify"
  ],
  "installUrl": "https://slack.com/oauth?client_id=1613705032464.8883888765120&scope=app_mentions:read,channels:history,channels:join,chat:write,chat:write.customize,commands,files:read,files:write,groups:history,groups:read,groups:write,im:history,im:write,reactions:read,reactions:write,reminders:read,reminders:write&user_scope=identify&redirect_uri=https%3A%2F%2Fstaging.microfox.app%2Fconnect%2Fslack-oauth%2Fcallback&state=&granular_bot_scope=1&single_channel=0&install_redirect=&tracked=1&team=",
  "documentation": "https://www.npmjs.com/package/@microfox/slack-oauth",
  "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack.svg",
  "readme_map": {
    "title": "Microfox Slack OAuth",
    "description": "The full README for the Microfox Slack OAuth",
    "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/README.md",
    "functionalities": [
      "SlackOAuthSdk",
      "exchangeCodeForTokens",
      "getAuthUrl",
      "revokeToken",
      "validateAccessToken"
    ],
    "all_readmes": [
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/docs/SlackOAuthSdk.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "SlackOAuthSdk",
        "description": "Initializes a new instance of the `SlackOAuthSdk` class."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/docs/exchangeCodeForTokens.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "exchangeCodeForTokens",
        "description": "Exchanges the authorization code received from Slack for an access token."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/docs/getAuthUrl.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getAuthUrl",
        "description": "Generates the authorization URL to initiate the Slack OAuth flow."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/docs/revokeToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "revokeToken",
        "description": "Revokes a Slack access token."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-oauth/docs/validateAccessToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "validateAccessToken",
        "description": "Validates a Slack access token."
      }
    ]
  },
  "constructors": [
    {
      "name": "SlackOAuthSdk",
      "description": "Create a new Microfox Slack OAuth client through which you can interact with the API",
      "auth": "oauth2",
      "authSdk": "@microfox/slack-oauth",
      "authEndpoint": "/connect/slack",
      "requiredKeys": [],
      "internalKeys": [
        {
          "key": "SLACK_CLIENT_ID",
          "displayName": "Slack Client ID",
          "description": "Your Slack app's Client ID.",
          "required": true
        },
        {
          "key": "SLACK_CLIENT_SECRET",
          "displayName": "Slack Client Secret",
          "description": "Your Slack app's Client Secret.",
          "required": true
        },
        {
          "key": "SLACK_REDIRECT_URI",
          "displayName": "Slack Redirect URI",
          "description": "The redirect URI you configured for your Slack app.",
          "required": true
        },
        {
          "key": "SCOPES",
          "displayName": "Slack Scopes",
          "description": "The scopes for your Slack app.",
          "required": true,
          "defaultValue": [
            "app_mentions:read",
            "assistant:write",
            "channels:history",
            "channels:join",
            "chat:write",
            "chat:write.customize",
            "commands",
            "files:read",
            "files:write",
            "groups:history",
            "groups:read",
            "groups:write",
            "groups:write.invites",
            "im:history",
            "im:write",
            "reactions:read",
            "reactions:write",
            "reminders:read",
            "reminders:write"
          ]
        },
        {
          "key": "USER_SCOPES",
          "displayName": "Slack User Scopes",
          "description": "The user scopes for your Slack app.",
          "required": false,
          "defaultValue": [
            "identify"
          ]
        }
      ],
      "functionalities": [
        "getAuthorizationUrl",
        "exchangeCodeForToken",
        "validateToken",
        "revokeToken"
      ]
    }
  ],
  "extraInfo": [
    "To obtain OAuth credentials for Slack:",
    "1. Go to https://api.slack.com/apps and create a new app or select an existing one.",
    "2. Navigate to 'OAuth & Permissions' in the sidebar.",
    "3. Under 'Redirect URLs', add the URL where you want Slack to send the user after authorization.",
    "4. Scroll down to 'Scopes' and add the necessary bot and user scopes for your application.",
    "5. Go to 'Basic Information' in the sidebar to find your Client ID and Client Secret.",
    "",
    "Environment variables:",
    "- SLACK_CLIENT_ID: Your Slack app's Client ID",
    "- SLACK_CLIENT_SECRET: Your Slack app's Client Secret",
    "- SLACK_REDIRECT_URI: The redirect URI you configured for your Slack app",
    "",
    "To use this package:",
    "1. Install the package: npm install @microfox/slack-oauth",
    "2. Import and initialize the SDK:",
    "   import { createSlackOAuth } from '@microfox/slack-oauth';",
    "   const slackOAuth = createSlackOAuth({",
    "     clientId: process.env.SLACK_CLIENT_ID!,",
    "     clientSecret: process.env.SLACK_CLIENT_SECRET!,",
    "     redirectUri: process.env.SLACK_REDIRECT_URI!,",
    "     scopes: ['chat:write', 'channels:read'],",
    "   });",
    "3. Generate the authorization URL:",
    "   const authUrl = slackOAuth.getAuthorizationUrl();",
    "4. After the user authorizes, exchange the code for a token:",
    "   const tokenResponse = await slackOAuth.exchangeCodeForToken(code);",
    "",
    "Important notes:",
    "- Slack tokens do not expire, but they can be revoked.",
    "- Store tokens securely and never expose them in client-side code.",
    "- Respect Slack's rate limits: https://api.slack.com/docs/rate-limits",
    "- For GovSlack workspaces, set isGovSlack: true in the configuration.",
    "- The 'state' parameter in getAuthorizationUrl is optional but recommended for CSRF protection.",
    "- User scopes and bot scopes are separate. Ensure you request the correct scopes for your use case.",
    "- SIWS (Sign in with Slack) scopes cannot be combined with non-SIWS scopes in the same OAuth flow."
  ],
  "keyInstructions": {
    "link": "https://api.slack.com/authentication/oauth-v2"
  },
  "devDependencies": [
    "@microfox/tsconfig",
    "@types/node",
    "tsup",
    "typescript"
  ],
  "platformType": "communication"
}
