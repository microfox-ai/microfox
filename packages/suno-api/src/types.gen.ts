// This file is auto-generated by @hey-api/openapi-ts

/**
 * audio info
 * audio info
 */
export type AudioInfo = {
    /**
     * audio id
     */
    id: string;
    /**
     * music title
     */
    title: string;
    /**
     * music cover image
     */
    image_url: string;
    /**
     * music lyric
     */
    lyric: string;
    /**
     * music download url
     */
    audio_url: string;
    /**
     * Music video download link, can be used to share
     */
    video_url: string;
    /**
     * Create time
     */
    created_at: string;
    /**
     * suno model name, chirp-v3
     */
    model_name: string;
    /**
     * The generated states include submitted, queue, streaming, complete.
     */
    status: string;
    /**
     * Simple mode on user input prompt, Suno will generate formal prompts, lyrics, etc.
     */
    gpt_description_prompt: string;
    /**
     * The final prompt for executing the generation task, customized by the user in custom mode, automatically generated by Suno in simple mode.
     */
    prompt: string;
    /**
     * Type
     */
    type: string;
    /**
     * Music genre. User-provided in custom mode, automatically generated by Suno in simple mode.
     */
    tags: string;
};

export type PostApiCustomGenerateData = {
    body?: {
        /**
         * Detailed prompt, including information such as music lyrics.
         */
        prompt: string;
        /**
         * Music genre
         */
        tags: string;
        /**
         * Music title
         */
        title: string;
        /**
         * Whether to generate instrumental music
         */
        make_instrumental?: boolean;
        /**
         * Model name ,default is chirp-v3-5
         */
        model?: string;
        /**
         * Whether to wait for music generation, default is false, directly return audio task information; set to true, will wait for up to 100s until the audio is generated.
         */
        wait_audio?: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/custom_generate';
};

export type PostApiCustomGenerateResponses = {
    /**
     * 成功
     */
    200: Array<{
        0: AudioInfo;
        1: AudioInfo;
    }>;
};

export type PostApiCustomGenerateResponse = PostApiCustomGenerateResponses[keyof PostApiCustomGenerateResponses];

export type PostApiGenerateData = {
    body?: {
        /**
         * Prompt
         */
        prompt: string;
        /**
         * Whether to generate instrumental music
         */
        make_instrumental: boolean;
        /**
         * Model name ,default is chirp-v3-5
         */
        model?: string;
        /**
         * Whether to wait for music generation, default is false, directly return audio task information; set to true, will wait for up to 100s until the audio is generated.
         */
        wait_audio: boolean;
    };
    path?: never;
    query?: never;
    url: '/api/generate';
};

export type PostApiGenerateResponses = {
    /**
     * 成功
     */
    200: Array<{
        0: AudioInfo;
        1: AudioInfo;
    }>;
};

export type PostApiGenerateResponse = PostApiGenerateResponses[keyof PostApiGenerateResponses];

export type GetApiGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Audio IDs, separated by commas.
         */
        ids: string;
    };
    url: '/api/get';
};

export type GetApiGetResponses = {
    /**
     * 成功
     */
    200: unknown;
};

export type GetApiGetLimitData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/get_limit';
};

export type GetApiGetLimitResponses = {
    /**
     * 成功
     */
    200: {
        /**
         * Remaining credits,Each generated audio consumes 5 credits.
         */
        credits_left: number;
        /**
         * Period
         */
        period: string;
        /**
         * Monthly limit
         */
        monthly_limit: number;
        /**
         * Monthly usage
         */
        monthly_usage: number;
    };
};

export type GetApiGetLimitResponse = GetApiGetLimitResponses[keyof GetApiGetLimitResponses];

export type ClientOptions = {
    baseUrl: 'https://microfox-suno-api.vercel.app' | (string & {});
};