{
  "openapi": "3.0.1",
  "info": {
    "title": "Brave SDK API",
    "version": "1.0.0",
    "mcp_version": "1.0.1",
    "description": "Single entry-point API for all Brave SDK functions via a wrapper Lambda",
    "contact": {
      "name": "Microfox Dev Support",
      "email": "support@microfox.com"
    }
  },
  "servers": [
    {
      "url": "https://api.microfox.com/c/brave",
      "description": "Unified wrapper endpoint"
    }
  ],
  "paths": {
    "/webSearch": {
      "post": {
        "operationId": "webSearch",
        "summary": "Generate OpenAPI specification for the webSearch function",
        "description": "Analyze the provided webSearch function documentation and generate an OpenAPI specification. This includes creating a summary, description, arguments structure, and responses schema for the function.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the webSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "summary": {
                                "type": "string",
                                "description": "One clear sentence describing what this function does"
                              },
                              "description": {
                                "type": "string",
                                "description": "2-3 sentences explaining the function's purpose and behavior"
                              },
                              "arguments": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "array"
                                    ]
                                  },
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "type": "object"
                                        },
                                        "required": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "items"
                                ]
                              },
                              "responses": {
                                "type": "object",
                                "properties": {
                                  "200": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/json": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object"
                                              }
                                            },
                                            "required": [
                                              "schema"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "application/json"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "content"
                                    ]
                                  },
                                  "400": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  },
                                  "500": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  }
                                },
                                "required": [
                                  "200",
                                  "400",
                                  "500"
                                ]
                              }
                            },
                            "required": [
                              "summary",
                              "description",
                              "arguments",
                              "responses"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string",
                      "description": "One clear sentence describing what this function does"
                    },
                    "description": {
                      "type": "string",
                      "description": "2-3 sentences explaining the function's purpose and behavior"
                    },
                    "arguments": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "array"
                          ]
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "properties": {
                                "type": "object"
                              },
                              "required": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "description"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "items"
                      ]
                    },
                    "responses": {
                      "type": "object",
                      "properties": {
                        "200": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "content": {
                              "type": "object",
                              "properties": {
                                "application/json": {
                                  "type": "object",
                                  "properties": {
                                    "schema": {
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "schema"
                                  ]
                                }
                              },
                              "required": [
                                "application/json"
                              ]
                            }
                          },
                          "required": [
                            "description",
                            "content"
                          ]
                        },
                        "400": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "description"
                          ]
                        },
                        "500": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "description"
                          ]
                        }
                      },
                      "required": [
                        "200",
                        "400",
                        "500"
                      ]
                    }
                  },
                  "required": [
                    "summary",
                    "description",
                    "arguments",
                    "responses"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/localPoiSearch": {
      "post": {
        "operationId": "localPoiSearch",
        "summary": "Execute localPoiSearch function",
        "description": "Executes the localPoiSearch function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the localPoiSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/localDescriptionsSearch": {
      "post": {
        "operationId": "localDescriptionsSearch",
        "summary": "Execute localDescriptionsSearch function",
        "description": "Executes the localDescriptionsSearch function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the localDescriptionsSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/summarizerSearch": {
      "post": {
        "operationId": "summarizerSearch",
        "summary": "Execute summarizerSearch function",
        "description": "Executes the summarizerSearch function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the summarizerSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/imageSearch": {
      "post": {
        "operationId": "imageSearch",
        "summary": "The imageSearch function enables image search capabilities through the Brave Search API, allowing users to find and retrieve images based on search queries.",
        "description": "The imageSearch function provides a powerful interface to search for images using the Brave Search API. It accepts a wide range of parameters to customize the search, including query, language, country, content filtering, and result limits. The function returns a Promise that resolves to an object containing detailed image search results and metadata.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the imageSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "Configuration object containing all function parameters",
                            "properties": {
                              "q": {
                                "type": "string",
                                "description": "The search query (max 400 characters, 50 words)",
                                "maxLength": 400
                              },
                              "country": {
                                "type": "string",
                                "description": "Two-letter country code (e.g., 'US', 'GB')",
                                "pattern": "^[A-Z]{2}$"
                              },
                              "search_lang": {
                                "type": "string",
                                "description": "Language for search results"
                              },
                              "ui_lang": {
                                "type": "string",
                                "description": "Language for user interface elements"
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of results to return (maximum: 20)",
                                "maximum": 20
                              },
                              "offset": {
                                "type": "integer",
                                "description": "Pagination offset (maximum: 9)",
                                "maximum": 9
                              },
                              "safesearch": {
                                "type": "string",
                                "enum": [
                                  "off",
                                  "moderate",
                                  "strict"
                                ],
                                "description": "Content filtering level"
                              },
                              "freshness": {
                                "type": "string",
                                "description": "Result freshness filter (preset values: 'pd', 'pw', 'pm', 'py', or custom string)"
                              },
                              "text_decorations": {
                                "type": "boolean",
                                "description": "Include text decoration markers in results"
                              },
                              "spellcheck": {
                                "type": "boolean",
                                "description": "Enable automatic spell checking"
                              },
                              "result_filter": {
                                "type": "string",
                                "description": "Comma-separated list of result types to include"
                              },
                              "goggles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Array of goggle definitions"
                              },
                              "units": {
                                "type": "string",
                                "enum": [
                                  "metric",
                                  "imperial"
                                ],
                                "description": "Measurement units"
                              }
                            },
                            "required": [
                              "q"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "object",
                      "properties": {
                        "original": {
                          "type": "string"
                        },
                        "show_strict_warning": {
                          "type": "boolean"
                        },
                        "is_navigational": {
                          "type": "boolean"
                        },
                        "is_news_breaking": {
                          "type": "boolean"
                        },
                        "spellcheck_off": {
                          "type": "boolean"
                        },
                        "country": {
                          "type": "string"
                        },
                        "bad_results": {
                          "type": "boolean"
                        },
                        "should_fallback": {
                          "type": "boolean"
                        },
                        "postal_code": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "header_country": {
                          "type": "string"
                        },
                        "more_results_available": {
                          "type": "boolean"
                        },
                        "state": {
                          "type": "string"
                        }
                      }
                    },
                    "mixed": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "main": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              },
                              "source": {
                                "type": "string"
                              },
                              "source_favicon": {
                                "type": "string"
                              },
                              "source_domain": {
                                "type": "string"
                              },
                              "thumbnail": {
                                "type": "object",
                                "properties": {
                                  "src": {
                                    "type": "string"
                                  },
                                  "original": {
                                    "type": "string"
                                  },
                                  "width": {
                                    "type": "number"
                                  },
                                  "height": {
                                    "type": "number"
                                  }
                                }
                              },
                              "size": {
                                "type": "object",
                                "properties": {
                                  "width": {
                                    "type": "number"
                                  },
                                  "height": {
                                    "type": "number"
                                  }
                                }
                              },
                              "age": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "family_friendly": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/videoSearch": {
      "post": {
        "operationId": "videoSearch",
        "summary": "Execute videoSearch function",
        "description": "Executes the videoSearch function with provided parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the videoSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "any",
                            "description": "Function parameters"
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/newsSearch": {
      "post": {
        "operationId": "newsSearch",
        "summary": "The newsSearch function performs a news search using the Brave Search API.",
        "description": "This function allows users to search for news articles using various parameters through the Brave Search API. It provides flexibility in specifying search criteria such as query, country, language, and result filtering. The function returns a promise that resolves to a comprehensive news search response containing detailed information about each article.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the newsSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "NewsSearchParams object containing search parameters",
                            "properties": {
                              "q": {
                                "type": "string",
                                "description": "The search query (max 400 characters, 50 words)",
                                "maxLength": 400
                              },
                              "country": {
                                "type": "string",
                                "description": "2-letter country code",
                                "default": "US",
                                "pattern": "^[A-Z]{2}$"
                              },
                              "search_lang": {
                                "type": "string",
                                "description": "Search language",
                                "default": "en"
                              },
                              "ui_lang": {
                                "type": "string",
                                "description": "UI language",
                                "default": "en-US"
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of results (1-20)",
                                "default": 20,
                                "minimum": 1,
                                "maximum": 20
                              },
                              "offset": {
                                "type": "integer",
                                "description": "Offset for pagination (0-9)",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 9
                              },
                              "safesearch": {
                                "type": "string",
                                "description": "Safe search level",
                                "enum": [
                                  "off",
                                  "moderate",
                                  "strict"
                                ],
                                "default": "moderate"
                              },
                              "freshness": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "pd",
                                      "pw",
                                      "pm",
                                      "py"
                                    ],
                                    "description": "Predefined freshness options"
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^\\d{4}-\\d{2}-\\d{2}to\\d{4}-\\d{2}-\\d{2}$",
                                    "description": "Custom date range in format 'YYYY-MM-DDtoYYYY-MM-DD'"
                                  }
                                ],
                                "description": "Freshness of results"
                              },
                              "text_decorations": {
                                "type": "boolean",
                                "description": "Include decoration markers",
                                "default": true
                              },
                              "spellcheck": {
                                "type": "boolean",
                                "description": "Enable spellchecking",
                                "default": true
                              },
                              "result_filter": {
                                "type": "string",
                                "description": "Comma-separated list of result types"
                              },
                              "goggles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Goggle definitions for custom re-ranking"
                              },
                              "units": {
                                "type": "string",
                                "enum": [
                                  "metric",
                                  "imperial"
                                ],
                                "description": "Units for measurements"
                              }
                            },
                            "required": [
                              "q"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful news search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "news"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "original": {
                          "type": "string"
                        },
                        "altered": {
                          "type": "string"
                        },
                        "cleaned": {
                          "type": "string"
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "news_result"
                          },
                          "url": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "age": {
                            "type": "string"
                          },
                          "page_age": {
                            "type": "string"
                          },
                          "page_fetched": {
                            "type": "string"
                          },
                          "breaking": {
                            "type": "boolean"
                          },
                          "thumbnail": {
                            "type": "object",
                            "properties": {
                              "src": {
                                "type": "string"
                              },
                              "width": {
                                "type": "integer"
                              },
                              "height": {
                                "type": "integer"
                              }
                            }
                          },
                          "meta_url": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "type": "string"
                              },
                              "domain": {
                                "type": "string"
                              }
                            }
                          },
                          "extra_snippets": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggestSearch": {
      "post": {
        "operationId": "suggestSearch",
        "summary": "Retrieves search suggestions using the Brave Search API.",
        "description": "This function provides search suggestions based on a given query, helping users find relevant search terms and entities. It accepts a search query and optional parameters for country and result count, returning a promise that resolves to an object containing the original query and an array of suggestion results.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the suggestSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "An object containing the search parameters",
                            "properties": {
                              "q": {
                                "type": "string",
                                "description": "The search query"
                              },
                              "country": {
                                "type": "string",
                                "description": "2-letter country code"
                              },
                              "count": {
                                "type": "number",
                                "description": "Number of suggestions to return"
                              }
                            },
                            "required": [
                              "q"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with search suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "suggest"
                      ],
                      "description": "Always 'suggest'"
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "original": {
                          "type": "string",
                          "description": "The original search query"
                        }
                      },
                      "required": [
                        "original"
                      ]
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "query": {
                            "type": "string",
                            "description": "The suggested query"
                          },
                          "is_entity": {
                            "type": "boolean",
                            "description": "Whether the suggestion is an entity"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the suggestion"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the suggestion"
                          },
                          "img": {
                            "type": "string",
                            "description": "Image URL for the suggestion"
                          }
                        },
                        "required": [
                          "query",
                          "is_entity"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "query",
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the internal server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/spellcheckSearch": {
      "post": {
        "operationId": "spellcheckSearch",
        "summary": "Generate OpenAPI specification for the spellcheckSearch function",
        "description": "Analyze the provided function documentation for spellcheckSearch and create a comprehensive OpenAPI specification. This includes generating a clear summary, detailed description, arguments structure, and complete responses schema.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the spellcheckSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "summary": {
                                "type": "string",
                                "description": "One clear sentence describing what this function does"
                              },
                              "description": {
                                "type": "string",
                                "description": "2-3 sentences explaining the function's purpose and behavior"
                              },
                              "arguments": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "array"
                                    ]
                                  },
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "required": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "items"
                                ]
                              },
                              "responses": {
                                "type": "object",
                                "properties": {
                                  "200": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "content": {
                                        "type": "object",
                                        "properties": {
                                          "application/json": {
                                            "type": "object",
                                            "properties": {
                                              "schema": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "400": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "500": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "200",
                                  "400",
                                  "500"
                                ]
                              }
                            },
                            "required": [
                              "summary",
                              "description",
                              "arguments",
                              "responses"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "packageName": {
                        "type": "string",
                        "description": "@microfox/brave"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "arguments": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "items": {
                          "type": "array"
                        }
                      }
                    },
                    "responses": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/createBraveSDK/summarizerSearch": {
      "post": {
        "operationId": "summarizerSearch",
        "summary": "Performs a summarizer search using the Brave Search API to retrieve AI-generated summaries and enrichments.",
        "description": "This function allows users to obtain AI-generated summaries and enrichments based on a provided key from a prior web search. It returns comprehensive information including the summary, enrichments (raw content, images, Q&A pairs, entities, and context), follow-up questions, and entity information. The function is particularly useful for extracting and processing rich, AI-enhanced content from web searches.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the summarizerSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "An object containing the search parameters",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The summarizer key obtained from a prior web search with summary=1"
                              },
                              "entity_info": {
                                "type": "boolean",
                                "description": "Include entity information in the response"
                              }
                            },
                            "required": [
                              "key"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_SECRET_TEMPLATE_TYPE"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_SECRET_TEMPLATE_TYPE"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "constructorName": {
                        "type": "string",
                        "description": "Name of the constructor to use.",
                        "default": "createBraveSDK"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "summarizer"
                      ],
                      "description": "Always 'summarizer'"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "failed",
                        "complete"
                      ],
                      "description": "Status of the summarizer search"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the summarized content"
                    },
                    "summary": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "token",
                              "enum_item",
                              "enum_start",
                              "enum_end"
                            ],
                            "description": "Type of the summary message"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the summary message"
                          }
                        }
                      },
                      "description": "Array of summary messages"
                    },
                    "enrichments": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string",
                          "description": "Raw text content"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "URL of the image"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text associated with the image"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "URL of the image thumbnail"
                              }
                            }
                          },
                          "description": "Array of relevant images with thumbnails and properties"
                        },
                        "qa": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "question": {
                                "type": "string",
                                "description": "The question"
                              },
                              "answer": {
                                "type": "string",
                                "description": "The answer"
                              },
                              "score": {
                                "type": "number",
                                "description": "Confidence score of the answer"
                              },
                              "highlight": {
                                "type": "object",
                                "description": "Highlight range for the answer"
                              }
                            }
                          },
                          "description": "Array of question-answer pairs with scores and highlights"
                        },
                        "entities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the entity"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL associated with the entity"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text description of the entity"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Array of image URLs associated with the entity"
                              }
                            }
                          },
                          "description": "Array of relevant entities with metadata"
                        },
                        "context": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Title of the context"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL of the context"
                              },
                              "meta_url": {
                                "type": "string",
                                "description": "Meta URL of the context"
                              }
                            }
                          },
                          "description": "Array of contextual information with titles and URLs"
                        }
                      },
                      "description": "Object containing various enrichments"
                    },
                    "followups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of suggested follow-up queries"
                    },
                    "entities_infos": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "Provider of the entity information"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the entity"
                          }
                        }
                      },
                      "description": "Record of entity information with descriptions and providers"
                    }
                  },
                  "required": [
                    "type",
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createBraveSDK/webSearch": {
      "post": {
        "operationId": "webSearch",
        "summary": "Performs a web search using the Brave Search API.",
        "description": "This function allows users to perform web searches and retrieve results from the Brave Search API. It supports a wide range of search parameters including query, country, language, result count, and various filters. The function returns comprehensive search results including web pages, news, videos, discussions, FAQs, and more.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "description": "Body of the webSearch sls call",
                    "properties": {
                      "arguments": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "description": "WebSearchParams object containing all search parameters",
                            "properties": {
                              "q": {
                                "type": "string",
                                "description": "The search query (max 400 characters, 50 words)",
                                "maxLength": 400
                              },
                              "country": {
                                "type": "string",
                                "description": "2-letter country code",
                                "default": "US",
                                "minLength": 2,
                                "maxLength": 2
                              },
                              "search_lang": {
                                "type": "string",
                                "description": "Search language",
                                "default": "en"
                              },
                              "ui_lang": {
                                "type": "string",
                                "description": "UI language",
                                "default": "en-US"
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of results (1-20)",
                                "default": 20,
                                "minimum": 1,
                                "maximum": 20
                              },
                              "offset": {
                                "type": "integer",
                                "description": "Offset for pagination (0-9)",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 9
                              },
                              "safesearch": {
                                "type": "string",
                                "description": "Safe search level",
                                "enum": [
                                  "off",
                                  "moderate",
                                  "strict"
                                ],
                                "default": "moderate"
                              },
                              "freshness": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "pd",
                                      "pw",
                                      "pm",
                                      "py"
                                    ],
                                    "description": "Predefined freshness values"
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^\\d{4}-\\d{2}-\\d{2}to\\d{4}-\\d{2}-\\d{2}$",
                                    "description": "Custom date range in format 'YYYY-MM-DDtoYYYY-MM-DD'"
                                  }
                                ],
                                "description": "Freshness of results"
                              },
                              "text_decorations": {
                                "type": "boolean",
                                "description": "Include decoration markers",
                                "default": true
                              },
                              "spellcheck": {
                                "type": "boolean",
                                "description": "Enable spellchecking",
                                "default": true
                              },
                              "result_filter": {
                                "type": "string",
                                "description": "Comma-separated list of result types",
                                "pattern": "^(discussions|faq|infobox|news|query|summarizer|videos|web|locations)(,(discussions|faq|infobox|news|query|summarizer|videos|web|locations))*$"
                              },
                              "goggles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Goggle definitions for custom re-ranking"
                              },
                              "units": {
                                "type": "string",
                                "enum": [
                                  "metric",
                                  "imperial"
                                ],
                                "description": "Units for measurements"
                              },
                              "extra_snippets": {
                                "type": "boolean",
                                "description": "Include up to 5 additional, alternative excerpts"
                              },
                              "summary": {
                                "type": "boolean",
                                "description": "Enable summary key generation for use with summarizer"
                              }
                            },
                            "required": [
                              "q"
                            ]
                          }
                        ]
                      },
                      "auth": {
                        "type": "object",
                        "description": "Authentication object",
                        "properties": {
                          "strategy": {
                            "type": "string",
                            "description": "Authentication strategy",
                            "enum": [
                              "apikey"
                            ]
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables for the authentication strategy",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_API_KEY"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_API_KEY"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "BRAVE_SECRET_TEMPLATE_TYPE"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "value of BRAVE_SECRET_TEMPLATE_TYPE"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "constructorName": {
                        "type": "string",
                        "description": "Name of the constructor to use.",
                        "default": "createBraveSDK"
                      }
                    },
                    "required": [
                      "arguments"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "search",
                      "description": "Always 'search'"
                    },
                    "discussions": {
                      "type": "object",
                      "description": "Optional discussions results"
                    },
                    "faq": {
                      "type": "object",
                      "description": "Optional FAQ results"
                    },
                    "infobox": {
                      "type": "object",
                      "description": "Optional infobox results"
                    },
                    "locations": {
                      "type": "object",
                      "description": "Optional location results"
                    },
                    "mixed": {
                      "type": "object",
                      "description": "Optional mixed results"
                    },
                    "news": {
                      "type": "object",
                      "description": "Optional news results"
                    },
                    "query": {
                      "type": "object",
                      "description": "Query information"
                    },
                    "rich_data": {
                      "type": "object",
                      "description": "Optional rich data"
                    },
                    "web": {
                      "type": "object",
                      "description": "Optional web search results"
                    },
                    "videos": {
                      "type": "object",
                      "description": "Optional video results"
                    }
                  },
                  "required": [
                    "type",
                    "query"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the issue with the request"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating authentication failure"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating rate limit exceeded"
                    },
                    "retry_after": {
                      "type": "integer",
                      "description": "Number of seconds to wait before retrying"
                    }
                  },
                  "required": [
                    "error",
                    "retry_after"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the server error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}