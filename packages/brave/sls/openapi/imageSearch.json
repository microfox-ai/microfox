{
  "post": {
    "operationId": "imageSearch",
    "summary": "Search for images using the Brave Search",
    "description": "Search for images using the Brave Search (with a query upto 20 images per toolcall)",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "description": "Body of the imageSearch sls call",
                "properties": {
                  "arguments": {
                    "type": "object",
                    "description": "Parameters for the image search function",
                    "properties": {
                      "q": {
                        "type": "string",
                        "description": "The search query",
                        "maxLength": 400
                      },
                      "country": {
                        "type": "string",
                        "description": "Two-letter country code (e.g., 'US', 'GB')",
                        "pattern": "^[A-Z]{2}$"
                      },
                      "search_lang": {
                        "type": "string",
                        "description": "Language for search results"
                      },
                      "ui_lang": {
                        "type": "string",
                        "description": "Language for user interface elements"
                      },
                      "count": {
                        "type": "integer",
                        "description": "Number of results to return",
                        "minimum": 1,
                        "maximum": 20
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Pagination offset",
                        "minimum": 0,
                        "maximum": 9
                      },
                      "safesearch": {
                        "type": "string",
                        "description": "Content filtering level",
                        "enum": ["off", "moderate", "strict"]
                      },
                      "freshness": {
                        "type": "string",
                        "description": "Result freshness filter",
                        "oneOf": [
                          {
                            "enum": ["pd", "pw", "pm", "py"]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "text_decorations": {
                        "type": "boolean",
                        "description": "Include text decoration markers in results"
                      },
                      "spellcheck": {
                        "type": "boolean",
                        "description": "Enable automatic spell checking"
                      },
                      "result_filter": {
                        "type": "string",
                        "description": "Comma-separated list of result types to include"
                      },
                      "goggles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Array of goggle definitions"
                      },
                      "units": {
                        "type": "string",
                        "description": "Measurement units",
                        "enum": ["metric", "imperial"]
                      }
                    },
                    "required": ["q"]
                  }
                },
                "required": ["arguments"]
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful image search response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "object",
                  "properties": {
                    "original": {
                      "type": "string"
                    },
                    "show_strict_warning": {
                      "type": "boolean"
                    },
                    "is_navigational": {
                      "type": "boolean"
                    },
                    "is_news_breaking": {
                      "type": "boolean"
                    },
                    "spellcheck_off": {
                      "type": "boolean"
                    },
                    "country": {
                      "type": "string"
                    },
                    "bad_results": {
                      "type": "boolean"
                    },
                    "should_fallback": {
                      "type": "boolean"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "header_country": {
                      "type": "string"
                    },
                    "more_results_available": {
                      "type": "boolean"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                },
                "mixed": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "main": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "source": {
                            "type": "string"
                          },
                          "source_favicon": {
                            "type": "string"
                          },
                          "source_domain": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "object",
                            "properties": {
                              "src": {
                                "type": "string"
                              },
                              "original": {
                                "type": "string"
                              },
                              "width": {
                                "type": "number"
                              },
                              "height": {
                                "type": "number"
                              }
                            }
                          },
                          "size": {
                            "type": "object",
                            "properties": {
                              "width": {
                                "type": "number"
                              },
                              "height": {
                                "type": "number"
                              }
                            }
                          },
                          "age": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "family_friendly": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request - invalid parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized - invalid or missing API key",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "429": {
        "description": "Too many requests - rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
