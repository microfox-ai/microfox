{
  "name": "@microfox/reddit",
  "title": "Reddit",
  "description": "A TypeScript SDK for interacting with the Reddit API, providing functionalities for user data retrieval, search operations (users, posts, communities), post and comment processing, moderation, and comprehensive data access.",
  "path": "packages/reddit",
  "dependencies": ["@microfox/reddit-oauth", "zod"],
  "status": "semiStable",
  "authType": "oauth2",
  "authEndpoint": "/connect/reddit-oauth",
  "documentation": "https://www.npmjs.com/package/@microfox/reddit",
  "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/reddit-icon.svg",
  "constructors": [
    {
      "name": "RedditSDK",
      "description": "Create a new Reddit TypeScript SDK client through which you can interact with the API",
      "auth": "oauth2",
      "authSdk": "@microfox/reddit-oauth",
      "authEndpoint": "/connect/reddit-oauth",
      "requiredKeys": [],
      "internalKeys": [
        {
          "key": "REDDIT_CLIENT_ID",
          "displayName": "Reddit Client ID",
          "description": "Your Reddit application's client ID."
        },
        {
          "key": "REDDIT_CLIENT_SECRET",
          "displayName": "Reddit Client Secret",
          "description": "Your Reddit application's client secret."
        },
        {
          "key": "REDDIT_REDIRECT_URI",
          "displayName": "Reddit Redirect URI",
          "description": "The redirect URI you specified when creating the app."
        },
        {
          "key": "REDDIT_ACCESS_TOKEN",
          "displayName": "Reddit Access Token",
          "description": "The access token for authenticating requests."
        },
        {
          "key": "REDDIT_REFRESH_TOKEN",
          "displayName": "Reddit Refresh Token",
          "description": "The refresh token obtained during initial authorization."
        },
        {
          "key": "SCOPES",
          "displayName": "Reddit Scopes",
          "description": "A comma-separated list of scopes defining the permissions requested."
        }
      ],
      "functionalities": [
        "RedditSDK",
        "acceptModeratorInvite",
        "account.addFriend",
        "account.getMe",
        "account.getMyBlocked",
        "account.getMyFriends",
        "account.getMyKarma",
        "account.getMyPrefs",
        "account.getMyTrophies",
        "account.getPrefsBlocked",
        "account.getPrefsFriends",
        "account.getPrefsMessaging",
        "account.getPrefsTrusted",
        "account.getPrefsWhere",
        "account.removeFriend",
        "account.updateMyPrefs",
        "addFriend",
        "addOrUpdateEmoji",
        "addPostToCollection",
        "allowEditor",
        "announcements.getAnnouncements",
        "announcements.hideAnnouncement",
        "announcements.readAllAnnouncements",
        "announcements.readAnnouncement",
        "announcements.unreadAnnouncement",
        "approve",
        "archiveModmailConversation",
        "block",
        "blockUser",
        "captcha.needsCaptcha",
        "clearFlairTemplates",
        "close",
        "collapseMessage",
        "collections.addPostToCollection",
        "collections.createCollection",
        "collections.deleteCollection",
        "collections.getCollection",
        "collections.getSubredditCollections",
        "collections.removePostFromCollection",
        "collections.reorderCollection",
        "collections.updateCollectionDescription",
        "collections.updateCollectionDisplayLayout",
        "collections.updateCollectionTitle",
        "composeMessage",
        "configureFlair",
        "create",
        "createCollection",
        "createModmailConversation",
        "createModmailMessage",
        "createWidget",
        "deleteCollection",
        "deleteEmoji",
        "deleteFlair",
        "deleteFlairTemplate",
        "deleteMessage",
        "deleteSrBanner",
        "deleteSrHeader",
        "deleteSrIcon",
        "deleteSrImg",
        "deleteThing",
        "deleteWidget",
        "distinguish",
        "editWikiPage",
        "emoji.addOrUpdateEmoji",
        "emoji.deleteEmoji",
        "emoji.getAllEmojis",
        "emoji.getEmojiUploadLease",
        "emoji.setCustomEmojiSize",
        "flair.clearFlairTemplates",
        "flair.configureFlair",
        "flair.deleteFlair",
        "flair.deleteFlairTemplate",
        "flair.getFlairList",
        "flair.getFlairSelector",
        "flair.getLinkFlair",
        "flair.getLinkFlairV2",
        "flair.getUserFlair",
        "flair.getUserFlairV2",
        "flair.selectFlair",
        "flair.setFlair",
        "flair.setFlairCsv",
        "flair.setFlairEnabled",
        "flair.setFlairTemplate",
        "flair.setFlairTemplateV2",
        "flair.updateFlairTemplateOrder",
        "followPost",
        "friend",
        "get",
        "getAllEmojis",
        "getAnnouncements",
        "getBest",
        "getById",
        "getCollection",
        "getComments",
        "getContributors",
        "getDiscussions",
        "getDuplicates",
        "getEmojiUploadLease",
        "getFlairList",
        "getFlairSelector",
        "getHot",
        "getLinkFlair",
        "getLinkFlairV2",
        "getMessages",
        "getMineWhere",
        "getModListing",
        "getModLog",
        "getModmailConversation",
        "getModmailConversationMessages",
        "getModmailConversations",
        "getModmailSubreddits",
        "getModmailUnreadCount",
        "getMoreChildren",
        "getMyBlocked",
        "getMyFriends",
        "getMyKarma",
        "getMyPrefs",
        "getMyTrophies",
        "getNew",
        "getPostRequirements",
        "getPrefsBlocked",
        "getPrefsFriends",
        "getPrefsMessaging",
        "getPrefsTrusted",
        "getPrefsWhere",
        "getRising",
        "getSavedCategories",
        "getScopes",
        "getSidebar",
        "getSorted",
        "getSticky",
        "getStylesheet",
        "getSubmitText",
        "getSubredditAbout",
        "getSubredditAboutEdit",
        "getSubredditAboutRules",
        "getSubredditAboutTraffic",
        "getSubredditAboutWhere",
        "getSubredditCollections",
        "getSubredditsWhere",
        "getUpdate",
        "getUpdates",
        "getUserAbout",
        "getUserDataByAccountIds",
        "getUserFlair",
        "getUserFlairV2",
        "getUserProfileWhere",
        "getUsersWhere",
        "getWidgetImageUploadLease",
        "getWidgets",
        "getWikiDiscussions",
        "getWikiPage",
        "getWikiPageSettings",
        "getWikiPages",
        "getWikiRevisions",
        "hide",
        "hideAnnouncement",
        "hideWikiPage",
        "highlightModmailConversation",
        "ignoreReports",
        "inviteContributor",
        "leaveContributor",
        "leaveModerator",
        "linksAndComments.deleteThing",
        "linksAndComments.editUserText",
        "linksAndComments.followPost",
        "linksAndComments.getMoreChildren",
        "linksAndComments.getSavedCategories",
        "linksAndComments.hide",
        "linksAndComments.lock",
        "linksAndComments.markNsfw",
        "linksAndComments.report",
        "linksAndComments.save",
        "linksAndComments.sendReplies",
        "linksAndComments.setContestMode",
        "linksAndComments.setSubredditSticky",
        "linksAndComments.setSuggestedSort",
        "linksAndComments.spoiler",
        "linksAndComments.storeVisits",
        "linksAndComments.submit",
        "linksAndComments.submitComment",
        "linksAndComments.unhide",
        "linksAndComments.unlock",
        "linksAndComments.unmarkNsfw",
        "linksAndComments.unsave",
        "linksAndComments.unspoiler",
        "linksAndComments.vote",
        "listings.getBest",
        "listings.getById",
        "listings.getComments",
        "listings.getDuplicates",
        "listings.getHot",
        "listings.getNew",
        "listings.getRising",
        "listings.getSorted",
        "listings.search",
        "liveThreads.acceptModeratorInvite",
        "liveThreads.close",
        "liveThreads.create",
        "liveThreads.get",
        "liveThreads.getContributors",
        "liveThreads.getDiscussions",
        "liveThreads.getUpdate",
        "liveThreads.getUpdates",
        "liveThreads.inviteContributor",
        "liveThreads.leaveContributor",
        "liveThreads.removeContributor",
        "liveThreads.removeUpdate",
        "liveThreads.report",
        "liveThreads.setContributorPermissions",
        "liveThreads.strikeUpdate",
        "liveThreads.update",
        "lock",
        "markModmailAsRead",
        "markModmailAsUnread",
        "markNsfw",
        "misc.getScopes",
        "moderation.acceptModeratorInvite",
        "moderation.approve",
        "moderation.distinguish",
        "moderation.getModListing",
        "moderation.getModLog",
        "moderation.getStylesheet",
        "moderation.ignoreReports",
        "moderation.leaveContributor",
        "moderation.leaveModerator",
        "moderation.remove",
        "moderation.showComment",
        "moderation.snoozeReports",
        "moderation.unignoreReports",
        "moderation.unsnoozeReports",
        "moderation.updateCrowdControlLevel",
        "modmailBulkRead",
        "muteModmailConversation",
        "needsCaptcha",
        "newModmail.archiveModmailConversation",
        "newModmail.createModmailConversation",
        "newModmail.createModmailMessage",
        "newModmail.getModmailConversation",
        "newModmail.getModmailConversationMessages",
        "newModmail.getModmailConversations",
        "newModmail.getModmailSubreddits",
        "newModmail.getModmailUnreadCount",
        "newModmail.highlightModmailConversation",
        "newModmail.markModmailAsRead",
        "newModmail.markModmailAsUnread",
        "newModmail.modmailBulkRead",
        "newModmail.muteModmailConversation",
        "newModmail.unarchiveModmailConversation",
        "newModmail.unhighlightModmailConversation",
        "newModmail.unmuteModmailConversation",
        "privateMessages.block",
        "privateMessages.collapseMessage",
        "privateMessages.composeMessage",
        "privateMessages.deleteMessage",
        "privateMessages.getMessages",
        "privateMessages.readAllMessages",
        "privateMessages.readMessage",
        "privateMessages.unblockSubreddit",
        "privateMessages.uncollapseMessage",
        "privateMessages.unreadMessage",
        "readAllAnnouncements",
        "readAllMessages",
        "readAnnouncement",
        "readMessage",
        "recommendSrBySrnames",
        "refreshAccessToken",
        "remove",
        "removeContributor",
        "removeFriend",
        "removePostFromCollection",
        "removeUpdate",
        "reorderCollection",
        "reorderWidgets",
        "report",
        "reportUser",
        "revertWikiPage",
        "save",
        "searchRedditNamesGet",
        "searchRedditNamesPost",
        "searchSubreddits",
        "searchSubredditsListing",
        "searchUsers",
        "selectFlair",
        "sendReplies",
        "setContestMode",
        "setContributorPermissions",
        "setCustomEmojiSize",
        "setFlair",
        "setFlairCsv",
        "setFlairEnabled",
        "setFlairTemplate",
        "setFlairTemplateV2",
        "setPermissions",
        "setSubredditSticky",
        "setSuggestedSort",
        "showComment",
        "siteAdmin",
        "snoozeReports",
        "spoiler",
        "storeVisits",
        "strikeUpdate",
        "submit",
        "subredditAutocomplete",
        "subredditAutocompleteV2",
        "subredditStylesheet",
        "subreddits.deleteSrBanner",
        "subreddits.deleteSrHeader",
        "subreddits.deleteSrIcon",
        "subreddits.deleteSrImg",
        "subreddits.getMineWhere",
        "subreddits.getPostRequirements",
        "subreddits.getSidebar",
        "subreddits.getSticky",
        "subreddits.getSubmitText",
        "subreddits.getSubredditAbout",
        "subreddits.getSubredditAboutEdit",
        "subreddits.getSubredditAboutRules",
        "subreddits.getSubredditAboutTraffic",
        "subreddits.getSubredditAboutWhere",
        "subreddits.getSubredditsWhere",
        "subreddits.recommendSrBySrnames",
        "subreddits.searchRedditNamesGet",
        "subreddits.searchRedditNamesPost",
        "subreddits.searchSubreddits",
        "subreddits.searchSubredditsListing",
        "subreddits.siteAdmin",
        "subreddits.subredditAutocomplete",
        "subreddits.subredditAutocompleteV2",
        "subreddits.subredditStylesheet",
        "subreddits.subscribe",
        "subreddits.uploadSrImg",
        "subscribe",
        "unarchiveModmailConversation",
        "unblockSubreddit",
        "uncollapseMessage",
        "unfriend",
        "unhide",
        "unhighlightModmailConversation",
        "unignoreReports",
        "unlock",
        "unmarkNsfw",
        "unmuteModmailConversation",
        "unreadAnnouncement",
        "unreadMessage",
        "unsave",
        "unsnoozeReports",
        "unspoiler",
        "update",
        "updateCollectionDescription",
        "updateCollectionDisplayLayout",
        "updateCollectionTitle",
        "updateCrowdControlLevel",
        "updateFlairTemplateOrder",
        "updateMyPrefs",
        "updateWidget",
        "updateWikiPageSettings",
        "uploadSrImg",
        "usernameAvailable",
        "users.blockUser",
        "users.friend",
        "users.getUserAbout",
        "users.getUserDataByAccountIds",
        "users.getUserProfileWhere",
        "users.getUserTrophies",
        "users.getUsersWhere",
        "users.reportUser",
        "users.searchUsers",
        "users.setPermissions",
        "users.unfriend",
        "users.usernameAvailable",
        "validateAccessToken",
        "widgets.createWidget",
        "widgets.deleteWidget",
        "widgets.getWidgetImageUploadLease",
        "widgets.getWidgets",
        "widgets.reorderWidgets",
        "widgets.updateWidget",
        "wiki.allowEditor",
        "wiki.editWikiPage",
        "wiki.getWikiDiscussions",
        "wiki.getWikiPage",
        "wiki.getWikiPageSettings",
        "wiki.getWikiPages",
        "wiki.getWikiRevisions",
        "wiki.hideWikiPage",
        "wiki.revertWikiPage",
        "wiki.updateWikiPageSettings"
      ]
    }
  ],
  "extraInfo": [
    "To use this SDK, you need to obtain OAuth credentials from Reddit. Follow these steps:",
    "1. Go to https://www.reddit.com/prefs/apps",
    "2. Click on 'create app' or 'create another app' at the bottom",
    "3. Fill in the required information:",
    "   - Name: Your app's name",
    "   - App type: Choose 'web app' for most cases",
    "   - Description: Brief description of your app",
    "   - About URL: Your app's website (if applicable)",
    "   - Redirect URI: The URI where Reddit will redirect after authorization",
    "4. Click 'create app'",
    "5. You'll receive a Client ID and Client Secret. Keep these secure.",
    "",
    "Environment variables:",
    "- REDDIT_CLIENT_ID: Your Reddit application's client ID",
    "- REDDIT_CLIENT_SECRET: Your Reddit application's client secret",
    "- REDDIT_REDIRECT_URI: The redirect URI you specified when creating the app",
    "",
    "To set up environment variables:",
    "1. Create a .env file in your project root (if not already present)",
    "2. Add the following lines to the .env file:",
    "   REDDIT_CLIENT_ID=your_client_id_here",
    "   REDDIT_CLIENT_SECRET=your_client_secret_here",
    "   REDDIT_REDIRECT_URI=your_redirect_uri_here",
    "3. Use a package like dotenv to load these variables in your application",
    "",
    "Important notes:",
    "- Reddit's OAuth implementation uses comma-separated scopes instead of space-separated",
    "- Access tokens expire after 1 hour (3600 seconds)",
    "- To get a refresh token, include 'duration=permanent' in the initial authorization request",
    "- Rate limits: https://github.com/reddit-archive/reddit/wiki/API#rules",
    "  - 60 requests per minute",
    "  - OAuth2 clients may make up to 600 requests per 10 minutes",
    "  - Monitor the X-Ratelimit headers in API responses for current limits and usage",
    "",
    "For more detailed information, refer to the Reddit API documentation: https://www.reddit.com/dev/api/oauth"
  ],
  "platformType": "communication"
}
