{
  "name": "@microfox/reddit",
  "title": "Reddit TypeScript SDK",
  "description": "A TypeScript SDK for interacting with the Reddit API, providing functionalities for user data retrieval, search operations (users, posts, communities), post and comment processing, moderation, and comprehensive data access.",
  "path": "packages/reddit",
  "dependencies": ["@microfox/reddit-oauth", "zod"],
  "status": "semiStable",
  "authType": "oauth2",
  "authEndpoint": "/connect/reddit-oauth",
  "oauth2Scopes": [
    "identity",
    "edit",
    "flair",
    "history",
    "modconfig",
    "modflair",
    "modlog",
    "modposts",
    "modwiki",
    "mysubreddits",
    "privatemessages",
    "read",
    "report",
    "save",
    "submit",
    "subscribe",
    "vote",
    "wikiedit",
    "wikiread"
  ],
  "documentation": "https://www.npmjs.com/package/@microfox/reddit",
  "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/reddit-icon.svg",
  "readme_map": {
    "title": "Reddit TypeScript SDK",
    "description": "The full README for the Reddit TypeScript SDK",
    "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/README.md",
    "functionalities": [
      "RedditSDK",
      "acceptModeratorInvite",
      "account.addFriend",
      "account.getMe",
      "account.getMyBlocked",
      "account.getMyFriends",
      "account.getMyKarma",
      "account.getMyPrefs",
      "account.getMyTrophies",
      "account.getPrefsBlocked",
      "account.getPrefsFriends",
      "account.getPrefsMessaging",
      "account.getPrefsTrusted",
      "account.getPrefsWhere",
      "account.removeFriend",
      "account.updateMyPrefs",
      "addFriend",
      "addOrUpdateEmoji",
      "addPostToCollection",
      "allowEditor",
      "announcements.getAnnouncements",
      "announcements.hideAnnouncement",
      "announcements.readAllAnnouncements",
      "announcements.readAnnouncement",
      "announcements.unreadAnnouncement",
      "approve",
      "archiveModmailConversation",
      "block",
      "blockUser",
      "captcha.needsCaptcha",
      "clearFlairTemplates",
      "close",
      "collapseMessage",
      "collections.addPostToCollection",
      "collections.createCollection",
      "collections.deleteCollection",
      "collections.getCollection",
      "collections.getSubredditCollections",
      "collections.removePostFromCollection",
      "collections.reorderCollection",
      "collections.updateCollectionDescription",
      "collections.updateCollectionDisplayLayout",
      "collections.updateCollectionTitle",
      "composeMessage",
      "configureFlair",
      "create",
      "createCollection",
      "createModmailConversation",
      "createModmailMessage",
      "createWidget",
      "deleteCollection",
      "deleteEmoji",
      "deleteFlair",
      "deleteFlairTemplate",
      "deleteMessage",
      "deleteSrBanner",
      "deleteSrHeader",
      "deleteSrIcon",
      "deleteSrImg",
      "deleteThing",
      "deleteWidget",
      "distinguish",
      "editWikiPage",
      "emoji.addOrUpdateEmoji",
      "emoji.deleteEmoji",
      "emoji.getAllEmojis",
      "emoji.getEmojiUploadLease",
      "emoji.setCustomEmojiSize",
      "flair.clearFlairTemplates",
      "flair.configureFlair",
      "flair.deleteFlair",
      "flair.deleteFlairTemplate",
      "flair.getFlairList",
      "flair.getFlairSelector",
      "flair.getLinkFlair",
      "flair.getLinkFlairV2",
      "flair.getUserFlair",
      "flair.getUserFlairV2",
      "flair.selectFlair",
      "flair.setFlair",
      "flair.setFlairCsv",
      "flair.setFlairEnabled",
      "flair.setFlairTemplate",
      "flair.setFlairTemplateV2",
      "flair.updateFlairTemplateOrder",
      "followPost",
      "friend",
      "get",
      "getAllEmojis",
      "getAnnouncements",
      "getBest",
      "getById",
      "getCollection",
      "getComments",
      "getContributors",
      "getDiscussions",
      "getDuplicates",
      "getEmojiUploadLease",
      "getFlairList",
      "getFlairSelector",
      "getHot",
      "getLinkFlair",
      "getLinkFlairV2",
      "getMessages",
      "getMineWhere",
      "getModListing",
      "getModLog",
      "getModmailConversation",
      "getModmailConversationMessages",
      "getModmailConversations",
      "getModmailSubreddits",
      "getModmailUnreadCount",
      "getMoreChildren",
      "getMyBlocked",
      "getMyFriends",
      "getMyKarma",
      "getMyPrefs",
      "getMyTrophies",
      "getNew",
      "getPostRequirements",
      "getPrefsBlocked",
      "getPrefsFriends",
      "getPrefsMessaging",
      "getPrefsTrusted",
      "getPrefsWhere",
      "getRising",
      "getSavedCategories",
      "getScopes",
      "getSidebar",
      "getSorted",
      "getSticky",
      "getStylesheet",
      "getSubmitText",
      "getSubredditAbout",
      "getSubredditAboutEdit",
      "getSubredditAboutRules",
      "getSubredditAboutTraffic",
      "getSubredditAboutWhere",
      "getSubredditCollections",
      "getSubredditsWhere",
      "getUpdate",
      "getUpdates",
      "getUserAbout",
      "getUserDataByAccountIds",
      "getUserFlair",
      "getUserFlairV2",
      "getUserProfileWhere",
      "getUsersWhere",
      "getWidgetImageUploadLease",
      "getWidgets",
      "getWikiDiscussions",
      "getWikiPage",
      "getWikiPageSettings",
      "getWikiPages",
      "getWikiRevisions",
      "hide",
      "hideAnnouncement",
      "hideWikiPage",
      "highlightModmailConversation",
      "ignoreReports",
      "inviteContributor",
      "leaveContributor",
      "leaveModerator",
      "linksAndComments.deleteThing",
      "linksAndComments.editUserText",
      "linksAndComments.followPost",
      "linksAndComments.getMoreChildren",
      "linksAndComments.getSavedCategories",
      "linksAndComments.hide",
      "linksAndComments.lock",
      "linksAndComments.markNsfw",
      "linksAndComments.report",
      "linksAndComments.save",
      "linksAndComments.sendReplies",
      "linksAndComments.setContestMode",
      "linksAndComments.setSubredditSticky",
      "linksAndComments.setSuggestedSort",
      "linksAndComments.spoiler",
      "linksAndComments.storeVisits",
      "linksAndComments.submit",
      "linksAndComments.submitComment",
      "linksAndComments.unhide",
      "linksAndComments.unlock",
      "linksAndComments.unmarkNsfw",
      "linksAndComments.unsave",
      "linksAndComments.unspoiler",
      "linksAndComments.vote",
      "listings.getBest",
      "listings.getById",
      "listings.getComments",
      "listings.getDuplicates",
      "listings.getHot",
      "listings.getNew",
      "listings.getRising",
      "listings.getSorted",
      "listings.search",
      "liveThreads.acceptModeratorInvite",
      "liveThreads.close",
      "liveThreads.create",
      "liveThreads.get",
      "liveThreads.getContributors",
      "liveThreads.getDiscussions",
      "liveThreads.getUpdate",
      "liveThreads.getUpdates",
      "liveThreads.inviteContributor",
      "liveThreads.leaveContributor",
      "liveThreads.removeContributor",
      "liveThreads.removeUpdate",
      "liveThreads.report",
      "liveThreads.setContributorPermissions",
      "liveThreads.strikeUpdate",
      "liveThreads.update",
      "lock",
      "markModmailAsRead",
      "markModmailAsUnread",
      "markNsfw",
      "misc.getScopes",
      "moderation.acceptModeratorInvite",
      "moderation.approve",
      "moderation.distinguish",
      "moderation.getModListing",
      "moderation.getModLog",
      "moderation.getStylesheet",
      "moderation.ignoreReports",
      "moderation.leaveContributor",
      "moderation.leaveModerator",
      "moderation.remove",
      "moderation.showComment",
      "moderation.snoozeReports",
      "moderation.unignoreReports",
      "moderation.unsnoozeReports",
      "moderation.updateCrowdControlLevel",
      "modmailBulkRead",
      "muteModmailConversation",
      "needsCaptcha",
      "newModmail.archiveModmailConversation",
      "newModmail.createModmailConversation",
      "newModmail.createModmailMessage",
      "newModmail.getModmailConversation",
      "newModmail.getModmailConversationMessages",
      "newModmail.getModmailConversations",
      "newModmail.getModmailSubreddits",
      "newModmail.getModmailUnreadCount",
      "newModmail.highlightModmailConversation",
      "newModmail.markModmailAsRead",
      "newModmail.markModmailAsUnread",
      "newModmail.modmailBulkRead",
      "newModmail.muteModmailConversation",
      "newModmail.unarchiveModmailConversation",
      "newModmail.unhighlightModmailConversation",
      "newModmail.unmuteModmailConversation",
      "privateMessages.block",
      "privateMessages.collapseMessage",
      "privateMessages.composeMessage",
      "privateMessages.deleteMessage",
      "privateMessages.getMessages",
      "privateMessages.readAllMessages",
      "privateMessages.readMessage",
      "privateMessages.unblockSubreddit",
      "privateMessages.uncollapseMessage",
      "privateMessages.unreadMessage",
      "readAllAnnouncements",
      "readAllMessages",
      "readAnnouncement",
      "readMessage",
      "recommendSrBySrnames",
      "refreshAccessToken",
      "remove",
      "removeContributor",
      "removeFriend",
      "removePostFromCollection",
      "removeUpdate",
      "reorderCollection",
      "reorderWidgets",
      "report",
      "reportUser",
      "revertWikiPage",
      "save",
      "searchRedditNamesGet",
      "searchRedditNamesPost",
      "searchSubreddits",
      "searchSubredditsListing",
      "searchUsers",
      "selectFlair",
      "sendReplies",
      "setContestMode",
      "setContributorPermissions",
      "setCustomEmojiSize",
      "setFlair",
      "setFlairCsv",
      "setFlairEnabled",
      "setFlairTemplate",
      "setFlairTemplateV2",
      "setPermissions",
      "setSubredditSticky",
      "setSuggestedSort",
      "showComment",
      "siteAdmin",
      "snoozeReports",
      "spoiler",
      "storeVisits",
      "strikeUpdate",
      "submit",
      "subredditAutocomplete",
      "subredditAutocompleteV2",
      "subredditStylesheet",
      "subreddits.deleteSrBanner",
      "subreddits.deleteSrHeader",
      "subreddits.deleteSrIcon",
      "subreddits.deleteSrImg",
      "subreddits.getMineWhere",
      "subreddits.getPostRequirements",
      "subreddits.getSidebar",
      "subreddits.getSticky",
      "subreddits.getSubmitText",
      "subreddits.getSubredditAbout",
      "subreddits.getSubredditAboutEdit",
      "subreddits.getSubredditAboutRules",
      "subreddits.getSubredditAboutTraffic",
      "subreddits.getSubredditAboutWhere",
      "subreddits.getSubredditsWhere",
      "subreddits.recommendSrBySrnames",
      "subreddits.searchRedditNamesGet",
      "subreddits.searchRedditNamesPost",
      "subreddits.searchSubreddits",
      "subreddits.searchSubredditsListing",
      "subreddits.siteAdmin",
      "subreddits.subredditAutocomplete",
      "subreddits.subredditAutocompleteV2",
      "subreddits.subredditStylesheet",
      "subreddits.subscribe",
      "subreddits.uploadSrImg",
      "subscribe",
      "unarchiveModmailConversation",
      "unblockSubreddit",
      "uncollapseMessage",
      "unfriend",
      "unhide",
      "unhighlightModmailConversation",
      "unignoreReports",
      "unlock",
      "unmarkNsfw",
      "unmuteModmailConversation",
      "unreadAnnouncement",
      "unreadMessage",
      "unsave",
      "unsnoozeReports",
      "unspoiler",
      "update",
      "updateCollectionDescription",
      "updateCollectionDisplayLayout",
      "updateCollectionTitle",
      "updateCrowdControlLevel",
      "updateFlairTemplateOrder",
      "updateMyPrefs",
      "updateWidget",
      "updateWikiPageSettings",
      "uploadSrImg",
      "usernameAvailable",
      "users.blockUser",
      "users.friend",
      "users.getUserAbout",
      "users.getUserDataByAccountIds",
      "users.getUserProfileWhere",
      "users.getUserTrophies",
      "users.getUsersWhere",
      "users.reportUser",
      "users.searchUsers",
      "users.setPermissions",
      "users.unfriend",
      "users.usernameAvailable",
      "validateAccessToken",
      "widgets.createWidget",
      "widgets.deleteWidget",
      "widgets.getWidgetImageUploadLease",
      "widgets.getWidgets",
      "widgets.reorderWidgets",
      "widgets.updateWidget",
      "wiki.allowEditor",
      "wiki.editWikiPage",
      "wiki.getWikiDiscussions",
      "wiki.getWikiPage",
      "wiki.getWikiPageSettings",
      "wiki.getWikiPages",
      "wiki.getWikiRevisions",
      "wiki.hideWikiPage",
      "wiki.revertWikiPage",
      "wiki.updateWikiPageSettings"
    ],
    "all_readmes": [
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.acceptModeratorInvite.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "acceptModeratorInvite",
        "description": "Accepts an invitation to become a moderator of a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.acceptModeratorInvite.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "acceptModeratorInvite",
        "description": "Accepts an invitation to become a moderator of a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.addFriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.addFriend",
        "description": "Documentation for account.addFriend"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMe.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMe",
        "description": "Documentation for account.getMe"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyBlocked.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMyBlocked",
        "description": "Documentation for account.getMyBlocked"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyFriends.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMyFriends",
        "description": "Documentation for account.getMyFriends"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyKarma.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMyKarma",
        "description": "Documentation for account.getMyKarma"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyPrefs.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMyPrefs",
        "description": "Documentation for account.getMyPrefs"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyTrophies.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getMyTrophies",
        "description": "Documentation for account.getMyTrophies"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsBlocked.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getPrefsBlocked",
        "description": "Documentation for account.getPrefsBlocked"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsFriends.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getPrefsFriends",
        "description": "Documentation for account.getPrefsFriends"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsMessaging.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getPrefsMessaging",
        "description": "Documentation for account.getPrefsMessaging"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsTrusted.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getPrefsTrusted",
        "description": "Documentation for account.getPrefsTrusted"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.getPrefsWhere",
        "description": "Documentation for account.getPrefsWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.removeFriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.removeFriend",
        "description": "Documentation for account.removeFriend"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.updateMyPrefs.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "account.updateMyPrefs",
        "description": "Documentation for account.updateMyPrefs"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.addFriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "addFriend",
        "description": "Part of the `account` section. Adds a user to the authenticated user's friends list."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.addOrUpdateEmoji.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "addOrUpdateEmoji",
        "description": "Part of the `emoji` section. Adds or updates a custom emoji in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.addPostToCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "addPostToCollection",
        "description": "Part of the `collections` section. Adds a post to a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.allowEditor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "allowEditor",
        "description": "Adds or removes a user as an editor for a specific wiki page."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.getAnnouncements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "announcements.getAnnouncements",
        "description": "Documentation for announcements.getAnnouncements"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.hideAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "announcements.hideAnnouncement",
        "description": "Documentation for announcements.hideAnnouncement"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.readAllAnnouncements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "announcements.readAllAnnouncements",
        "description": "Documentation for announcements.readAllAnnouncements"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.readAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "announcements.readAnnouncement",
        "description": "Documentation for announcements.readAnnouncement"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.unreadAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "announcements.unreadAnnouncement",
        "description": "Documentation for announcements.unreadAnnouncement"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.approve.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "approve",
        "description": "Approves a post or comment."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.archiveModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "archiveModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.block.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "block",
        "description": "Part of the `privateMessages` section. Block a user via a private message."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.blockUser.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "blockUser",
        "description": "Blocks a user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/captcha.needsCaptcha.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "captcha.needsCaptcha",
        "description": "Documentation for captcha.needsCaptcha"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.clearFlairTemplates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "clearFlairTemplates",
        "description": "Part of the `flair` section. Clears all flair templates of a specific type in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.close.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "close",
        "description": "Closes a live thread, preventing any new updates."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.collapseMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collapseMessage",
        "description": "Part of the `privateMessages` section. Collapse a message."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.addPostToCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.addPostToCollection",
        "description": "Documentation for collections.addPostToCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.createCollection.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "collections.createCollection",
        "description": "Documentation for collections.createCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.deleteCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.deleteCollection",
        "description": "Documentation for collections.deleteCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.getCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.getCollection",
        "description": "Documentation for collections.getCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.getSubredditCollections.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.getSubredditCollections",
        "description": "Documentation for collections.getSubredditCollections"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.removePostFromCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.removePostFromCollection",
        "description": "Documentation for collections.removePostFromCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.reorderCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.reorderCollection",
        "description": "Documentation for collections.reorderCollection"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionDescription.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.updateCollectionDescription",
        "description": "Documentation for collections.updateCollectionDescription"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionDisplayLayout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.updateCollectionDisplayLayout",
        "description": "Documentation for collections.updateCollectionDisplayLayout"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionTitle.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "collections.updateCollectionTitle",
        "description": "Documentation for collections.updateCollectionTitle"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.composeMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "composeMessage",
        "description": "Part of the `privateMessages` section. Compose a private message."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.configureFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "configureFlair",
        "description": "Part of the `flair` section. Configures flair settings for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.create.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "create",
        "description": "Creates a new live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.createCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "createCollection",
        "description": "Part of the `collections` section. Creates a new collection in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.createModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "createModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.createModmailMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "createModmailMessage",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.createWidget.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "createWidget",
        "description": "Creates a new widget in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.deleteCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteCollection",
        "description": "Part of the `collections` section. Deletes a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.deleteEmoji.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteEmoji",
        "description": "Part of the `emoji` section. Deletes a custom emoji from a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.deleteFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteFlair",
        "description": "Part of the `flair` section. Deletes a user's flair in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.deleteFlairTemplate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteFlairTemplate",
        "description": "Part of the `flair` section. Deletes a flair template in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.deleteMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteMessage",
        "description": "Part of the `privateMessages` section. Delete a private message."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrBanner.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteSrBanner",
        "description": "Part of the `subreddits` section. Delete the banner image for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrHeader.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteSrHeader",
        "description": "Part of the `subreddits` section. Delete the header image for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrIcon.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteSrIcon",
        "description": "Part of the `subreddits` section. Delete the icon image for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrImg.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteSrImg",
        "description": "Part of the `subreddits` section. Delete an image from a subreddit's stylesheet."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.deleteThing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteThing",
        "description": "Part of the `linksAndComments` section. Deletes a thing (e.g., a comment or post) created by the user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.deleteWidget.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "deleteWidget",
        "description": "Deletes a widget from a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.distinguish.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "distinguish",
        "description": "Distinguishes a post or comment."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.editWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "editWikiPage",
        "description": "Edits a wiki page in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.addOrUpdateEmoji.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "emoji.addOrUpdateEmoji",
        "description": "Documentation for emoji.addOrUpdateEmoji"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.deleteEmoji.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "emoji.deleteEmoji",
        "description": "Documentation for emoji.deleteEmoji"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.getAllEmojis.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "emoji.getAllEmojis",
        "description": "Documentation for emoji.getAllEmojis"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.getEmojiUploadLease.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "emoji.getEmojiUploadLease",
        "description": "Documentation for emoji.getEmojiUploadLease"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.setCustomEmojiSize.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "emoji.setCustomEmojiSize",
        "description": "Documentation for emoji.setCustomEmojiSize"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.clearFlairTemplates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.clearFlairTemplates",
        "description": "Documentation for flair.clearFlairTemplates"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.configureFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.configureFlair",
        "description": "Documentation for flair.configureFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.deleteFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.deleteFlair",
        "description": "Documentation for flair.deleteFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.deleteFlairTemplate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.deleteFlairTemplate",
        "description": "Documentation for flair.deleteFlairTemplate"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getFlairList.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getFlairList",
        "description": "Documentation for flair.getFlairList"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getFlairSelector.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getFlairSelector",
        "description": "Documentation for flair.getFlairSelector"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getLinkFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getLinkFlair",
        "description": "Documentation for flair.getLinkFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getLinkFlairV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getLinkFlairV2",
        "description": "Documentation for flair.getLinkFlairV2"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getUserFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getUserFlair",
        "description": "Documentation for flair.getUserFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getUserFlairV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.getUserFlairV2",
        "description": "Documentation for flair.getUserFlairV2"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.selectFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.selectFlair",
        "description": "Documentation for flair.selectFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.setFlair",
        "description": "Documentation for flair.setFlair"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairCsv.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.setFlairCsv",
        "description": "Documentation for flair.setFlairCsv"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairEnabled.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.setFlairEnabled",
        "description": "Documentation for flair.setFlairEnabled"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairTemplate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.setFlairTemplate",
        "description": "Documentation for flair.setFlairTemplate"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairTemplateV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.setFlairTemplateV2",
        "description": "Documentation for flair.setFlairTemplateV2"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.updateFlairTemplateOrder.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "flair.updateFlairTemplateOrder",
        "description": "Documentation for flair.updateFlairTemplateOrder"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.followPost.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "followPost",
        "description": "Part of the `linksAndComments` section. Follows or unfollows a post, which enables notifications for new comments."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.friend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "friend",
        "description": "Adds a user as a friend in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.get.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "get",
        "description": "Retrieves one or more live threads by their fullnames or IDs."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.getAllEmojis.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getAllEmojis",
        "description": "Part of the `emoji` section. Retrieves all custom emojis for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.getAnnouncements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getAnnouncements",
        "description": "Part of the `announcements` section. Gets the current announcements."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getBest.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getBest",
        "description": "Part of the `listings` section. Fetch the best posts."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getById.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getById",
        "description": "Part of the `listings` section. Get posts by their fullnames."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.getCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getCollection",
        "description": "Part of the `collections` section. Gets a collection by its ID."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getComments.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getComments",
        "description": "Part of the `listings` section. Get the comments for a post."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getContributors.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getContributors",
        "description": "Retrieves a list of contributors for a specific live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getDiscussions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getDiscussions",
        "description": "Retrieves a listing of discussion threads about a specific live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getDuplicates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getDuplicates",
        "description": "Part of the `listings` section. Get the duplicates of a post."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.getEmojiUploadLease.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getEmojiUploadLease",
        "description": "Part of the `emoji` section. Gets an S3 upload lease for a custom emoji image."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getFlairList.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getFlairList",
        "description": "Part of the `flair` section. Retrieves a list of user flairs in the subreddit. Supports pagination."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getFlairSelector.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getFlairSelector",
        "description": "Part of the `flair` section. Retrieves available flair choices for a user or a link submission."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getHot.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getHot",
        "description": "Part of the `listings` section. Fetch the hot posts."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getLinkFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getLinkFlair",
        "description": "Part of the `flair` section. Retrieves the link flair templates for the subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getLinkFlairV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getLinkFlairV2",
        "description": "Part of the `flair` section. Retrieves the link flair templates for the subreddit using the V2 endpoint."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.getMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMessages",
        "description": "Part of the `privateMessages` section. Get private messages from the user's inbox, unread messages, or sent messages."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getMineWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMineWhere",
        "description": "Retrieves a list of subreddits related to the authenticated user, based on the specified category."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getModListing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModListing",
        "description": "Retrieves a moderation listing for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getModLog.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModLog",
        "description": "Retrieves the moderation log for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversationMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModmailConversationMessages",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversations.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModmailConversations",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailSubreddits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModmailSubreddits",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailUnreadCount.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getModmailUnreadCount",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.getMoreChildren.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMoreChildren",
        "description": "Part of the `linksAndComments` section. Used to fetch more comments from a comment tree, typically when a \"load more\" or \"continue this thread\" link is present."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyBlocked.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMyBlocked",
        "description": "Part of the `account` section. Gets the list of blocked users for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyFriends.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMyFriends",
        "description": "Part of the `account` section. Gets the list of friends for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyKarma.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMyKarma",
        "description": "Part of the `account` section. Gets the karma breakdown by subreddit for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyPrefs.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMyPrefs",
        "description": "Part of the `account` section. Gets the preferences for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getMyTrophies.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMyTrophies",
        "description": "Part of the `account` section. Gets the trophy case for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getNew.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getNew",
        "description": "Part of the `listings` section. Fetch the new posts."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getPostRequirements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPostRequirements",
        "description": "Retrieves the post requirements for a specific subreddit. This includes details like the body restriction policy."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsBlocked.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPrefsBlocked",
        "description": "Part of the `account` section. Gets the list of blocked users based on the user's preferences."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsFriends.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPrefsFriends",
        "description": "Part of the `account` section. Gets the list of friends based on the user's preferences."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsMessaging.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPrefsMessaging",
        "description": "Part of the `account` section. Gets the list of users from whom the authenticated user has chosen to receive private messages."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsTrusted.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPrefsTrusted",
        "description": "Part of the `account` section. Gets the list of trusted users based on the user's preferences. Trusted users' content is always visible."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.getPrefsWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getPrefsWhere",
        "description": "Part of the `account` section. Gets a list of users based on a specified preference category."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getRising.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getRising",
        "description": "Part of the `listings` section. Fetch the rising posts."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.getSavedCategories.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSavedCategories",
        "description": "Part of the `linksAndComments` section. Retrieves a list of categories under which the user has saved posts or comments."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/misc.getScopes.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getScopes",
        "description": "Part of the `misc` section. Get information about OAuth2 scopes."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSidebar.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSidebar",
        "description": "Retrieves the content of a subreddit's sidebar."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getSorted.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSorted",
        "description": "Part of the `listings` section. Fetch posts sorted by a specific criteria."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSticky.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSticky",
        "description": "Retrieves a stickied post from a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getStylesheet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getStylesheet",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubmitText.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubmitText",
        "description": "Part of the `subreddits` section. Get the submission text for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAbout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditAbout",
        "description": "Retrieves information about a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutEdit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditAboutEdit",
        "description": "Retrieves editable details about a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutRules.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditAboutRules",
        "description": "Retrieves the rules for a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutTraffic.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditAboutTraffic",
        "description": "Retrieves traffic statistics for a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditAboutWhere",
        "description": "Part of the `subreddits` section. Get various user listings for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.getSubredditCollections.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditCollections",
        "description": "Part of the `collections` section. Retrieves all collections for a given subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditsWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getSubredditsWhere",
        "description": "Retrieves a list of subreddits based on the specified category."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUpdate",
        "description": "Retrieves a specific update from a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getUpdates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUpdates",
        "description": "Retrieves a listing of updates from a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserAbout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUserAbout",
        "description": "Retrieves information about a specific user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserDataByAccountIds.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUserDataByAccountIds",
        "description": "Retrieves user data for a list of account IDs."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getUserFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUserFlair",
        "description": "Part of the `flair` section. Retrieves the user flair templates for the subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.getUserFlairV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUserFlairV2",
        "description": "Part of the `flair` section. Retrieves the user flair templates for the subreddit using the V2 endpoint."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserProfileWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUserProfileWhere",
        "description": "Retrieves content from a user's profile, such as their posts, comments, or saved items."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUsersWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getUsersWhere",
        "description": "Retrieves a list of users based on the specified category."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.getWidgetImageUploadLease.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWidgetImageUploadLease",
        "description": "Gets an S3 upload lease for a widget image."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.getWidgets.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWidgets",
        "description": "Retrieves a list of widgets for a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiDiscussions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWikiDiscussions",
        "description": "Retrieves a listing of discussion threads about a specific wiki page."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWikiPage",
        "description": "Retrieves the content of a specific wiki page."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWikiPages",
        "description": "Retrieves a list of wiki pages in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPageSettings.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWikiPageSettings",
        "description": "Retrieves the settings for a specific wiki page."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiRevisions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getWikiRevisions",
        "description": "Retrieves a listing of wiki page revisions for a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.hide.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "hide",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.hideAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "hideAnnouncement",
        "description": "Part of the `announcements` section. Hides one or more announcements."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.hideWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "hideWikiPage",
        "description": "Hides a wiki page in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.highlightModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "highlightModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.ignoreReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "ignoreReports",
        "description": "Ignores reports on a post or comment."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.inviteContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "inviteContributor",
        "description": "Invites a user to be a contributor on a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.leaveContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "leaveContributor",
        "description": "Abandons contributor status on a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.leaveContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "leaveContributor",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.leaveModerator.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "leaveModerator",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.deleteThing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.deleteThing",
        "description": "Documentation for linksAndComments.deleteThing"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.editUserText.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.editUserText",
        "description": "Documentation for linksAndComments.editUserText"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.followPost.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.followPost",
        "description": "Documentation for linksAndComments.followPost"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.getMoreChildren.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.getMoreChildren",
        "description": "Documentation for linksAndComments.getMoreChildren"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.getSavedCategories.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.getSavedCategories",
        "description": "Documentation for linksAndComments.getSavedCategories"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.hide.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.hide",
        "description": "Documentation for linksAndComments.hide"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.lock.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.lock",
        "description": "Documentation for linksAndComments.lock"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.markNsfw.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.markNsfw",
        "description": "Documentation for linksAndComments.markNsfw"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.report.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.report",
        "description": "Documentation for linksAndComments.report"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.save.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.save",
        "description": "Documentation for linksAndComments.save"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.sendReplies.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.sendReplies",
        "description": "Documentation for linksAndComments.sendReplies"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setContestMode.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.setContestMode",
        "description": "Documentation for linksAndComments.setContestMode"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setSubredditSticky.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.setSubredditSticky",
        "description": "Documentation for linksAndComments.setSubredditSticky"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setSuggestedSort.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.setSuggestedSort",
        "description": "Documentation for linksAndComments.setSuggestedSort"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.spoiler.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.spoiler",
        "description": "Documentation for linksAndComments.spoiler"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.storeVisits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.storeVisits",
        "description": "Documentation for linksAndComments.storeVisits"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.submit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.submit",
        "description": "Documentation for linksAndComments.submit"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.submitComment.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.submitComment",
        "description": "Documentation for linksAndComments.submitComment"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unhide.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.unhide",
        "description": "Documentation for linksAndComments.unhide"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unlock.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.unlock",
        "description": "Documentation for linksAndComments.unlock"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unmarkNsfw.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.unmarkNsfw",
        "description": "Documentation for linksAndComments.unmarkNsfw"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unsave.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.unsave",
        "description": "Documentation for linksAndComments.unsave"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unspoiler.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.unspoiler",
        "description": "Documentation for linksAndComments.unspoiler"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.vote.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "linksAndComments.vote",
        "description": "Documentation for linksAndComments.vote"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getBest.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getBest",
        "description": "Documentation for listings.getBest"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getById.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getById",
        "description": "Documentation for listings.getById"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getComments.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getComments",
        "description": "Documentation for listings.getComments"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getDuplicates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getDuplicates",
        "description": "Documentation for listings.getDuplicates"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getHot.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getHot",
        "description": "Documentation for listings.getHot"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getNew.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getNew",
        "description": "Documentation for listings.getNew"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getRising.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getRising",
        "description": "Documentation for listings.getRising"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.getSorted.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.getSorted",
        "description": "Documentation for listings.getSorted"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/listings.search.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "listings.search",
        "description": "Documentation for listings.search"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.acceptModeratorInvite.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.acceptModeratorInvite",
        "description": "Documentation for liveThreads.acceptModeratorInvite"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.close.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.close",
        "description": "Documentation for liveThreads.close"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.create.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "liveThreads.create",
        "description": "Documentation for liveThreads.create"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.get.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.get",
        "description": "Documentation for liveThreads.get"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getContributors.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.getContributors",
        "description": "Documentation for liveThreads.getContributors"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getDiscussions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.getDiscussions",
        "description": "Documentation for liveThreads.getDiscussions"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.getUpdate",
        "description": "Documentation for liveThreads.getUpdate"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.getUpdates.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.getUpdates",
        "description": "Documentation for liveThreads.getUpdates"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.inviteContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.inviteContributor",
        "description": "Documentation for liveThreads.inviteContributor"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.leaveContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.leaveContributor",
        "description": "Documentation for liveThreads.leaveContributor"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.removeContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.removeContributor",
        "description": "Documentation for liveThreads.removeContributor"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.removeUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.removeUpdate",
        "description": "Documentation for liveThreads.removeUpdate"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.report.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.report",
        "description": "Documentation for liveThreads.report"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.setContributorPermissions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.setContributorPermissions",
        "description": "Documentation for liveThreads.setContributorPermissions"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.strikeUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.strikeUpdate",
        "description": "Documentation for liveThreads.strikeUpdate"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.update.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "liveThreads.update",
        "description": "Documentation for liveThreads.update"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.lock.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "lock",
        "description": "Part of the `linksAndComments` section. Locks a post or comment, preventing new comments from being submitted."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.markModmailAsRead.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "markModmailAsRead",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.markModmailAsUnread.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "markModmailAsUnread",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.markNsfw.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "markNsfw",
        "description": "Part of the `linksAndComments` section. Marks a post as Not-Safe-For-Work (NSFW)."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/misc.getScopes.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "misc.getScopes",
        "description": "Documentation for misc.getScopes"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.acceptModeratorInvite.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.acceptModeratorInvite",
        "description": "Documentation for moderation.acceptModeratorInvite"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.approve.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.approve",
        "description": "Documentation for moderation.approve"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.distinguish.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.distinguish",
        "description": "Documentation for moderation.distinguish"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getModListing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.getModListing",
        "description": "Documentation for moderation.getModListing"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getModLog.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.getModLog",
        "description": "Documentation for moderation.getModLog"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.getStylesheet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.getStylesheet",
        "description": "Documentation for moderation.getStylesheet"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.ignoreReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.ignoreReports",
        "description": "Documentation for moderation.ignoreReports"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.leaveContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.leaveContributor",
        "description": "Documentation for moderation.leaveContributor"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.leaveModerator.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.leaveModerator",
        "description": "Documentation for moderation.leaveModerator"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.remove.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.remove",
        "description": "Documentation for moderation.remove"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.showComment.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.showComment",
        "description": "Documentation for moderation.showComment"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.snoozeReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.snoozeReports",
        "description": "Documentation for moderation.snoozeReports"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.unignoreReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.unignoreReports",
        "description": "Documentation for moderation.unignoreReports"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.unsnoozeReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.unsnoozeReports",
        "description": "Documentation for moderation.unsnoozeReports"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.updateCrowdControlLevel.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "moderation.updateCrowdControlLevel",
        "description": "Documentation for moderation.updateCrowdControlLevel"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.modmailBulkRead.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "modmailBulkRead",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.muteModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "muteModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/captcha.needsCaptcha.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "needsCaptcha",
        "description": "Part of the `captcha` section. Checks if a CAPTCHA is required for an action."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.archiveModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.archiveModmailConversation",
        "description": "Documentation for newModmail.archiveModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.createModmailConversation.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "newModmail.createModmailConversation",
        "description": "Documentation for newModmail.createModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.createModmailMessage.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "newModmail.createModmailMessage",
        "description": "Documentation for newModmail.createModmailMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.getModmailConversation",
        "description": "Documentation for newModmail.getModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversationMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.getModmailConversationMessages",
        "description": "Documentation for newModmail.getModmailConversationMessages"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailConversations.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.getModmailConversations",
        "description": "Documentation for newModmail.getModmailConversations"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailSubreddits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.getModmailSubreddits",
        "description": "Documentation for newModmail.getModmailSubreddits"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.getModmailUnreadCount.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.getModmailUnreadCount",
        "description": "Documentation for newModmail.getModmailUnreadCount"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.highlightModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.highlightModmailConversation",
        "description": "Documentation for newModmail.highlightModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.markModmailAsRead.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.markModmailAsRead",
        "description": "Documentation for newModmail.markModmailAsRead"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.markModmailAsUnread.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.markModmailAsUnread",
        "description": "Documentation for newModmail.markModmailAsUnread"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.modmailBulkRead.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.modmailBulkRead",
        "description": "Documentation for newModmail.modmailBulkRead"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.muteModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.muteModmailConversation",
        "description": "Documentation for newModmail.muteModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unarchiveModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.unarchiveModmailConversation",
        "description": "Documentation for newModmail.unarchiveModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unhighlightModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.unhighlightModmailConversation",
        "description": "Documentation for newModmail.unhighlightModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unmuteModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "newModmail.unmuteModmailConversation",
        "description": "Documentation for newModmail.unmuteModmailConversation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.block.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.block",
        "description": "Documentation for privateMessages.block"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.collapseMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.collapseMessage",
        "description": "Documentation for privateMessages.collapseMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.composeMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.composeMessage",
        "description": "Documentation for privateMessages.composeMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.deleteMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.deleteMessage",
        "description": "Documentation for privateMessages.deleteMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.getMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.getMessages",
        "description": "Documentation for privateMessages.getMessages"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.readAllMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.readAllMessages",
        "description": "Documentation for privateMessages.readAllMessages"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.readMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.readMessage",
        "description": "Documentation for privateMessages.readMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.unblockSubreddit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.unblockSubreddit",
        "description": "Documentation for privateMessages.unblockSubreddit"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.uncollapseMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.uncollapseMessage",
        "description": "Documentation for privateMessages.uncollapseMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.unreadMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "privateMessages.unreadMessage",
        "description": "Documentation for privateMessages.unreadMessage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.readAllAnnouncements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "readAllAnnouncements",
        "description": "Part of the `announcements` section. Marks all announcements as read."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.readAllMessages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "readAllMessages",
        "description": "Part of the `privateMessages` section. Mark all private messages as read."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.readAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "readAnnouncement",
        "description": "Part of the `announcements` section. Marks one or more announcements as read."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.readMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "readMessage",
        "description": "Part of the `privateMessages` section. Mark a private message as read."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.recommendSrBySrnames.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "recommendSrBySrnames",
        "description": "Part of the `subreddits` section. Recommends subreddits based on a list of subreddit names."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/RedditSDK.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "RedditSDK",
        "description": "Initializes a new instance of the RedditSDK."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/refreshAccessToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "refreshAccessToken",
        "description": "Refreshes the access token using a refresh token."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.remove.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "remove",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.removeContributor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "removeContributor",
        "description": "Removes a contributor from a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.removeFriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "removeFriend",
        "description": "Part of the `account` section. Removes a user from the authenticated user's friends list."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.removePostFromCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "removePostFromCollection",
        "description": "Part of the `collections` section. Removes a post from a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.removeUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "removeUpdate",
        "description": "Removes an update from a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.reorderCollection.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "reorderCollection",
        "description": "Part of the `collections` section. Reorders the posts within a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.reorderWidgets.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "reorderWidgets",
        "description": "Reorders the widgets in a specific section of a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.report.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "report",
        "description": "Part of the `linksAndComments` section. Reports a thing (e.g., a post or comment) for breaking Reddit's rules."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.report.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "report",
        "description": "Reports a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.reportUser.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "reportUser",
        "description": "Reports a user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.revertWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "revertWikiPage",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.save.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "save",
        "description": "Part of the `linksAndComments` section. Saves a post or comment to the user's account."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchRedditNamesGet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "searchRedditNamesGet",
        "description": "Part of the `subreddits` section. Search for subreddit names using a GET request."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchRedditNamesPost.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "searchRedditNamesPost",
        "description": "Part of the `subreddits` section. Search for subreddit names using a POST request."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchSubreddits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "searchSubreddits",
        "description": "Part of the `subreddits` section. Search for subreddits by name."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchSubredditsListing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "searchSubredditsListing",
        "description": "Searches for subreddits."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.searchUsers.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "searchUsers",
        "description": "Searches for users."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.selectFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "selectFlair",
        "description": "Part of the `flair` section. Selects or clears a flair for the current user or a link."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.sendReplies.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "sendReplies",
        "description": "Part of the `linksAndComments` section. Enables or disables inbox replies for a post or comment."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setContestMode.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setContestMode",
        "description": "Part of the `linksAndComments` section. Sets or unsets contest mode for a given post's comments. When enabled, comment scores are hidden and their order is randomized."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.setContributorPermissions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setContributorPermissions",
        "description": "Sets the permissions for a contributor on a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/emoji.setCustomEmojiSize.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setCustomEmojiSize",
        "description": "Part of the `emoji` section. Sets the size of a custom emoji."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlair.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setFlair",
        "description": "Part of the `flair` section. Sets flair for a user or a link in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairCsv.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setFlairCsv",
        "description": "Part of the `flair` section. Bulk assigns user flair from a CSV string."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairEnabled.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setFlairEnabled",
        "description": "Part of the `flair` section. Enables or disables flair in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairTemplate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setFlairTemplate",
        "description": "Part of the `flair` section. Creates or updates a flair template."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.setFlairTemplateV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setFlairTemplateV2",
        "description": "Part of the `flair` section. Creates or updates a flair template using the V2 endpoint, which supports more customization."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.setPermissions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setPermissions",
        "description": "Sets permissions for a user in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setSubredditSticky.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setSubredditSticky",
        "description": "Part of the `linksAndComments` section. Stickies or unstickies a post in a subreddit. Requires moderator privileges."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.setSuggestedSort.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "setSuggestedSort",
        "description": "Part of the `linksAndComments` section. Sets the suggested sort for the comments on a post."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.showComment.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "showComment",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.siteAdmin.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "siteAdmin",
        "description": "Part of the `subreddits` section. Used to update a wide variety of subreddit settings. This is a powerful endpoint available to subreddit moderators."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.snoozeReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "snoozeReports",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.spoiler.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "spoiler",
        "description": "Part of the `linksAndComments` section. Marks a post as a spoiler."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.storeVisits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "storeVisits",
        "description": "Part of the `linksAndComments` section. Records that the user has visited a set of links."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.strikeUpdate.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "strikeUpdate",
        "description": "Strikes an update from a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.submit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "submit",
        "description": "Part of the `linksAndComments` section. Submits a new post to a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditAutocomplete.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subredditAutocomplete",
        "description": "Part of the `subreddits` section. Get a list of subreddits that match a query."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditAutocompleteV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subredditAutocompleteV2",
        "description": "Part of the `subreddits` section. Get a list of subreddits that match a query (V2)."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrBanner.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.deleteSrBanner",
        "description": "Documentation for subreddits.deleteSrBanner"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrHeader.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.deleteSrHeader",
        "description": "Documentation for subreddits.deleteSrHeader"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrIcon.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.deleteSrIcon",
        "description": "Documentation for subreddits.deleteSrIcon"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.deleteSrImg.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.deleteSrImg",
        "description": "Documentation for subreddits.deleteSrImg"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getMineWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getMineWhere",
        "description": "Documentation for subreddits.getMineWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getPostRequirements.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getPostRequirements",
        "description": "Documentation for subreddits.getPostRequirements"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSidebar.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSidebar",
        "description": "Documentation for subreddits.getSidebar"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSticky.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSticky",
        "description": "Documentation for subreddits.getSticky"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubmitText.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubmitText",
        "description": "Documentation for subreddits.getSubmitText"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAbout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditAbout",
        "description": "Documentation for subreddits.getSubredditAbout"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutEdit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditAboutEdit",
        "description": "Documentation for subreddits.getSubredditAboutEdit"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutRules.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditAboutRules",
        "description": "Documentation for subreddits.getSubredditAboutRules"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutTraffic.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditAboutTraffic",
        "description": "Documentation for subreddits.getSubredditAboutTraffic"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditAboutWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditAboutWhere",
        "description": "Documentation for subreddits.getSubredditAboutWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.getSubredditsWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.getSubredditsWhere",
        "description": "Documentation for subreddits.getSubredditsWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.recommendSrBySrnames.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.recommendSrBySrnames",
        "description": "Documentation for subreddits.recommendSrBySrnames"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchRedditNamesGet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.searchRedditNamesGet",
        "description": "Documentation for subreddits.searchRedditNamesGet"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchRedditNamesPost.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.searchRedditNamesPost",
        "description": "Documentation for subreddits.searchRedditNamesPost"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchSubreddits.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.searchSubreddits",
        "description": "Documentation for subreddits.searchSubreddits"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.searchSubredditsListing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.searchSubredditsListing",
        "description": "Documentation for subreddits.searchSubredditsListing"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.siteAdmin.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.siteAdmin",
        "description": "Documentation for subreddits.siteAdmin"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditAutocomplete.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.subredditAutocomplete",
        "description": "Documentation for subreddits.subredditAutocomplete"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditAutocompleteV2.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.subredditAutocompleteV2",
        "description": "Documentation for subreddits.subredditAutocompleteV2"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditStylesheet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.subredditStylesheet",
        "description": "Documentation for subreddits.subredditStylesheet"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subscribe.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.subscribe",
        "description": "Documentation for subreddits.subscribe"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.uploadSrImg.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subreddits.uploadSrImg",
        "description": "Documentation for subreddits.uploadSrImg"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subredditStylesheet.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subredditStylesheet",
        "description": "Part of the `subreddits` section. Update a subreddit's stylesheet."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.subscribe.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "subscribe",
        "description": "Part of the `subreddits` section. Subscribe to or unsubscribe from a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unarchiveModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unarchiveModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.unblockSubreddit.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unblockSubreddit",
        "description": "Part of the `privateMessages` section. Unblock a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.uncollapseMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "uncollapseMessage",
        "description": "Part of the `privateMessages` section. Uncollapse a private message."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.unfriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unfriend",
        "description": "Removes a user as a friend in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unhide.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unhide",
        "description": "Part of the `linksAndComments` section. Unhides a previously hidden post."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unhighlightModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unhighlightModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.unignoreReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unignoreReports",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unlock.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unlock",
        "description": "Part of the `linksAndComments` section. Unlocks a previously locked post, allowing new comments to be submitted."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unmarkNsfw.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unmarkNsfw",
        "description": "Part of the `linksAndComments` section. Unmarks a post as Not-Safe-For-Work (NSFW)."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/newModmail.unmuteModmailConversation.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unmuteModmailConversation",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/announcements.unreadAnnouncement.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unreadAnnouncement",
        "description": "Part of the `announcements` section. Marks one or more announcements as unread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/privateMessages.unreadMessage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unreadMessage",
        "description": "Part of the `privateMessages` section. Mark a private message as unread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unsave.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unsave",
        "description": "Part of the `linksAndComments` section. Unsaves a previously saved post or comment."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.unsnoozeReports.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unsnoozeReports",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/linksAndComments.unspoiler.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "unspoiler",
        "description": "Part of the `linksAndComments` section. Unmarks a post as a spoiler. This method does not return anything."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/liveThreads.update.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "update",
        "description": "Posts an update to a live thread."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionDescription.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateCollectionDescription",
        "description": "Part of the `collections` section. Updates the description of a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionDisplayLayout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateCollectionDisplayLayout",
        "description": "Part of the `collections` section. Updates the display layout of a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/collections.updateCollectionTitle.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateCollectionTitle",
        "description": "Part of the `collections` section. Updates the title of a collection."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/moderation.updateCrowdControlLevel.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateCrowdControlLevel",
        "description": "API function documentation"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/flair.updateFlairTemplateOrder.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateFlairTemplateOrder",
        "description": "Part of the `flair` section. Updates the order of flair templates in a subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/account.updateMyPrefs.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateMyPrefs",
        "description": "Part of the `account` section. Updates the preferences for the currently authenticated user."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.updateWidget.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateWidget",
        "description": "Updates an existing widget in a specific subreddit."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.updateWikiPageSettings.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "updateWikiPageSettings",
        "description": "Updates the settings for a specific wiki page."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/subreddits.uploadSrImg.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "uploadSrImg",
        "description": "Part of the `subreddits` section. Upload an image to a subreddit's stylesheet, or as a header, icon, or banner."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.usernameAvailable.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "usernameAvailable",
        "description": "Checks if a username is available."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.blockUser.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.blockUser",
        "description": "Documentation for users.blockUser"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.friend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.friend",
        "description": "Documentation for users.friend"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserAbout.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.getUserAbout",
        "description": "Documentation for users.getUserAbout"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserDataByAccountIds.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.getUserDataByAccountIds",
        "description": "Documentation for users.getUserDataByAccountIds"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserProfileWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.getUserProfileWhere",
        "description": "Documentation for users.getUserProfileWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUsersWhere.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.getUsersWhere",
        "description": "Documentation for users.getUsersWhere"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.getUserTrophies.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.getUserTrophies",
        "description": "Documentation for users.getUserTrophies"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.reportUser.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.reportUser",
        "description": "Documentation for users.reportUser"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.searchUsers.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.searchUsers",
        "description": "Documentation for users.searchUsers"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.setPermissions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.setPermissions",
        "description": "Documentation for users.setPermissions"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.unfriend.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.unfriend",
        "description": "Documentation for users.unfriend"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/users.usernameAvailable.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "users.usernameAvailable",
        "description": "Documentation for users.usernameAvailable"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/validateAccessToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "validateAccessToken",
        "description": "Validates the current access token."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.createWidget.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "widgets.createWidget",
        "description": "Documentation for widgets.createWidget"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.deleteWidget.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "widgets.deleteWidget",
        "description": "Documentation for widgets.deleteWidget"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.getWidgetImageUploadLease.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "widgets.getWidgetImageUploadLease",
        "description": "Documentation for widgets.getWidgetImageUploadLease"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.getWidgets.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "widgets.getWidgets",
        "description": "Documentation for widgets.getWidgets"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.reorderWidgets.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "widgets.reorderWidgets",
        "description": "Documentation for widgets.reorderWidgets"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/widgets.updateWidget.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "widgets.updateWidget",
        "description": "Documentation for widgets.updateWidget"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.allowEditor.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.allowEditor",
        "description": "Documentation for wiki.allowEditor"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.editWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.editWikiPage",
        "description": "Documentation for wiki.editWikiPage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiDiscussions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.getWikiDiscussions",
        "description": "Documentation for wiki.getWikiDiscussions"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.getWikiPage",
        "description": "Documentation for wiki.getWikiPage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPages.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.getWikiPages",
        "description": "Documentation for wiki.getWikiPages"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiPageSettings.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.getWikiPageSettings",
        "description": "Documentation for wiki.getWikiPageSettings"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.getWikiRevisions.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.getWikiRevisions",
        "description": "Documentation for wiki.getWikiRevisions"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.hideWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.hideWikiPage",
        "description": "Documentation for wiki.hideWikiPage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.revertWikiPage.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.revertWikiPage",
        "description": "Documentation for wiki.revertWikiPage"
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit/docs/wiki.updateWikiPageSettings.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "wiki.updateWikiPageSettings",
        "description": "Documentation for wiki.updateWikiPageSettings"
      }
    ]
  },
  "constructors": [
    {
      "name": "RedditSDK",
      "description": "Create a new Reddit TypeScript SDK client through which you can interact with the API",
      "auth": "oauth2",
      "authSdk": "@microfox/reddit-oauth",
      "authEndpoint": "/connect/reddit-oauth",
      "requiredKeys": [],
      "internalKeys": [
        {
          "key": "REDDIT_CLIENT_ID",
          "displayName": "Reddit Client ID",
          "description": "Your Reddit application's client ID."
        },
        {
          "key": "REDDIT_CLIENT_SECRET",
          "displayName": "Reddit Client Secret",
          "description": "Your Reddit application's client secret."
        },
        {
          "key": "REDDIT_REDIRECT_URI",
          "displayName": "Reddit Redirect URI",
          "description": "The redirect URI you specified when creating the app."
        },
        {
          "key": "REDDIT_ACCESS_TOKEN",
          "displayName": "Reddit Access Token",
          "description": "The access token for authenticating requests."
        },
        {
          "key": "REDDIT_REFRESH_TOKEN",
          "displayName": "Reddit Refresh Token",
          "description": "The refresh token obtained during initial authorization."
        },
        {
          "key": "SCOPES",
          "displayName": "Reddit Scopes",
          "description": "A comma-separated list of scopes defining the permissions requested.",
          "defaultValue": [
            "identity",
            "edit",
            "flair",
            "history",
            "modconfig",
            "modflair",
            "modlog",
            "modposts",
            "modwiki",
            "mysubreddits",
            "privatemessages",
            "read",
            "report",
            "save",
            "submit",
            "subscribe",
            "vote",
            "wikiedit",
            "wikiread"
          ]
        }
      ],
      "functionalities": [
        "RedditSDK",
        "acceptModeratorInvite",
        "account.addFriend",
        "account.getMe",
        "account.getMyBlocked",
        "account.getMyFriends",
        "account.getMyKarma",
        "account.getMyPrefs",
        "account.getMyTrophies",
        "account.getPrefsBlocked",
        "account.getPrefsFriends",
        "account.getPrefsMessaging",
        "account.getPrefsTrusted",
        "account.getPrefsWhere",
        "account.removeFriend",
        "account.updateMyPrefs",
        "addFriend",
        "addOrUpdateEmoji",
        "addPostToCollection",
        "allowEditor",
        "announcements.getAnnouncements",
        "announcements.hideAnnouncement",
        "announcements.readAllAnnouncements",
        "announcements.readAnnouncement",
        "announcements.unreadAnnouncement",
        "approve",
        "archiveModmailConversation",
        "block",
        "blockUser",
        "captcha.needsCaptcha",
        "clearFlairTemplates",
        "close",
        "collapseMessage",
        "collections.addPostToCollection",
        "collections.createCollection",
        "collections.deleteCollection",
        "collections.getCollection",
        "collections.getSubredditCollections",
        "collections.removePostFromCollection",
        "collections.reorderCollection",
        "collections.updateCollectionDescription",
        "collections.updateCollectionDisplayLayout",
        "collections.updateCollectionTitle",
        "composeMessage",
        "configureFlair",
        "create",
        "createCollection",
        "createModmailConversation",
        "createModmailMessage",
        "createWidget",
        "deleteCollection",
        "deleteEmoji",
        "deleteFlair",
        "deleteFlairTemplate",
        "deleteMessage",
        "deleteSrBanner",
        "deleteSrHeader",
        "deleteSrIcon",
        "deleteSrImg",
        "deleteThing",
        "deleteWidget",
        "distinguish",
        "editWikiPage",
        "emoji.addOrUpdateEmoji",
        "emoji.deleteEmoji",
        "emoji.getAllEmojis",
        "emoji.getEmojiUploadLease",
        "emoji.setCustomEmojiSize",
        "flair.clearFlairTemplates",
        "flair.configureFlair",
        "flair.deleteFlair",
        "flair.deleteFlairTemplate",
        "flair.getFlairList",
        "flair.getFlairSelector",
        "flair.getLinkFlair",
        "flair.getLinkFlairV2",
        "flair.getUserFlair",
        "flair.getUserFlairV2",
        "flair.selectFlair",
        "flair.setFlair",
        "flair.setFlairCsv",
        "flair.setFlairEnabled",
        "flair.setFlairTemplate",
        "flair.setFlairTemplateV2",
        "flair.updateFlairTemplateOrder",
        "followPost",
        "friend",
        "get",
        "getAllEmojis",
        "getAnnouncements",
        "getBest",
        "getById",
        "getCollection",
        "getComments",
        "getContributors",
        "getDiscussions",
        "getDuplicates",
        "getEmojiUploadLease",
        "getFlairList",
        "getFlairSelector",
        "getHot",
        "getLinkFlair",
        "getLinkFlairV2",
        "getMessages",
        "getMineWhere",
        "getModListing",
        "getModLog",
        "getModmailConversation",
        "getModmailConversationMessages",
        "getModmailConversations",
        "getModmailSubreddits",
        "getModmailUnreadCount",
        "getMoreChildren",
        "getMyBlocked",
        "getMyFriends",
        "getMyKarma",
        "getMyPrefs",
        "getMyTrophies",
        "getNew",
        "getPostRequirements",
        "getPrefsBlocked",
        "getPrefsFriends",
        "getPrefsMessaging",
        "getPrefsTrusted",
        "getPrefsWhere",
        "getRising",
        "getSavedCategories",
        "getScopes",
        "getSidebar",
        "getSorted",
        "getSticky",
        "getStylesheet",
        "getSubmitText",
        "getSubredditAbout",
        "getSubredditAboutEdit",
        "getSubredditAboutRules",
        "getSubredditAboutTraffic",
        "getSubredditAboutWhere",
        "getSubredditCollections",
        "getSubredditsWhere",
        "getUpdate",
        "getUpdates",
        "getUserAbout",
        "getUserDataByAccountIds",
        "getUserFlair",
        "getUserFlairV2",
        "getUserProfileWhere",
        "getUsersWhere",
        "getWidgetImageUploadLease",
        "getWidgets",
        "getWikiDiscussions",
        "getWikiPage",
        "getWikiPageSettings",
        "getWikiPages",
        "getWikiRevisions",
        "hide",
        "hideAnnouncement",
        "hideWikiPage",
        "highlightModmailConversation",
        "ignoreReports",
        "inviteContributor",
        "leaveContributor",
        "leaveModerator",
        "linksAndComments.deleteThing",
        "linksAndComments.editUserText",
        "linksAndComments.followPost",
        "linksAndComments.getMoreChildren",
        "linksAndComments.getSavedCategories",
        "linksAndComments.hide",
        "linksAndComments.lock",
        "linksAndComments.markNsfw",
        "linksAndComments.report",
        "linksAndComments.save",
        "linksAndComments.sendReplies",
        "linksAndComments.setContestMode",
        "linksAndComments.setSubredditSticky",
        "linksAndComments.setSuggestedSort",
        "linksAndComments.spoiler",
        "linksAndComments.storeVisits",
        "linksAndComments.submit",
        "linksAndComments.submitComment",
        "linksAndComments.unhide",
        "linksAndComments.unlock",
        "linksAndComments.unmarkNsfw",
        "linksAndComments.unsave",
        "linksAndComments.unspoiler",
        "linksAndComments.vote",
        "listings.getBest",
        "listings.getById",
        "listings.getComments",
        "listings.getDuplicates",
        "listings.getHot",
        "listings.getNew",
        "listings.getRising",
        "listings.getSorted",
        "listings.search",
        "liveThreads.acceptModeratorInvite",
        "liveThreads.close",
        "liveThreads.create",
        "liveThreads.get",
        "liveThreads.getContributors",
        "liveThreads.getDiscussions",
        "liveThreads.getUpdate",
        "liveThreads.getUpdates",
        "liveThreads.inviteContributor",
        "liveThreads.leaveContributor",
        "liveThreads.removeContributor",
        "liveThreads.removeUpdate",
        "liveThreads.report",
        "liveThreads.setContributorPermissions",
        "liveThreads.strikeUpdate",
        "liveThreads.update",
        "lock",
        "markModmailAsRead",
        "markModmailAsUnread",
        "markNsfw",
        "misc.getScopes",
        "moderation.acceptModeratorInvite",
        "moderation.approve",
        "moderation.distinguish",
        "moderation.getModListing",
        "moderation.getModLog",
        "moderation.getStylesheet",
        "moderation.ignoreReports",
        "moderation.leaveContributor",
        "moderation.leaveModerator",
        "moderation.remove",
        "moderation.showComment",
        "moderation.snoozeReports",
        "moderation.unignoreReports",
        "moderation.unsnoozeReports",
        "moderation.updateCrowdControlLevel",
        "modmailBulkRead",
        "muteModmailConversation",
        "needsCaptcha",
        "newModmail.archiveModmailConversation",
        "newModmail.createModmailConversation",
        "newModmail.createModmailMessage",
        "newModmail.getModmailConversation",
        "newModmail.getModmailConversationMessages",
        "newModmail.getModmailConversations",
        "newModmail.getModmailSubreddits",
        "newModmail.getModmailUnreadCount",
        "newModmail.highlightModmailConversation",
        "newModmail.markModmailAsRead",
        "newModmail.markModmailAsUnread",
        "newModmail.modmailBulkRead",
        "newModmail.muteModmailConversation",
        "newModmail.unarchiveModmailConversation",
        "newModmail.unhighlightModmailConversation",
        "newModmail.unmuteModmailConversation",
        "privateMessages.block",
        "privateMessages.collapseMessage",
        "privateMessages.composeMessage",
        "privateMessages.deleteMessage",
        "privateMessages.getMessages",
        "privateMessages.readAllMessages",
        "privateMessages.readMessage",
        "privateMessages.unblockSubreddit",
        "privateMessages.uncollapseMessage",
        "privateMessages.unreadMessage",
        "readAllAnnouncements",
        "readAllMessages",
        "readAnnouncement",
        "readMessage",
        "recommendSrBySrnames",
        "refreshAccessToken",
        "remove",
        "removeContributor",
        "removeFriend",
        "removePostFromCollection",
        "removeUpdate",
        "reorderCollection",
        "reorderWidgets",
        "report",
        "reportUser",
        "revertWikiPage",
        "save",
        "searchRedditNamesGet",
        "searchRedditNamesPost",
        "searchSubreddits",
        "searchSubredditsListing",
        "searchUsers",
        "selectFlair",
        "sendReplies",
        "setContestMode",
        "setContributorPermissions",
        "setCustomEmojiSize",
        "setFlair",
        "setFlairCsv",
        "setFlairEnabled",
        "setFlairTemplate",
        "setFlairTemplateV2",
        "setPermissions",
        "setSubredditSticky",
        "setSuggestedSort",
        "showComment",
        "siteAdmin",
        "snoozeReports",
        "spoiler",
        "storeVisits",
        "strikeUpdate",
        "submit",
        "subredditAutocomplete",
        "subredditAutocompleteV2",
        "subredditStylesheet",
        "subreddits.deleteSrBanner",
        "subreddits.deleteSrHeader",
        "subreddits.deleteSrIcon",
        "subreddits.deleteSrImg",
        "subreddits.getMineWhere",
        "subreddits.getPostRequirements",
        "subreddits.getSidebar",
        "subreddits.getSticky",
        "subreddits.getSubmitText",
        "subreddits.getSubredditAbout",
        "subreddits.getSubredditAboutEdit",
        "subreddits.getSubredditAboutRules",
        "subreddits.getSubredditAboutTraffic",
        "subreddits.getSubredditAboutWhere",
        "subreddits.getSubredditsWhere",
        "subreddits.recommendSrBySrnames",
        "subreddits.searchRedditNamesGet",
        "subreddits.searchRedditNamesPost",
        "subreddits.searchSubreddits",
        "subreddits.searchSubredditsListing",
        "subreddits.siteAdmin",
        "subreddits.subredditAutocomplete",
        "subreddits.subredditAutocompleteV2",
        "subreddits.subredditStylesheet",
        "subreddits.subscribe",
        "subreddits.uploadSrImg",
        "subscribe",
        "unarchiveModmailConversation",
        "unblockSubreddit",
        "uncollapseMessage",
        "unfriend",
        "unhide",
        "unhighlightModmailConversation",
        "unignoreReports",
        "unlock",
        "unmarkNsfw",
        "unmuteModmailConversation",
        "unreadAnnouncement",
        "unreadMessage",
        "unsave",
        "unsnoozeReports",
        "unspoiler",
        "update",
        "updateCollectionDescription",
        "updateCollectionDisplayLayout",
        "updateCollectionTitle",
        "updateCrowdControlLevel",
        "updateFlairTemplateOrder",
        "updateMyPrefs",
        "updateWidget",
        "updateWikiPageSettings",
        "uploadSrImg",
        "usernameAvailable",
        "users.blockUser",
        "users.friend",
        "users.getUserAbout",
        "users.getUserDataByAccountIds",
        "users.getUserProfileWhere",
        "users.getUserTrophies",
        "users.getUsersWhere",
        "users.reportUser",
        "users.searchUsers",
        "users.setPermissions",
        "users.unfriend",
        "users.usernameAvailable",
        "validateAccessToken",
        "widgets.createWidget",
        "widgets.deleteWidget",
        "widgets.getWidgetImageUploadLease",
        "widgets.getWidgets",
        "widgets.reorderWidgets",
        "widgets.updateWidget",
        "wiki.allowEditor",
        "wiki.editWikiPage",
        "wiki.getWikiDiscussions",
        "wiki.getWikiPage",
        "wiki.getWikiPageSettings",
        "wiki.getWikiPages",
        "wiki.getWikiRevisions",
        "wiki.hideWikiPage",
        "wiki.revertWikiPage",
        "wiki.updateWikiPageSettings"
      ]
    }
  ],
  "extraInfo": [
    "To use this SDK, you need to obtain OAuth credentials from Reddit. Follow these steps:",
    "1. Go to https://www.reddit.com/prefs/apps",
    "2. Click on 'create app' or 'create another app' at the bottom",
    "3. Fill in the required information:",
    "   - Name: Your app's name",
    "   - App type: Choose 'web app' for most cases",
    "   - Description: Brief description of your app",
    "   - About URL: Your app's website (if applicable)",
    "   - Redirect URI: The URI where Reddit will redirect after authorization",
    "4. Click 'create app'",
    "5. You'll receive a Client ID and Client Secret. Keep these secure.",
    "",
    "Environment variables:",
    "- REDDIT_CLIENT_ID: Your Reddit application's client ID",
    "- REDDIT_CLIENT_SECRET: Your Reddit application's client secret",
    "- REDDIT_REDIRECT_URI: The redirect URI you specified when creating the app",
    "",
    "To set up environment variables:",
    "1. Create a .env file in your project root (if not already present)",
    "2. Add the following lines to the .env file:",
    "   REDDIT_CLIENT_ID=your_client_id_here",
    "   REDDIT_CLIENT_SECRET=your_client_secret_here",
    "   REDDIT_REDIRECT_URI=your_redirect_uri_here",
    "3. Use a package like dotenv to load these variables in your application",
    "",
    "Important notes:",
    "- Reddit's OAuth implementation uses comma-separated scopes instead of space-separated",
    "- Access tokens expire after 1 hour (3600 seconds)",
    "- To get a refresh token, include 'duration=permanent' in the initial authorization request",
    "- Rate limits: https://github.com/reddit-archive/reddit/wiki/API#rules",
    "  - 60 requests per minute",
    "  - OAuth2 clients may make up to 600 requests per 10 minutes",
    "  - Monitor the X-Ratelimit headers in API responses for current limits and usage",
    "",
    "For more detailed information, refer to the Reddit API documentation: https://www.reddit.com/dev/api/oauth"
  ],
  "platformType": "communication"
}
