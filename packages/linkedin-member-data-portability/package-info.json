{
  "name": "@microfox/linkedin-member-data-portability",
  "title": "LinkedIn Member Data Portability SDK",
  "description": "A TypeScript SDK for LinkedIn Member Data Portability.",
  "path": "packages/linkedin-member-data-portability",
  "dependencies": [
    "@microfox/linkedin-oauth",
    "zod"
  ],
  "authType": "oauth2",
  "status": "semiStable",
  "authEndpoint": "/connect/linkedin-oauth",
  "oauth2Scopes": [
    "r_dma_portability_3rd_party"
  ],
  "documentation": "https://www.npmjs.com/package/@microfox/linkedin-member-data-portability",
  "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/linkedin-icon.svg",
  "readme_map": {
    "title": "LinkedIn Member Data Portability SDK",
    "description": "The full README for the LinkedIn Member Data Portability SDK",
    "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/README.md",
    "functionalities": [
      "LinkedInDataPortabilitySDK",
      "getMemberAuthorizations",
      "getMemberChangeLogs",
      "getMemberSnapshotData",
      "refreshAccessToken",
      "triggerMemberDataProcessing",
      "validateAccessToken"
    ],
    "all_readmes": [
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/LinkedInDataPortabilitySDK.md",
        "type": "constructor",
        "extension": "md",
        "functionality": "LinkedInDataPortabilitySDK",
        "description": "Initializes a new instance of the LinkedInDataPortabilitySDK."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberAuthorizations.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMemberAuthorizations",
        "description": "Retrieves member authorizations."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberChangeLogs.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMemberChangeLogs",
        "description": "Retrieves member change logs."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberSnapshotData.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "getMemberSnapshotData",
        "description": "Retrieves member snapshot data."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/refreshAccessToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "refreshAccessToken",
        "description": "Refreshes the access token using the refresh token."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/triggerMemberDataProcessing.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "triggerMemberDataProcessing",
        "description": "Triggers member data processing."
      },
      {
        "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/validateAccessToken.md",
        "type": "functionality",
        "extension": "md",
        "functionality": "validateAccessToken",
        "description": "Validates the current access token."
      }
    ]
  },
  "constructors": [
    {
      "name": "LinkedInDataPortabilitySDK",
      "description": "Create a new LinkedIn Member Data Portability SDK client through which you can interact with the API",
      "auth": "oauth2",
      "authSdk": "@microfox/linkedin-oauth",
      "authEndpoint": "/connect/linkedin-oauth",
      "requiredKeys": [],
      "internalKeys": [
        {
          "key": "LINKEDIN_CLIENT_ID",
          "displayName": "LinkedIn Client ID",
          "description": "Your LinkedIn app's Client ID."
        },
        {
          "key": "LINKEDIN_CLIENT_SECRET",
          "displayName": "LinkedIn Client Secret",
          "description": "Your LinkedIn app's Client Secret."
        },
        {
          "key": "LINKEDIN_REDIRECT_URI",
          "displayName": "LinkedIn Redirect URI",
          "description": "The redirect URI registered in your LinkedIn app."
        },
        {
          "key": "LINKEDIN_ACCESS_TOKEN",
          "displayName": "LinkedIn Access Token",
          "description": "The OAuth 2.0 access token for authenticated requests."
        },
        {
          "key": "LINKEDIN_REFRESH_TOKEN",
          "displayName": "LinkedIn Refresh Token",
          "description": "The refresh token to obtain new access tokens."
        },
        {
          "key": "SCOPES",
          "displayName": "LinkedIn Scopes",
          "description": "The scopes for OAuth requests"
        }
      ],
      "functionalities": [
        "validateAccessToken",
        "refreshAccessToken",
        "getMemberChangeLogs",
        "getMemberSnapshotData",
        "getMemberAuthorizations",
        "triggerMemberDataProcessing"
      ]
    }
  ],
  "extraInfo": [
    "To use this SDK, you need to obtain LinkedIn API credentials. Follow these steps:",
    "1. Go to the LinkedIn Developer Portal (https://developer.linkedin.com/) and sign in.",
    "2. Create a new app or use an existing one.",
    "3. In your app settings, find the 'Client ID' and 'Client Secret'. You'll need these for authentication.",
    "4. Add a redirect URI to your app settings. This should match the redirectUri you provide when initializing the SDK.",
    "5. Request the 'r_dma_portability_3rd_party' scope for your app to access the Data Portability APIs.",
    "",
    "Environment Variables:",
    "- LINKEDIN_CLIENT_ID: Your LinkedIn app's Client ID",
    "- LINKEDIN_CLIENT_SECRET: Your LinkedIn app's Client Secret",
    "- LINKEDIN_REDIRECT_URI: The redirect URI registered in your LinkedIn app",
    "- LINKEDIN_ACCESS_TOKEN: The OAuth 2.0 access token for authenticated requests",
    "- LINKEDIN_REFRESH_TOKEN: The refresh token to obtain new access tokens (optional)",
    "",
    "Authentication:",
    "This SDK uses OAuth 2.0 for authentication. You need to implement the OAuth flow in your application to obtain an access token. The @microfox/linkedin-oauth package is used to handle OAuth-related operations.",
    "",
    "Rate Limits:",
    "LinkedIn API has rate limits, but specific details are not provided in the documentation. Implement proper error handling and retry mechanisms in your application to handle rate limiting errors.",
    "",
    "Important Notes:",
    "- Always use HTTPS for all API endpoints and OAuth flows.",
    "- Keep your Client Secret and access tokens secure. Never expose them in client-side code.",
    "- The Member Changelog API is limited to events from the last 28 days.",
    "- Include the 'LinkedIn-Version: 202312' header in all API requests (handled automatically by the SDK).",
    "- The SDK automatically validates the access token before each request. If it's invalid, you'll need to refresh it or obtain a new one.",
    "- For pagination in the Member Snapshot API, use the 'start' parameter (not implemented in this SDK version).",
    "",
    "Usage Example:",
    "```typescript",
    "import { createLinkedInSDK, LinkedInScope } from './LinkedInDataPortabilitySDK';",
    "",
    "const sdk = createLinkedInSDK({",
    "  clientId: process.env.LINKEDIN_CLIENT_ID!,",
    "  clientSecret: process.env.LINKEDIN_CLIENT_SECRET!,",
    "  redirectUri: process.env.LINKEDIN_REDIRECT_URI!,",
    "  accessToken: process.env.LINKEDIN_ACCESS_TOKEN!,",
    "  refreshToken: process.env.LINKEDIN_REFRESH_TOKEN",
    "});",
    "",
    "// Example: Get member change logs",
    "const changeLogs = await sdk.getMemberChangeLogs();",
    "console.log(changeLogs);",
    "```",
    "",
    "For more detailed information about the LinkedIn DMA Data Portability APIs, refer to the official LinkedIn Developer documentation."
  ],
  "platformType": "tool"
}
