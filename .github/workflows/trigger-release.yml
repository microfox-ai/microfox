name: Trigger Release on Issue

on:
  issues:
    types: [opened, edited]

permissions:
  issues: write # To read issue title, user, and add comments
  contents: write # To checkout code and push a commit

jobs:
  create_changeset_file:
    runs-on: ubuntu-latest
    # Only run if the issue title starts with 'release' (case-sensitive)
    # and the user triggering the event (open/edit) is the repository owner
    if: startsWith(github.event.issue.title, 'release')
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.PACKAGEFOX_APP_ID }}
          private_key: ${{ secrets.PACKAGEFOX_PRIVATE_KEY }}

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          # Checkout the main branch explicitly
          ref: main
          # Use the GITHUB_TOKEN for authentication, permissions are set above
          token: ${{ steps.generate_token.outputs.token }}

      - name: Parse release issue title
        id: parse_title
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title;
            const releaseRegex = /^release\s+(@[a-zA-Z0-9_-]+\/[a-zA-Z0-9._-]+)(?:\s+(major|minor|patch))?/;
            const match = title.match(releaseRegex);

            let packageName = '';
            let bumpType = 'patch';

            if (match) {
              packageName = match[1];
              if (match[2]) {
                bumpType = match[2];
              }
            }
            
            core.setOutput('package_name', packageName);
            core.setOutput('bump_type', bumpType);
          result-encoding: string

      - name: Create package changeset file
        if: steps.parse_title.outputs.package_name != ''
        run: |
          mkdir -p .changeset
          PACKAGE_NAME="${{ steps.parse_title.outputs.package_name }}"
          BUMP_TYPE="${{ steps.parse_title.outputs.bump_type }}"
          printf -- "---\n\"%s\": %s\n---\n\nTriggered by issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}\n" "$PACKAGE_NAME" "$BUMP_TYPE" > .changeset/trigger-${{ github.event.issue.number }}.md
          echo "Created package changeset for $PACKAGE_NAME with bump type $BUMP_TYPE"

      - name: Create generic changeset file
        if: steps.parse_title.outputs.package_name == ''
        run: |
          mkdir -p .changeset
          # Use printf to correctly handle newline characters
          printf -- "---\n---\n\nTriggered by issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}\n" > .changeset/trigger-${{ github.event.issue.number }}.md
          echo "Created .changeset/trigger-${{ github.event.issue.number }}.md"

      - name: Commit and push changeset file
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .changeset/trigger-${{ github.event.issue.number }}.md
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: create changeset trigger file for issue #${{ github.event.issue.number }}"
            git push origin main
            echo "Changes pushed to main branch."
          fi

      - name: Close the issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          gh issue close $ISSUE_NUMBER --comment "Changeset file created and pushed. Closing issue."
          echo "Issue #${ISSUE_NUMBER} closed."
