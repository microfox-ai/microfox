import { AiRouter } from '@microfox/ai-router';
import { tracingMiddleware } from '@/lib/middleware';
import { slsfoxAgent } from '@/lib/agents/slsFox';

// This router will handle direct calls to individual agents.
const agentRouter = new AiRouter();

// Apply the tracing middleware to all agents mounted on this router.
agentRouter.use('*', tracingMiddleware);

// Mount the individual agent routers here.
agentRouter.agent('/slsfox', slsfoxAgent);

// We will export a POST handler that processes all incoming requests.
// The `[[...slug]]` in the filename makes this a catch-all route under /agent.
export async function POST(request: Request, { params }: { params: { slug: string[] } }) {
  // Determine the path from the URL slug.
  const path = `/${(params.slug || []).join('/')}`;

  const body = await request.json()

  console.log("body", body, path)

  // Let the AiRouter handle the request and generate a response.
  // We add an empty 'messages' array to the request to satisfy the router's type.
  const response = agentRouter.handle(path, {
    request: {
      ...body,
      messages: []
    }
  });

  // Return the response generated by the agent.
  return response;
} 