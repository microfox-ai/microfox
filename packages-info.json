[
  {
    "name": "@notionhq/client",
    "title": "Notion Official",
    "description": "Official Notion API client for managing pages, databases, blocks, and users.",
    "path": "packages/@ext_@notionhq#client",
    "dependencies": ["@types/node-fetch", "node-fetch"],
    "status": "semiStable",
    "authEndpoint": "",
    "documentation": "https://www.npmjs.com/package/@notionhq/client",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/notion.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "@notionhq/client",
      "functionalities": [
        "blocks.retrieve",
        "blocks.update",
        "blocks.children.list",
        "blocks.children.append",
        "databases.retrieve",
        "databases.query",
        "databases.create",
        "databases.update",
        "pages.retrieve",
        "pages.create",
        "pages.update",
        "pages.properties.retrieve",
        "users.retrieve",
        "users.list",
        "users.me",
        "comments.create",
        "comments.list",
        "search"
      ],
      "description": "The full README for the package"
    },
    "constructors": [
      {
        "name": "Client",
        "description": "Create a new client for the Notion API",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [
          {
            "key": "NOTION_TOKEN",
            "displayName": "Notion Token",
            "description": "The token for the Notion API"
          }
        ],
        "internalKeys": [],
        "botConfigComponent": "NotionBotConfig",
        "botConfig": []
      }
    ],
    "keysInfo": [
      {
        "key": "NOTION_TOKEN",
        "constructors": ["Client"],
        "description": "The token for the Notion API",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `Client` constructor to create a new Notion client.",
      "The SDK supports all Notion API endpoints including pages, databases, blocks, and users.",
      "Full TypeScript support with comprehensive type definitions.",
      "Includes support for OAuth token management and introspection."
    ]
  },
  {
    "name": "@slack/web-api",
    "title": "Slack Official",
    "description": "Official library for using the Slack Platform's Web API",
    "path": "packages/@ext_@slack#web-api",
    "dependencies": [
      "@slack/logger",
      "@slack/types",
      "@types/node",
      "@types/retry",
      "axios",
      "eventemitter3",
      "form-data",
      "is-electron",
      "is-stream",
      "p-queue",
      "p-retry",
      "retry"
    ],
    "status": "semiStable",
    "authEndpoint": "",
    "documentation": "https://www.npmjs.com/package/@slack/web-api",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "@slack/web-api",
      "functionalities": [],
      "description": "The full README for the package",
      "all_readmes": []
    },
    "constructors": [
      {
        "name": "WebClient",
        "description": "Create a new Slack Web Client through which you can operate bots on Slack",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [
          {
            "key": "SLACK_TOKEN",
            "displayName": "Slack Token",
            "description": "The token for the Slack Web Client"
          }
        ],
        "internalKeys": [],
        "botConfig": [
          {
            "key": "image",
            "displayName": "Bot Send as Image",
            "description": "The image to use for the Slack Web Client",
            "ui": {
              "type": "image",
              "required": false
            }
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "SLACK_TOKEN",
        "constructors": ["WebClient"],
        "description": "The token for the Slack Web Client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `WebClient` constructor to create a new Slack Web Client."
    ]
  },
  {
    "name": "@microfox/ai-sdk",
    "title": "Microfox AI SDK",
    "description": "Microfox adapter for the Vercel AI SDK",
    "path": "packages/ai-sdk",
    "dependencies": ["@microfox/core", "zod", "ai"],
    "status": "partial",
    "apiKeys": ["OPENAI_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/apollo",
    "title": "Microfox Apollo",
    "description": "Microfox SDK for Apollo.io",
    "path": "packages/apollo",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["APOLLO_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/aws-ses",
    "title": "Microfox AWS SES",
    "description": "A lightweight, type-safe SDK for interacting with AWS Simple Email Service (SES)",
    "path": "packages/aws-ses",
    "dependencies": ["@microfox/rest-sdk", "crypto", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/aws",
    "documentation": "https://www.npmjs.com/package/@microfox/aws-ses",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/aws-ses.svg",
    "readme_map": {
      "title": "Microfox AWS SES",
      "description": "The full README for the Microfox AWS SES",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/aws-ses/README.md",
      "functionalities": ["createSESSdk", "sendEmail", "sendBulkEmails"],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/aws-ses/docs/createSESSdk.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createSESSdk",
          "description": "Creates an instance of the AWS SES SDK. This function configures and returns an object with methods for sending emails via the AWS SES service."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/aws-ses/docs/sendEmail.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendEmail",
          "description": "Sends a single email using the provided parameters."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/aws-ses/docs/sendBulkEmails.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendBulkEmails",
          "description": "Sends multiple emails in parallel using the provided parameters."
        }
      ]
    },
    "constructors": [
      {
        "name": "createSESSdk",
        "description": "Create a new Microfox AWS SES client through which you can interact with the API",
        "auth": "apikey",
        "apiType": "api_key",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "AWS_ACCESS_KEY_ID",
            "displayName": "AWS Access Key ID",
            "description": "The AWS access key ID.  Used to authenticate with AWS SES."
          },
          {
            "key": "AWS_SECRET_ACCESS_KEY",
            "displayName": "AWS Secret Access Key",
            "description": "The AWS secret access key. Used to authenticate with AWS SES."
          }
        ],
        "functionalities": ["sendEmail", "sendBulkEmails"]
      }
    ],
    "keysInfo": [
      {
        "key": "AWS_ACCESS_KEY_ID",
        "constructors": ["createSESSdk"],
        "description": "The AWS access key ID.  Used to authenticate with AWS SES.",
        "required": true
      },
      {
        "key": "AWS_SECRET_ACCESS_KEY",
        "constructors": ["createSESSdk"],
        "description": "The AWS secret access key. Used to authenticate with AWS SES.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createSESClient` constructor to create a new AWS SES client.",
      "All email addresses must be verified in AWS SES before sending."
    ]
  },
  {
    "name": "@microfox/bing",
    "title": "Microfox Bing",
    "description": "Microfox SDK for Bing search",
    "path": "packages/bing",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["BING_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/brave",
    "title": "Brave TypeScript SDK",
    "description": "TypeScript SDK for the Brave search API, providing functions for web search, summarizer search, image search, video search, news search, suggestions, and spellcheck.",
    "path": "packages/brave",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "",
    "oauth2Scopes": [],
    "documentation": "https://www.npmjs.com/package/@microfox/brave",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/brave.svg",
    "readme_map": {
      "title": "Brave TypeScript SDK",
      "description": "The full README for the Brave TypeScript SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/README.md",
      "functionalities": [
        "createBraveSDK",
        "webSearch",
        "imageSearch",
        "videoSearch",
        "newsSearch",
        "getSuggestions",
        "spellcheck",
        "summarizerSearch"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/createBraveSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createBraveSDK",
          "description": "Creates a new instance of the BraveSDK client."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/webSearch.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "webSearch",
          "description": "Performs a web search using the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/imageSearch.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "imageSearch",
          "description": "Performs an image search using the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/videoSearch.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "videoSearch",
          "description": "Performs a video search using the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/newsSearch.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "newsSearch",
          "description": "Performs a news search using the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/getSuggestions.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getSuggestions",
          "description": "Retrieves search suggestions from the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/spellcheck.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "spellcheck",
          "description": "Performs a spellcheck using the Brave Search API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/brave/docs/summarizerSearch.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "summarizerSearch",
          "description": "Retrieves summarizer search results from the Brave Search API."
        }
      ]
    },
    "constructors": [
      {
        "name": "createBraveSDK",
        "description": "Create a new Brave TypeScript SDK client through which you can interact with the API",
        "auth": "apikey",
        "apiType": "api_key",
        "authSdk": "",
        "requiredKeys": [
          {
            "key": "BRAVE_API_KEY",
            "displayName": "Brave API Key",
            "description": "Your Brave Search API key.  You can obtain this key from the Brave Search API developer portal."
          }
        ],
        "internalKeys": [],
        "functionalities": [
          "webSearch",
          "imageSearch",
          "videoSearch",
          "newsSearch",
          "getSuggestions",
          "spellcheck",
          "summarizerSearch"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "BRAVE_API_KEY",
        "constructors": ["createBraveSDK"],
        "description": "Your Brave Search API key.  You can obtain this key from the Brave Search API developer portal.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createBraveSDK` constructor to create a new client."
    ]
  },
  {
    "name": "@microfox/calculator",
    "title": "Microfox Calculator",
    "description": "Microfox calculator tool wrapping mathjs",
    "path": "packages/calculator",
    "dependencies": ["@microfox/core", "mathjs", "zod"],
    "status": "partial",
    "apiKeys": ["MATHJS_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/clearbit",
    "title": "Microfox Clearbit",
    "description": "Microfox SDK for Clearbit",
    "path": "packages/clearbit",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["CLEARBIT_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/core",
    "title": "Microfox Core",
    "description": "Microfox AI utils which work with any LLM and TypeScript AI SDK",
    "path": "packages/core",
    "dependencies": [
      "dedent",
      "delay",
      "jsonrepair",
      "ky",
      "openai-zod-to-json-schema",
      "p-throttle",
      "type-fest",
      "zod",
      "zod-validation-error"
    ],
    "status": "partial",
    "apiKeys": ["OPENAI_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/dexa",
    "title": "Microfox Dexa",
    "description": "Microfox SDK for Dexa's API (access to trusted podcast knowledge)",
    "path": "packages/dexa",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["DEXA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/dexter",
    "title": "Microfox Dexter",
    "description": "Microfox adapter for the Dexter AI SDK by Dexa",
    "path": "packages/dexter",
    "dependencies": ["@microfox/core", "@dexaai/dexter"],
    "status": "partial",
    "apiKeys": ["DEXTER_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/diffbot",
    "title": "Microfox Diffbot",
    "description": "Microfox SDK for Diffbot",
    "path": "packages/diffbot",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["DIFFBOT_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/discord",
    "title": "Microfox Discord SDK",
    "description": "A lightweight, type-safe SDK for interacting with the Discord API v10",
    "path": "packages/discord",
    "dependencies": ["@microfox/rest-sdk", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/discord",
    "documentation": "https://www.npmjs.com/package/@microfox/discord",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/discord-icon.svg",
    "readme_map": {
      "title": "Microfox Discord SDK",
      "description": "The full README for the Microfox Discord SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/README.md",
      "functionalities": [
        "createDiscordSdk",
        "sendMessage",
        "editMessage",
        "deleteMessage",
        "fetchMessages",
        "reactToMessage",
        "createThread",
        "fetchGuildInfo",
        "fetchUserInfo",
        "registerSlashCommand",
        "registerGlobalSlashCommand",
        "deleteSlashCommand",
        "deleteGlobalSlashCommand",
        "moderateUser",
        "createChannel",
        "updateChannel",
        "deleteChannel",
        "createRole",
        "updateRole",
        "deleteRole",
        "addRoleToUser",
        "removeRoleFromUser",
        "fetchChannels",
        "fetchRoles",
        "fetchSlashCommands",
        "fetchGlobalSlashCommands",
        "registerCommand",
        "registerGlobalCommand",
        "handleInteraction",
        "respondToInteraction",
        "deferInteraction",
        "followUpInteraction"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/createDiscordSdk.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createDiscordSdk",
          "description": "Creates a new instance of the Discord SDK. This function initializes the SDK with the provided configuration, sets up the necessary headers for authentication, and returns an object containing all the available API methods."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/sendMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendMessage",
          "description": "Sends a message to a specified channel or user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/editMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "editMessage",
          "description": "Edits an existing message in a channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deleteMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteMessage",
          "description": "Deletes a message in a channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchMessages.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchMessages",
          "description": "Fetches recent messages from a channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/reactToMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "reactToMessage",
          "description": "Reacts to a message with an emoji."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/createThread.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createThread",
          "description": "Creates a thread in a channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchGuildInfo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchGuildInfo",
          "description": "Fetches information about a guild (server)."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchUserInfo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchUserInfo",
          "description": "Fetches information about a user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/registerSlashCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "registerSlashCommand",
          "description": "Registers a slash command for the bot."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/registerGlobalSlashCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "registerGlobalSlashCommand",
          "description": "Registers global slash commands for the bot."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deleteSlashCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteSlashCommand",
          "description": "Deletes a slash command."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deleteGlobalSlashCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteGlobalSlashCommand",
          "description": "Deletes a global slash command."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/moderateUser.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "moderateUser",
          "description": "Performs a moderation action on a user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/createChannel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createChannel",
          "description": "Creates a new channel in the guild."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/updateChannel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateChannel",
          "description": "Updates a channel's settings."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deleteChannel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteChannel",
          "description": "Deletes a channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/createRole.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createRole",
          "description": "Creates a new role in the guild."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/updateRole.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateRole",
          "description": "Updates a role's settings."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deleteRole.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteRole",
          "description": "Deletes a role."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/addRoleToUser.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "addRoleToUser",
          "description": "Adds a role to a user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/removeRoleFromUser.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "removeRoleFromUser",
          "description": "Removes a role from a user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchChannels.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchChannels",
          "description": "Fetches all channels in a guild."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchRoles.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchRoles",
          "description": "Fetches all roles in a guild."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchSlashCommands.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchSlashCommands",
          "description": "Fetches all slash commands for a guild."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/fetchGlobalSlashCommands.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "fetchGlobalSlashCommands",
          "description": "Fetches all global slash commands."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/registerCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "registerCommand",
          "description": "Registers a command handler."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/registerGlobalCommand.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "registerGlobalCommand",
          "description": "Registers a global command handler."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/handleInteraction.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "handleInteraction",
          "description": "Handles a slash command interaction."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/respondToInteraction.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "respondToInteraction",
          "description": "Responds to a slash command interaction."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/deferInteraction.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deferInteraction",
          "description": "Defers a slash command response."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/discord/docs/followUpInteraction.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "followUpInteraction",
          "description": "Follows up to a deferred interaction."
        }
      ]
    },
    "constructors": [
      {
        "name": "createDiscordSdk",
        "description": "Create a new Microfox Discord SDK client through which you can interact with the API",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "DISCORD_BOT_TOKEN",
            "displayName": "Discord Bot Token",
            "description": "The Discord bot token is required to authenticate with the Discord API. You can obtain this token by creating a bot application on the Discord Developer Portal."
          }
        ],
        "functionalities": [
          "sendMessage",
          "editMessage",
          "deleteMessage",
          "fetchMessages",
          "reactToMessage",
          "createThread",
          "fetchGuildInfo",
          "fetchUserInfo",
          "registerSlashCommand",
          "registerGlobalSlashCommand",
          "deleteSlashCommand",
          "deleteGlobalSlashCommand",
          "moderateUser",
          "createChannel",
          "updateChannel",
          "deleteChannel",
          "createRole",
          "updateRole",
          "deleteRole",
          "addRoleToUser",
          "removeRoleFromUser",
          "fetchChannels",
          "fetchRoles",
          "fetchSlashCommands",
          "fetchGlobalSlashCommands",
          "registerCommand",
          "registerGlobalCommand",
          "handleInteraction",
          "respondToInteraction",
          "deferInteraction",
          "followUpInteraction"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "DISCORD_BOT_TOKEN",
        "constructors": ["createDiscordSdk"],
        "description": "The Discord bot token is required to authenticate with the Discord API. You can obtain this token by creating a bot application on the Discord Developer Portal.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createDiscordSdk` constructor to create a new Discord client.",
      "The SDK supports Discord API v10 with comprehensive type safety.",
      "Supports both guild-specific and global slash commands.",
      "Includes full moderation, channel, and role management capabilities."
    ]
  },
  {
    "name": "@microfox/drive",
    "title": "Microfox Drive SDK",
    "description": "Google Drive SDK for Microfox",
    "path": "packages/drive",
    "dependencies": ["@microfox/google", "@microfox/rest-sdk", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/drive",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-drive.svg",
    "constructors": [
      {
        "name": "createDriveSDKWithTokens",
        "description": "Create a new Drive client",
        "zodSecretSchema": "DriveSDKOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google Drive client"
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google Drive client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google Drive client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google Drive client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google Drive client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["createDriveSDKWithTokens"],
        "description": "The access token for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["createDriveSDKWithTokens"],
        "description": "The refresh token for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["createDriveSDKWithTokens"],
        "description": "The client ID for the Google Drive client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["createDriveSDKWithTokens"],
        "description": "The client secret for the Google Drive client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": ["createDriveSDKWithTokens"],
        "description": "The scopes for the Google Drive client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createDriveSDKWithTokens` constructor to create a new Drive client."
    ],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/e2b",
    "title": "Microfox E2B",
    "description": "Microfox SDK for E2B's hosted code interpreter",
    "path": "packages/e2b",
    "dependencies": ["@microfox/core", "@e2b/code-interpreter"],
    "status": "partial",
    "apiKeys": ["E2B_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/exa",
    "title": "Microfox Exa",
    "description": "Microfox SDK for the Exa search engine",
    "path": "packages/exa",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["EXA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/firecrawl",
    "title": "Microfox Firecrawl",
    "description": "Microfox SDK for Firecrawl web scraping and crawling",
    "path": "packages/firecrawl",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["FIRECRAWL_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/genkit",
    "title": "Microfox Genkit",
    "description": "Microfox adapter for the Firebase Genkit AI SDK",
    "path": "packages/genkit",
    "dependencies": ["@microfox/core", "zod", "genkit"],
    "status": "partial",
    "apiKeys": ["GENKIT_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/github",
    "title": "Microfox GitHub",
    "description": "Microfox SDK for GitHub",
    "path": "packages/github",
    "dependencies": ["@microfox/core", "ky", "octokit", "p-throttle", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/github",
    "documentation": "https://www.npmjs.com/package/@microfox/github",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/github-icon.svg",
    "readme_map": {
      "path": "https://raw.githubusercontent.com/octokit/plugin-rest-endpoint-methods.js/refs/heads/main/docs/${scope}/${method}.md",
      "title": "GitHub SDK for Microfox",
      "functionalities": ["restApi"],
      "dynamic_setters": [
        {
          "key": "scope",
          "list": "/docs/scopes.json"
        },
        {
          "key": "method",
          "list": "/docs/${scope}.json"
        }
      ],
      "type": "dynamic_path",
      "description": "The docs for all rest api methods"
    },
    "constructors": [
      {
        "name": "Octokit",
        "description": "Create a new Octokit client",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [
          {
            "key": "GITHUB_TOKEN",
            "displayName": "GitHub Personal Access Token",
            "description": "The token for the GitHub user's account. You can create one at https://github.com/settings/tokens"
          }
        ],
        "functionalities": ["restApi"],
        "internalKeys": []
      }
    ],
    "keysInfo": [
      {
        "key": "GITHUB_TOKEN",
        "constructors": ["Octokit"],
        "description": "The token for the GitHub user's account. You can create one at https://github.com/settings/tokens",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `Octokit` constructor to create a new Octokit client."
    ]
  },
  {
    "name": "@microfox/gmail",
    "title": "Gmail SDK",
    "description": "TypeScript SDK for interacting with the Gmail API.",
    "path": "packages/gmail",
    "dependencies": ["zod", "@microfox/google-oauth"],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "oauth2Scopes": [
      "https://www.googleapis.com/auth/gmail.readonly",
      "https://www.googleapis.com/auth/gmail.send",
      "https://www.googleapis.com/auth/gmail.compose",
      "https://www.googleapis.com/auth/gmail.modify",
      "https://www.googleapis.com/auth/gmail.full"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/gmail",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-gmail.svg",
    "readme_map": {
      "title": "@microfox/@microfox/gmail README",
      "description": "The full README for the Gmail SDK",
      "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/README.md",
      "all_readmes": [
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/createGmailSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createGmailSDK"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/listLabels.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listLabels"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/createLabel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createLabel"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/getLabel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getLabel"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/updateLabel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateLabel"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/deleteLabel.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteLabel"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/listMessages.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listMessages"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/getMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMessage"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/sendMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendMessage"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/listThreads.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listThreads"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/docs/getThread.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getThread"
        }
      ],
      "functionalities": [
        "createGmailSDK",
        "listLabels",
        "createLabel",
        "getLabel",
        "updateLabel",
        "deleteLabel",
        "listMessages",
        "getMessage",
        "sendMessage",
        "listThreads",
        "getThread"
      ]
    },
    "constructors": [
      {
        "name": "createGmailSDK",
        "description": "Create a new Gmail SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/google-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Google Client ID",
            "description": "Your Google OAuth client ID"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Google Client Secret",
            "description": "Your Google OAuth client secret"
          },
          {
            "key": "GOOGLE_REDIRECT_URI",
            "displayName": "Google Redirect URI",
            "description": "The redirect URI for your application"
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Google Access Token",
            "description": "The access token for the Google OAuth application"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Google Refresh Token",
            "description": "The refresh token for the Google OAuth application"
          }
        ],
        "functionalities": [
          "listLabels",
          "createLabel",
          "getLabel",
          "updateLabel",
          "deleteLabel",
          "listMessages",
          "getMessage",
          "sendMessage",
          "listThreads",
          "getThread"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["createGmailSDK"],
        "description": "Your Google OAuth client ID",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["createGmailSDK"],
        "description": "Your Google OAuth client secret",
        "required": true
      },
      {
        "key": "GOOGLE_REDIRECT_URI",
        "constructors": ["createGmailSDK"],
        "description": "The redirect URI for your application",
        "required": true
      },
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["createGmailSDK"],
        "description": "The access token for the Google OAuth application",
        "required": false
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["createGmailSDK"],
        "description": "The refresh token for the Google OAuth application",
        "required": false
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to set up a Google Cloud project and enable the Gmail API. Follow these steps:",
      "1. Go to the Google Cloud Console (https://console.cloud.google.com/)",
      "2. Create a new project or select an existing one",
      "3. Enable the Gmail API for your project",
      "4. Create OAuth 2.0 credentials (client ID and client secret)",
      "5. Set up the OAuth consent screen, including the necessary scopes",
      "",
      "Environment variables:",
      "- GOOGLE_CLIENT_ID: Your Google OAuth client ID",
      "- GOOGLE_CLIENT_SECRET: Your Google OAuth client secret",
      "- GOOGLE_REDIRECT_URI: The redirect URI for your application",
      "",
      "To use the SDK, you can create an instance like this:",
      "",
      "```typescript",
      "import { createGmailSDK } from 'gmail';",
      "",
      "const gmailSdk = createGmailSDK({",
      "  clientId: process.env.GOOGLE_CLIENT_ID!,",
      "  clientSecret: process.env.GOOGLE_CLIENT_SECRET!,",
      "  redirectUri: process.env.GOOGLE_REDIRECT_URI!,",
      "});",
      "```",
      "",
      "Make sure to handle the OAuth flow to obtain and refresh access tokens. The SDK will automatically refresh the token when needed.",
      "",
      "Rate limits: Be aware that the Gmail API has usage quotas and limits. For most users, this is 1,000,000,000 queries per day. You can check your specific quota in the Google Cloud Console.",
      "",
      "For more detailed information on using the Gmail API, refer to the official documentation: https://developers.google.com/gmail/api/guides"
    ]
  },
  {
    "name": "@microfox/google",
    "title": "Microfox Google SDK",
    "description": "Google SDK for Microfox",
    "path": "packages/google",
    "dependencies": ["@microfox/rest", "zod"],
    "status": "oauthConnector",
    "authEndpoint": "/connect/google-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/google",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google.svg",
    "constructors": [
      {
        "name": "googleOAuthManager",
        "description": "Create a new Google client",
        "zodSecretSchema": "GoogleOAuthOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google client"
          },
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["googleOAuthManager"],
        "description": "The access token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["googleOAuthManager"],
        "description": "The refresh token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["googleOAuthManager"],
        "description": "The client ID for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["googleOAuthManager"],
        "description": "The client secret for the Google client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": ["googleOAuthManager"],
        "description": "The scopes for the Google client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createGoogleClient` constructor to create a new Google client."
    ],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/google-analytics",
    "title": "Google Analytics SDK",
    "description": "A TypeScript SDK for interacting with the Google Analytics API.",
    "path": "packages/google-analytics",
    "dependencies": ["@microfox/google-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "oauth2Scopes": [
      "https://www.googleapis.com/auth/analytics.readonly",
      "https://www.googleapis.com/auth/analytics"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/google-analytics",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-analytics.svg",
    "readme_map": {
      "title": "Google Analytics SDK",
      "description": "The full README for the Google Analytics SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/README.md",
      "functionalities": [
        "GoogleAnalyticsSDK",
        "runReport",
        "batchRunReports",
        "runPivotReport",
        "batchRunPivotReports",
        "getMetadata",
        "checkCompatibility",
        "runRealtimeReport",
        "createAudienceExport",
        "getAudienceExport",
        "listAudienceExports",
        "runFunnelReport",
        "getPropertyQuotasSnapshot",
        "createAudienceList",
        "getAudienceList",
        "listAudienceLists",
        "createRecurringAudienceList",
        "getRecurringAudienceList",
        "listRecurringAudienceLists",
        "createReportTask",
        "getReportTask",
        "listReportTasks",
        "refreshAccessToken"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/GoogleAnalyticsSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "GoogleAnalyticsSDK",
          "description": "Initializes a new instance of the GoogleAnalyticsSDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/runReport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "runReport",
          "description": "Runs a report."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/batchRunReports.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "batchRunReports",
          "description": "Runs multiple reports in a single request."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/runPivotReport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "runPivotReport",
          "description": "Runs a pivot report."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/batchRunPivotReports.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "batchRunPivotReports",
          "description": "Runs multiple pivot reports in a single request."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getMetadata.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMetadata",
          "description": "Retrieves metadata."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/checkCompatibility.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "checkCompatibility",
          "description": "Checks compatibility."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/runRealtimeReport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "runRealtimeReport",
          "description": "Runs a realtime report."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/createAudienceExport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createAudienceExport",
          "description": "Creates an audience export."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getAudienceExport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAudienceExport",
          "description": "Retrieves an audience export."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/listAudienceExports.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listAudienceExports",
          "description": "Lists audience exports."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/runFunnelReport.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "runFunnelReport",
          "description": "Runs a funnel report."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getPropertyQuotasSnapshot.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getPropertyQuotasSnapshot",
          "description": "Retrieves property quotas snapshot."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/createAudienceList.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createAudienceList",
          "description": "Creates an audience list."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getAudienceList.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAudienceList",
          "description": "Retrieves an audience list."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/listAudienceLists.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listAudienceLists",
          "description": "Lists audience lists."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/createRecurringAudienceList.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createRecurringAudienceList",
          "description": "Creates a recurring audience list."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getRecurringAudienceList.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getRecurringAudienceList",
          "description": "Retrieves a recurring audience list."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/listRecurringAudienceLists.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listRecurringAudienceLists",
          "description": "Lists recurring audience lists."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/createReportTask.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createReportTask",
          "description": "Creates a report task."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/getReportTask.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getReportTask",
          "description": "Retrieves a report task."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/listReportTasks.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listReportTasks",
          "description": "Lists report tasks."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-analytics/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken",
          "description": "Refreshes the access token."
        }
      ]
    },
    "constructors": [
      {
        "name": "GoogleAnalyticsSDK",
        "description": "Create a new Google Analytics SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/google-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ANALYTICS_CLIENT_ID",
            "displayName": "Google Analytics Client ID",
            "description": "The client ID for your Google Cloud project."
          },
          {
            "key": "GOOGLE_ANALYTICS_CLIENT_SECRET",
            "displayName": "Google Analytics Client Secret",
            "description": "The client secret for your Google Cloud project."
          },
          {
            "key": "GOOGLE_ANALYTICS_REDIRECT_URI",
            "displayName": "Google Analytics Redirect URI",
            "description": "The redirect URI for your OAuth 2.0 credentials."
          },
          {
            "key": "GOOGLE_ANALYTICS_ACCESS_TOKEN",
            "displayName": "Google Analytics Access Token",
            "description": "The access token for authenticating with the Google Analytics Data API."
          }
        ],
        "functionalities": [
          "runReport",
          "batchRunReports",
          "runPivotReport",
          "batchRunPivotReports",
          "getMetadata",
          "checkCompatibility",
          "runRealtimeReport",
          "createAudienceExport",
          "getAudienceExport",
          "listAudienceExports",
          "runFunnelReport",
          "getPropertyQuotasSnapshot",
          "createAudienceList",
          "getAudienceList",
          "listAudienceLists",
          "createRecurringAudienceList",
          "getRecurringAudienceList",
          "listRecurringAudienceLists",
          "createReportTask",
          "getReportTask",
          "listReportTasks",
          "refreshAccessToken"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ANALYTICS_CLIENT_ID",
        "constructors": ["GoogleAnalyticsSDK"],
        "description": "The client ID for your Google Cloud project.",
        "required": true
      },
      {
        "key": "GOOGLE_ANALYTICS_CLIENT_SECRET",
        "constructors": ["GoogleAnalyticsSDK"],
        "description": "The client secret for your Google Cloud project.",
        "required": true
      },
      {
        "key": "GOOGLE_ANALYTICS_REDIRECT_URI",
        "constructors": ["GoogleAnalyticsSDK"],
        "description": "The redirect URI for your OAuth 2.0 credentials.",
        "required": true
      },
      {
        "key": "GOOGLE_ANALYTICS_ACCESS_TOKEN",
        "constructors": ["GoogleAnalyticsSDK"],
        "description": "The access token for authenticating with the Google Analytics Data API.",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this Google Analytics SDK, you need to set up a Google Cloud project and enable the Google Analytics Data API.",
      "Visit the Google Cloud Console (https://console.cloud.google.com/) to create a new project or select an existing one.",
      "Enable the Google Analytics Data API for your project in the API Library.",
      "Create OAuth 2.0 credentials (client ID and client secret) in the Credentials section.",
      "Set up your OAuth consent screen with the necessary scopes ('https://www.googleapis.com/auth/analytics.readonly' for read-only access or 'https://www.googleapis.com/auth/analytics' for full access).",
      "Store your client ID, client secret, and redirect URI securely. Never commit these to version control.",
      "Set up environment variables for your credentials:",
      "  - GOOGLE_ANALYTICS_CLIENT_ID",
      "  - GOOGLE_ANALYTICS_CLIENT_SECRET",
      "  - GOOGLE_ANALYTICS_REDIRECT_URI",
      "  - GOOGLE_ANALYTICS_ACCESS_TOKEN",
      "Obtain an access token using the OAuth 2.0 flow. You can use the @microfox/google-oauth package to handle the OAuth process.",
      "When initializing the SDK, use the createGoogleAnalyticsSDK function and pass in the required configuration.",
      "Be aware of Google Analytics API quotas and limits. Default quota is 10,000 requests per day per project.",
      "For high-volume applications, consider implementing exponential backoff and retry logic for API requests.",
      "Always validate and sanitize user inputs before passing them to the API to prevent injection attacks.",
      "Keep your access token secure and refresh it when necessary using the refreshAccessToken method.",
      "Consult the official Google Analytics Data API documentation for the most up-to-date information on endpoints, parameters, and best practices."
    ]
  },
  {
    "name": "@microfox/google-oauth",
    "title": "Microfox Google OAuth SDK",
    "description": "Google OAuth SDK for Microfox",
    "path": "packages/google-oauth",
    "dependencies": ["zod"],
    "status": "oauthConnector",
    "authEndpoint": "/connect/google-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/google-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/google-oauth/icon.svg",
    "constructors": [
      {
        "name": "GoogleOAuthSdk",
        "description": "Create a new Google OAuth client",
        "zodSecretSchema": "GoogleAuthConfigSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the Google client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the Google client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the Google application"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the Google application"
          },
          {
            "key": "GOOGLE_SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the Google client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["GoogleOAuthSdk"],
        "description": "The access token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["GoogleOAuthSdk"],
        "description": "The refresh token for the Google client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["GoogleOAuthSdk"],
        "description": "The client ID for the Google application",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["GoogleOAuthSdk"],
        "description": "The client secret for the Google application",
        "required": true
      },
      {
        "key": "GOOGLE_SCOPES",
        "constructors": ["GoogleOAuthSdk"],
        "description": "The scopes for the Google client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `GoogleOAuthSdk` class to create a new Google OAuth client."
    ],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/google-seo",
    "title": "Google Search Console",
    "description": "A TypeScript SDK for interacting with the Google Search Console API.",
    "path": "packages/google-seo",
    "dependencies": ["@microfox/google-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "oauth2Scopes": [
      "https://www.googleapis.com/auth/webmasters",
      "https://www.googleapis.com/auth/webmasters.readonly"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/google-seo",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-search-console.svg",
    "readme_map": {
      "title": "Google Search Console",
      "description": "The full README for the Google Search Console",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/README.md",
      "functionalities": [
        "GoogleSearchConsoleSDK",
        "validateAccessToken",
        "refreshAccessToken",
        "listSites",
        "getSite",
        "addSite",
        "deleteSite",
        "listSitemaps",
        "getSitemap",
        "submitSitemap",
        "deleteSitemap",
        "querySearchAnalytics",
        "inspectUrl"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/GoogleSearchConsoleSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "GoogleSearchConsoleSDK",
          "description": "Initializes a new instance of the Google Search Console SDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken",
          "description": "Validates the current access token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken",
          "description": "Refreshes the access token using a refresh token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/listSites.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listSites",
          "description": "Lists all sites verified by the authenticated user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/getSite.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getSite",
          "description": "Retrieves information about a specific site."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/addSite.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "addSite",
          "description": "Adds a site to the list of verified sites."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/deleteSite.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteSite",
          "description": "Deletes a site from the list of verified sites."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/listSitemaps.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "listSitemaps",
          "description": "Lists all sitemaps submitted for a site."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/getSitemap.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getSitemap",
          "description": "Retrieves a specific sitemap."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/submitSitemap.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "submitSitemap",
          "description": "Submits a sitemap for a site."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/deleteSitemap.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteSitemap",
          "description": "Deletes a sitemap for a site."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/querySearchAnalytics.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "querySearchAnalytics",
          "description": "Queries search analytics data for a site."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-seo/docs/inspectUrl.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "inspectUrl",
          "description": "Inspects a URL."
        }
      ]
    },
    "constructors": [
      {
        "name": "GoogleSearchConsoleSDK",
        "description": "Create a new Google Search Console client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/google-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Google Client ID",
            "description": "Your Google OAuth 2.0 client ID. Obtain this value from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Google Client Secret",
            "description": "Your Google OAuth 2.0 client secret. Obtain this value from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_REDIRECT_URI",
            "displayName": "Google Redirect URI",
            "description": "The redirect URI you specified in your Google Cloud Console."
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Google Access Token",
            "description": "Your Google OAuth 2.0 access token. Obtain this value through the OAuth 2.0 flow."
          }
        ],
        "functionalities": [
          "validateAccessToken",
          "refreshAccessToken",
          "listSites",
          "getSite",
          "addSite",
          "deleteSite",
          "listSitemaps",
          "getSitemap",
          "submitSitemap",
          "deleteSitemap",
          "querySearchAnalytics",
          "inspectUrl"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["GoogleSearchConsoleSDK"],
        "description": "Your Google OAuth 2.0 client ID. Obtain this value from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["GoogleSearchConsoleSDK"],
        "description": "Your Google OAuth 2.0 client secret. Obtain this value from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_REDIRECT_URI",
        "constructors": ["GoogleSearchConsoleSDK"],
        "description": "The redirect URI you specified in your Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["GoogleSearchConsoleSDK"],
        "description": "Your Google OAuth 2.0 access token. Obtain this value through the OAuth 2.0 flow.",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to obtain Google OAuth 2.0 credentials (client ID and client secret) from the Google Cloud Console (https://console.cloud.google.com/).",
      "Enable the Google Search Console API in your Google Cloud project.",
      "Set up the following environment variables:",
      "  - GOOGLE_CLIENT_ID: Your Google OAuth 2.0 client ID",
      "  - GOOGLE_CLIENT_SECRET: Your Google OAuth 2.0 client secret",
      "  - GOOGLE_REDIRECT_URI: The redirect URI you specified in your Google Cloud Console",
      "  - GOOGLE_ACCESS_TOKEN: Your Google OAuth 2.0 access token",
      "To obtain an access token, you need to go through the OAuth 2.0 flow. You can use the @microfox/google-oauth package to handle this process.",
      "This SDK requires the following OAuth 2.0 scopes: https://www.googleapis.com/auth/webmasters and https://www.googleapis.com/auth/webmasters.readonly",
      "Make sure to handle token refresh when the access token expires. You can use the refreshAccessToken method provided by the SDK.",
      "The Google Search Console API has usage quotas and limits. Please refer to the official documentation for the most up-to-date information on rate limits: https://developers.google.com/webmaster-tools/search-console-api-original/v3/limits"
    ]
  },
  {
    "name": "@microfox/google-sheets",
    "title": "Google Sheets SDK",
    "description": "A TypeScript SDK for interacting with Google Sheets.",
    "path": "packages/google-sheets",
    "dependencies": ["@microfox/google-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/google-oauth",
    "oauth2Scopes": ["https://www.googleapis.com/auth/spreadsheets"],
    "documentation": "https://www.npmjs.com/package/@microfox/google-sheets",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/google-sheets-icon.svg",
    "readme_map": {
      "title": "Google Sheets SDK",
      "description": "The full README for the Google Sheets SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/README.md",
      "functionalities": [
        "createGoogleSheetsSdk",
        "validateAccessToken",
        "refreshAccessToken",
        "getValues",
        "updateValues",
        "appendValues",
        "clearValues",
        "batchGetValues",
        "batchUpdateValues",
        "batchClearValues"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/createGoogleSheetsSdk.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createGoogleSheetsSdk",
          "description": "Creates an instance of the Google Sheets SDK. The constructor initializes the SDK with the provided configuration and sets up the necessary components for interacting with the Google Sheets API."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken",
          "description": "Validates the access token and refreshes it if necessary."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken",
          "description": "Refreshes the access token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/getValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getValues",
          "description": "Gets values from a range in a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/updateValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateValues",
          "description": "Updates values in a range of a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/appendValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "appendValues",
          "description": "Appends values to a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/clearValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "clearValues",
          "description": "Clears values from a range in a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/batchGetValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "batchGetValues",
          "description": "Batch gets values from multiple ranges in a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/batchUpdateValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "batchUpdateValues",
          "description": "Batch updates values in multiple ranges of a Google Sheet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/google-sheets/docs/batchClearValues.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "batchClearValues",
          "description": "Batch clears values from multiple ranges in a Google Sheet."
        }
      ]
    },
    "constructors": [
      {
        "name": "createGoogleSheetsSdk",
        "description": "Create a new Google Sheets SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/google-oauth",
        "authEndpoint": "/connect/google-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Google Client ID",
            "description": "The client ID for Google OAuth.  You can obtain this from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Google Client Secret",
            "description": "The client secret for Google OAuth. You can obtain this from the Google Cloud Console."
          },
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Google Access Token",
            "description": "The access token for Google OAuth. This token is used to authenticate requests to the Google Sheets API."
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Google Refresh Token",
            "description": "The refresh token for Google OAuth. This token is used to refresh the access token when it expires."
          },
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for Google OAuth authentication. This is used to specify the permissions that the client application needs.",
            "defaultValue": [
              "https://www.googleapis.com/auth/spreadsheets",
              "https://www.googleapis.com/auth/spreadsheets.readonly",
              "https://www.googleapis.com/auth/webmasters"
            ]
          }
        ],
        "functionalities": [
          "validateAccessToken",
          "refreshAccessToken",
          "getValues",
          "updateValues",
          "appendValues",
          "clearValues",
          "batchGetValues",
          "batchUpdateValues",
          "batchClearValues"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["createGoogleSheetsSdk"],
        "description": "The client ID for Google OAuth.  You can obtain this from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["createGoogleSheetsSdk"],
        "description": "The client secret for Google OAuth. You can obtain this from the Google Cloud Console.",
        "required": true
      },
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["createGoogleSheetsSdk"],
        "description": "The access token for Google OAuth. This token is used to authenticate requests to the Google Sheets API.",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["createGoogleSheetsSdk"],
        "description": "The refresh token for Google OAuth. This token is used to refresh the access token when it expires.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createGoogleSheetsSdk` constructor to create a new client."
    ]
  },
  {
    "name": "@microfox/gravatar",
    "title": "Microfox Gravatar",
    "description": "Microfox SDK for Gravatar profile and avatar services",
    "path": "packages/gravatar",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["GRAVATAR_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/hacker-news",
    "title": "Microfox Hacker News",
    "description": "Microfox SDK for Hacker News",
    "path": "packages/hacker-news",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["HACKER_NEWS_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/hunter",
    "title": "Microfox Hunter",
    "description": "Microfox SDK for Hunter.io email finder and verification",
    "path": "packages/hunter",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["HUNTER_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/instagram",
    "title": "Microfox Instagram SDK",
    "description": "A TypeScript SDK for interacting with the Instagram Graph API using OAuth 2.0.",
    "path": "packages/instagram",
    "dependencies": ["@microfox/instagram-business-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/instagram-business-oauth",
    "oauth2Scopes": [
      "instagram_basic",
      "instagram_content_publish",
      "instagram_manage_comments",
      "instagram_manage_insights"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/instagram",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/instagram-icon.svg",
    "readme_map": {
      "title": "Microfox Instagram SDK",
      "description": "The full README for the Microfox Instagram SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/README.md",
      "functionalities": [
        "InstagramSDK",
        "createMediaContainer",
        "getMediaContainerStatus",
        "publishMedia",
        "getContentPublishingLimit",
        "uploadVideo",
        "getComments",
        "replyToComment",
        "hideComment",
        "toggleComments",
        "deleteComment",
        "sendPrivateReply",
        "getMediaInsights",
        "getAccountInsights",
        "getOEmbedData"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/InstagramSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "InstagramSDK",
          "description": "Initializes a new instance of the InstagramSDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/createMediaContainer.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createMediaContainer",
          "description": "Creates a media container on Instagram."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getMediaContainerStatus.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMediaContainerStatus",
          "description": "Gets the status of a media container."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/publishMedia.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "publishMedia",
          "description": "Publishes a media container."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getContentPublishingLimit.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getContentPublishingLimit",
          "description": "Gets the content publishing limit for an account."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/uploadVideo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "uploadVideo",
          "description": "Uploads a video to a media container."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getComments.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getComments",
          "description": "Gets comments for a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/replyToComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "replyToComment",
          "description": "Replies to a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/hideComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "hideComment",
          "description": "Hides or shows a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/toggleComments.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "toggleComments",
          "description": "Enables or disables comments on a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/deleteComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteComment",
          "description": "Deletes a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/sendPrivateReply.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendPrivateReply",
          "description": "Sends a private reply to a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getMediaInsights.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMediaInsights",
          "description": "Gets insights for a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getAccountInsights.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAccountInsights",
          "description": "Gets insights for an account."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram/docs/getOEmbedData.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getOEmbedData",
          "description": "Gets oEmbed data for an Instagram post."
        }
      ]
    },
    "constructors": [
      {
        "name": "InstagramSDK",
        "description": "Create a new Microfox Instagram SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/instagram-business-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "INSTAGRAM_CLIENT_ID",
            "displayName": "Instagram Client ID",
            "description": "Your Instagram app's Client ID. Obtain this from your app's settings on the Facebook Developer platform."
          },
          {
            "key": "INSTAGRAM_CLIENT_SECRET",
            "displayName": "Instagram Client Secret",
            "description": "Your Instagram app's Client Secret. Obtain this from your app's settings on the Facebook Developer platform. Keep this value secure."
          },
          {
            "key": "INSTAGRAM_REDIRECT_URI",
            "displayName": "Instagram Redirect URI",
            "description": "The OAuth redirect URI configured for your app on the Facebook Developer platform. This URI must match the one used during the OAuth flow."
          },
          {
            "key": "INSTAGRAM_ACCESS_TOKEN",
            "displayName": "Instagram Access Token",
            "description": "The user's access token obtained through the OAuth flow. This token is used to authenticate API requests."
          },
          {
            "key": "INSTAGRAM_REFRESH_TOKEN",
            "displayName": "Instagram Refresh Token",
            "description": "The user's refresh token obtained through the OAuth flow. This token is used to refresh the access token when it expires."
          }
        ],
        "functionalities": [
          "createMediaContainer",
          "getMediaContainerStatus",
          "publishMedia",
          "getContentPublishingLimit",
          "uploadVideo",
          "getComments",
          "replyToComment",
          "hideComment",
          "toggleComments",
          "deleteComment",
          "sendPrivateReply",
          "getMediaInsights",
          "getAccountInsights",
          "getOEmbedData"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "INSTAGRAM_CLIENT_ID",
        "constructors": ["InstagramSDK"],
        "description": "Your Instagram app's Client ID. Obtain this from your app's settings on the Facebook Developer platform.",
        "required": true
      },
      {
        "key": "INSTAGRAM_CLIENT_SECRET",
        "constructors": ["InstagramSDK"],
        "description": "Your Instagram app's Client Secret. Obtain this from your app's settings on the Facebook Developer platform. Keep this value secure.",
        "required": true
      },
      {
        "key": "INSTAGRAM_REDIRECT_URI",
        "constructors": ["InstagramSDK"],
        "description": "The OAuth redirect URI configured for your app on the Facebook Developer platform. This URI must match the one used during the OAuth flow.",
        "required": true
      },
      {
        "key": "INSTAGRAM_ACCESS_TOKEN",
        "constructors": ["InstagramSDK"],
        "description": "The user's access token obtained through the OAuth flow. This token is used to authenticate API requests.",
        "required": true
      },
      {
        "key": "INSTAGRAM_REFRESH_TOKEN",
        "constructors": ["InstagramSDK"],
        "description": "The user's refresh token obtained through the OAuth flow. This token is used to refresh the access token when it expires.",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to obtain Instagram API credentials. Follow these steps:",
      "1. Create a Facebook Developer account at https://developers.facebook.com/",
      "2. Create a new app or use an existing one",
      "3. Add the Instagram Graph API product to your app",
      "4. Set up Instagram Basic Display or Instagram Graph API",
      "5. Configure your app settings, including the valid OAuth redirect URIs",
      "6. Obtain your app's Client ID and Client Secret from the app dashboard",
      "",
      "Environment variables:",
      "- INSTAGRAM_CLIENT_ID: Your Instagram app's Client ID",
      "- INSTAGRAM_CLIENT_SECRET: Your Instagram app's Client Secret",
      "- INSTAGRAM_REDIRECT_URI: The OAuth redirect URI for your app",
      "- INSTAGRAM_ACCESS_TOKEN: The user's access token (obtained through OAuth flow)",
      "- INSTAGRAM_REFRESH_TOKEN: The user's refresh token (obtained through OAuth flow)",
      "",
      "Authentication:",
      "This SDK uses OAuth 2.0 for authentication. You need to implement the OAuth flow in your application to obtain the initial access token and refresh token. The SDK handles token refreshing automatically.",
      "",
      "Rate Limits:",
      "Instagram API has rate limits that vary by endpoint. Monitor your usage and implement appropriate error handling and backoff strategies. Use the getContentPublishingLimit method to check your current rate limit status for content publishing.",
      "",
      "Important Notes:",
      "- Always use HTTPS for API calls and redirect URIs",
      "- Keep your Client Secret and access tokens secure",
      "- Implement proper error handling in your application",
      "- Some endpoints require specific permissions. Ensure your app has the necessary permissions enabled",
      "- For video uploads, use the resumable upload process for better reliability",
      "- When working with insights, be aware of the different metrics available for media objects vs. user accounts",
      "- The oEmbed endpoint requires a separate app access token or client access token",
      "",
      "For more detailed information, refer to the official Instagram Graph API documentation: https://developers.facebook.com/docs/instagram-api/"
    ]
  },
  {
    "name": "@microfox/instagram-business-oauth",
    "title": "Microfox Instagram Business OAuth",
    "description": "A lightweight, type-safe SDK for interacting with the Instagram Business API",
    "path": "packages/instagram-business-oauth",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "/connect/instagram",
    "documentation": "https://www.npmjs.com/package/@microfox/instagram-business-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/instagram-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "InstagramBusinessOAuth Microfox",
      "functionalities": [],
      "description": "The full README for the Instagram Business OAuth SDK"
    },
    "constructors": [
      {
        "name": "InstagramBusinessOAuthSdk",
        "description": "Create a new Instagram Business OAuth client",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "INSTAGRAM_CLIENT_ID",
            "displayName": "Instagram Client ID",
            "description": "The client ID for Instagram Business OAuth"
          },
          {
            "key": "INSTAGRAM_CLIENT_SECRET",
            "displayName": "Instagram Client Secret",
            "description": "The client secret for Instagram Business OAuth"
          },
          {
            "key": "INSTAGRAM_REDIRECT_URI",
            "displayName": "Instagram Redirect URI",
            "description": "The redirect URI for Instagram Business OAuth"
          },
          {
            "key": "INSTAGRAM_SCOPES",
            "displayName": "Instagram Scopes",
            "description": "The scopes for Instagram Business OAuth"
          },
          {
            "key": "INSTAGRAM_ACCESS_TOKEN",
            "displayName": "Instagram Access Token",
            "description": "The access token for Instagram Business OAuth"
          },
          {
            "key": "INSTAGRAM_REFRESH_TOKEN",
            "displayName": "Instagram Refresh Token",
            "description": "The refresh token for Instagram Business OAuth"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "INSTAGRAM_CLIENT_ID",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The client ID for Instagram Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_CLIENT_SECRET",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The client secret for Instagram Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_REDIRECT_URI",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The redirect URI for Instagram Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_SCOPES",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The scopes for Instagram Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_ACCESS_TOKEN",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The access token for Instagram Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_REFRESH_TOKEN",
        "constructors": ["InstagramBusinessOAuthSdk"],
        "description": "The refresh token for Instagram Business OAuth",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `InstagramBusinessOAuthSdk` constructor to create a new Instagram Business OAuth client.",
      "The SDK supports OAuth2 authentication for Instagram Business API."
    ]
  },
  {
    "name": "@microfox/instagram-fb",
    "title": "Instagram SDK",
    "description": "A TypeScript SDK for interacting with the Instagram API using OAuth 2.0.  This package simplifies authentication and data access.",
    "path": "packages/instagram-fb",
    "dependencies": ["@microfox/instagram-fb-business-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/instagram-fb-business-oauth",
    "oauth2Scopes": [
      "instagram_basic",
      "instagram_content_publish",
      "instagram_manage_comments",
      "instagram_manage_insights",
      "pages_show_list",
      "pages_read_engagement"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/instagram-fb",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/instagram-icon.svg",
    "readme_map": {
      "title": "Instagram SDK",
      "description": "The full README for the Instagram SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/README.md",
      "functionalities": [
        "InstagramSDK",
        "validateAccessToken",
        "createMediaContainer",
        "publishMedia",
        "checkMediaStatus",
        "getContentPublishingLimit",
        "uploadVideo",
        "getComments",
        "replyToComment",
        "hideComment",
        "enableDisableComments",
        "deleteComment",
        "sendPrivateReply",
        "getMediaInsights",
        "getAccountInsights",
        "getOEmbed"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/InstagramSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "InstagramSDK",
          "description": "Initializes a new instance of the InstagramSDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken",
          "description": "Validates the access token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/createMediaContainer.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "createMediaContainer",
          "description": "Creates a media container."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/publishMedia.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "publishMedia",
          "description": "Publishes media."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/checkMediaStatus.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "checkMediaStatus",
          "description": "Checks the status of media."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/getContentPublishingLimit.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getContentPublishingLimit",
          "description": "Gets the content publishing limit."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/uploadVideo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "uploadVideo",
          "description": "Uploads a video."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/getComments.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getComments",
          "description": "Gets comments on a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/replyToComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "replyToComment",
          "description": "Replies to a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/hideComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "hideComment",
          "description": "Hides or unhides a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/enableDisableComments.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "enableDisableComments",
          "description": "Enables or disables comments on a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/deleteComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deleteComment",
          "description": "Deletes a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/sendPrivateReply.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendPrivateReply",
          "description": "Sends a private reply to a comment."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/getMediaInsights.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMediaInsights",
          "description": "Gets insights for a media object."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/getAccountInsights.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAccountInsights",
          "description": "Gets insights for an account."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/instagram-fb/docs/getOEmbed.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getOEmbed",
          "description": "Gets oEmbed data for a URL."
        }
      ]
    },
    "constructors": [
      {
        "name": "InstagramSDK",
        "description": "Create a new Instagram SDK client through which you can interact with the API",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "INSTAGRAM_CLIENT_ID",
            "displayName": "Instagram Client ID",
            "description": "Your Facebook App ID. Obtain this from your Facebook Developer account."
          },
          {
            "key": "INSTAGRAM_CLIENT_SECRET",
            "displayName": "Instagram Client Secret",
            "description": "Your Facebook App Secret. Obtain this from your Facebook Developer account."
          },
          {
            "key": "INSTAGRAM_REDIRECT_URI",
            "displayName": "Instagram Redirect URI",
            "description": "Your OAuth callback URL. This is the URL where Facebook will redirect the user after authorization."
          },
          {
            "key": "INSTAGRAM_ACCESS_TOKEN",
            "displayName": "Instagram Access Token",
            "description": "A valid access token for the Instagram Graph API. Obtain this through the OAuth flow."
          }
        ],
        "functionalities": [
          "validateAccessToken",
          "createMediaContainer",
          "publishMedia",
          "checkMediaStatus",
          "getContentPublishingLimit",
          "uploadVideo",
          "getComments",
          "replyToComment",
          "hideComment",
          "enableDisableComments",
          "deleteComment",
          "sendPrivateReply",
          "getMediaInsights",
          "getAccountInsights",
          "getOEmbed"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "INSTAGRAM_CLIENT_ID",
        "constructors": ["InstagramSDK"],
        "description": "Your Facebook App ID. Obtain this from your Facebook Developer account.",
        "required": true
      },
      {
        "key": "INSTAGRAM_CLIENT_SECRET",
        "constructors": ["InstagramSDK"],
        "description": "Your Facebook App Secret. Obtain this from your Facebook Developer account.",
        "required": true
      },
      {
        "key": "INSTAGRAM_REDIRECT_URI",
        "constructors": ["InstagramSDK"],
        "description": "Your OAuth callback URL. This is the URL where Facebook will redirect the user after authorization.",
        "required": true
      },
      {
        "key": "INSTAGRAM_ACCESS_TOKEN",
        "constructors": ["InstagramSDK"],
        "description": "A valid access token for the Instagram Graph API. Obtain this through the OAuth flow.",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to set up a Facebook Developer account and create an app that uses the Instagram Graph API.",
      "Visit https://developers.facebook.com/ to create your app and obtain the necessary credentials.",
      "Required environment variables:",
      "- INSTAGRAM_CLIENT_ID: Your Facebook App ID",
      "- INSTAGRAM_CLIENT_SECRET: Your Facebook App Secret",
      "- INSTAGRAM_REDIRECT_URI: Your OAuth callback URL",
      "- INSTAGRAM_ACCESS_TOKEN: A valid access token for the Instagram Graph API",
      "Make sure to configure the correct permissions and features for your app in the Facebook Developer Console.",
      "This SDK uses OAuth 2.0 for authentication. You need to implement the full OAuth flow in your application to obtain a valid access token.",
      "Rate limits: The API has various rate limits depending on the endpoint. Notable limits include:",
      "- Content Publishing: 50 posts within a 24-hour moving period",
      "- oEmbed: Up to 5 million requests per 24 hours for app tokens, significantly lower for client tokens",
      "Ensure your application respects these rate limits to avoid being blocked by the API.",
      "For more detailed information about the Instagram Graph API, visit: https://developers.facebook.com/docs/instagram-api/"
    ]
  },
  {
    "name": "@microfox/instagram-fb-business-oauth",
    "title": "Microfox Instagram FB Business OAuth",
    "description": "A lightweight, type-safe SDK for interacting with the Instagram Business API through Facebook OAuth",
    "path": "packages/instagram-fb-business-oauth",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "/connect/instagram-fb",
    "documentation": "https://www.npmjs.com/package/@microfox/instagram-fb-business-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/instagram-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "InstagramFBBusinessOAuth Microfox",
      "functionalities": [],
      "description": "The full README for the Instagram FB Business OAuth SDK"
    },
    "constructors": [
      {
        "name": "InstagramFbBusinessOAuthSdk",
        "description": "Create a new Instagram FB Business OAuth client",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "INSTAGRAM_FB_CLIENT_ID",
            "displayName": "Instagram FB Client ID",
            "description": "The client ID for Instagram FB Business OAuth"
          },
          {
            "key": "INSTAGRAM_FB_CLIENT_SECRET",
            "displayName": "Instagram FB Client Secret",
            "description": "The client secret for Instagram FB Business OAuth"
          },
          {
            "key": "INSTAGRAM_FB_REDIRECT_URI",
            "displayName": "Instagram FB Redirect URI",
            "description": "The redirect URI for Instagram FB Business OAuth"
          },
          {
            "key": "INSTAGRAM_FB_SCOPES",
            "displayName": "Instagram FB Scopes",
            "description": "The scopes for Instagram FB Business OAuth"
          },
          {
            "key": "INSTAGRAM_FB_ACCESS_TOKEN",
            "displayName": "Instagram FB Access Token",
            "description": "The access token for Instagram FB Business OAuth"
          },
          {
            "key": "INSTAGRAM_FB_REFRESH_TOKEN",
            "displayName": "Instagram FB Refresh Token",
            "description": "The refresh token for Instagram FB Business OAuth"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "INSTAGRAM_FB_CLIENT_ID",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The client ID for Instagram FB Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_FB_CLIENT_SECRET",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The client secret for Instagram FB Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_FB_REDIRECT_URI",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The redirect URI for Instagram FB Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_FB_SCOPES",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The scopes for Instagram FB Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_FB_ACCESS_TOKEN",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The access token for Instagram FB Business OAuth",
        "required": true
      },
      {
        "key": "INSTAGRAM_FB_REFRESH_TOKEN",
        "constructors": ["InstagramFbBusinessOAuthSdk"],
        "description": "The refresh token for Instagram FB Business OAuth",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `InstagramFbBusinessOAuthSdk` constructor to create a new Instagram FB Business OAuth client.",
      "The SDK supports OAuth2 authentication for Instagram Business API."
    ]
  },
  {
    "name": "@microfox/jigsawstack",
    "title": "Microfox Jigsawstack",
    "description": "Microfox adapter for the Jigsawstack AI SDK",
    "path": "packages/jigsawstack",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["JIGSAWSTACK_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/jina",
    "title": "Microfox Jina",
    "description": "Microfox SDK for Jina AI",
    "path": "packages/jina",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["JINA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/langchain",
    "title": "Microfox LangChain",
    "description": "Microfox adapter for the LangChain AI SDK",
    "path": "packages/langchain",
    "dependencies": ["@microfox/core", "@langchain/core"],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/leadmagic",
    "title": "Microfox LeadMagic",
    "description": "Microfox SDK for LeadMagic lead generation and enrichment",
    "path": "packages/leadmagic",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["LEADMAGIC_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/linkedin-member-data-portability",
    "title": "LinkedIn Member Data Portability SDK",
    "description": "A TypeScript SDK for LinkedIn Member Data Portability.",
    "path": "packages/linkedin-member-data-portability",
    "dependencies": ["@microfox/linkedin-oauth", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/linkedin-oauth",
    "oauth2Scopes": ["r_dma_portability_3rd_party"],
    "documentation": "https://www.npmjs.com/package/@microfox/linkedin-member-data-portability",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/linkedin-icon.svg",
    "readme_map": {
      "title": "LinkedIn Member Data Portability SDK",
      "description": "The full README for the LinkedIn Member Data Portability SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/README.md",
      "functionalities": [
        "LinkedInDataPortabilitySDK",
        "validateAccessToken",
        "refreshAccessToken",
        "getMemberChangeLogs",
        "getMemberSnapshotData",
        "getMemberAuthorizations",
        "triggerMemberDataProcessing"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/LinkedInDataPortabilitySDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "LinkedInDataPortabilitySDK",
          "description": "Initializes a new instance of the LinkedInDataPortabilitySDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken",
          "description": "Validates the current access token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken",
          "description": "Refreshes the access token using the refresh token."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberChangeLogs.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMemberChangeLogs",
          "description": "Retrieves member change logs."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberSnapshotData.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMemberSnapshotData",
          "description": "Retrieves member snapshot data."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/getMemberAuthorizations.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMemberAuthorizations",
          "description": "Retrieves member authorizations."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-member-data-portability/docs/triggerMemberDataProcessing.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "triggerMemberDataProcessing",
          "description": "Triggers member data processing."
        }
      ]
    },
    "constructors": [
      {
        "name": "LinkedInDataPortabilitySDK",
        "description": "Create a new LinkedIn Member Data Portability SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/linkedin-oauth",
        "authEndpoint": "/connect/linkedin-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "LINKEDIN_CLIENT_ID",
            "displayName": "LinkedIn Client ID",
            "description": "Your LinkedIn app's Client ID."
          },
          {
            "key": "LINKEDIN_CLIENT_SECRET",
            "displayName": "LinkedIn Client Secret",
            "description": "Your LinkedIn app's Client Secret."
          },
          {
            "key": "LINKEDIN_REDIRECT_URI",
            "displayName": "LinkedIn Redirect URI",
            "description": "The redirect URI registered in your LinkedIn app."
          },
          {
            "key": "LINKEDIN_ACCESS_TOKEN",
            "displayName": "LinkedIn Access Token",
            "description": "The OAuth 2.0 access token for authenticated requests."
          },
          {
            "key": "LINKEDIN_REFRESH_TOKEN",
            "displayName": "LinkedIn Refresh Token",
            "description": "The refresh token to obtain new access tokens."
          },
          {
            "key": "SCOPES",
            "displayName": "LinkedIn Scopes",
            "description": "The scopes for OAuth requests"
          }
        ],
        "functionalities": [
          "validateAccessToken",
          "refreshAccessToken",
          "getMemberChangeLogs",
          "getMemberSnapshotData",
          "getMemberAuthorizations",
          "triggerMemberDataProcessing"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "LINKEDIN_CLIENT_ID",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "Your LinkedIn app's Client ID.",
        "required": true
      },
      {
        "key": "LINKEDIN_CLIENT_SECRET",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "Your LinkedIn app's Client Secret.",
        "required": true
      },
      {
        "key": "LINKEDIN_REDIRECT_URI",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "The redirect URI registered in your LinkedIn app.",
        "required": true
      },
      {
        "key": "LINKEDIN_ACCESS_TOKEN",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "The OAuth 2.0 access token for authenticated requests.",
        "required": true
      },
      {
        "key": "LINKEDIN_REFRESH_TOKEN",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "The refresh token to obtain new access tokens.",
        "required": false
      },
      {
        "key": "SCOPES",
        "constructors": ["LinkedInDataPortabilitySDK"],
        "description": "The scopes for OAuth requests",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to obtain LinkedIn API credentials. Follow these steps:",
      "1. Go to the LinkedIn Developer Portal (https://developer.linkedin.com/) and sign in.",
      "2. Create a new app or use an existing one.",
      "3. In your app settings, find the 'Client ID' and 'Client Secret'. You'll need these for authentication.",
      "4. Add a redirect URI to your app settings. This should match the redirectUri you provide when initializing the SDK.",
      "5. Request the 'r_dma_portability_3rd_party' scope for your app to access the Data Portability APIs.",
      "",
      "Environment Variables:",
      "- LINKEDIN_CLIENT_ID: Your LinkedIn app's Client ID",
      "- LINKEDIN_CLIENT_SECRET: Your LinkedIn app's Client Secret",
      "- LINKEDIN_REDIRECT_URI: The redirect URI registered in your LinkedIn app",
      "- LINKEDIN_ACCESS_TOKEN: The OAuth 2.0 access token for authenticated requests",
      "- LINKEDIN_REFRESH_TOKEN: The refresh token to obtain new access tokens (optional)",
      "",
      "Authentication:",
      "This SDK uses OAuth 2.0 for authentication. You need to implement the OAuth flow in your application to obtain an access token. The @microfox/linkedin-oauth package is used to handle OAuth-related operations.",
      "",
      "Rate Limits:",
      "LinkedIn API has rate limits, but specific details are not provided in the documentation. Implement proper error handling and retry mechanisms in your application to handle rate limiting errors.",
      "",
      "Important Notes:",
      "- Always use HTTPS for all API endpoints and OAuth flows.",
      "- Keep your Client Secret and access tokens secure. Never expose them in client-side code.",
      "- The Member Changelog API is limited to events from the last 28 days.",
      "- Include the 'LinkedIn-Version: 202312' header in all API requests (handled automatically by the SDK).",
      "- The SDK automatically validates the access token before each request. If it's invalid, you'll need to refresh it or obtain a new one.",
      "- For pagination in the Member Snapshot API, use the 'start' parameter (not implemented in this SDK version).",
      "",
      "Usage Example:",
      "```typescript",
      "import { createLinkedInSDK, LinkedInScope } from './LinkedInDataPortabilitySDK';",
      "",
      "const sdk = createLinkedInSDK({",
      "  clientId: process.env.LINKEDIN_CLIENT_ID!,",
      "  clientSecret: process.env.LINKEDIN_CLIENT_SECRET!,",
      "  redirectUri: process.env.LINKEDIN_REDIRECT_URI!,",
      "  accessToken: process.env.LINKEDIN_ACCESS_TOKEN!,",
      "  refreshToken: process.env.LINKEDIN_REFRESH_TOKEN",
      "});",
      "",
      "// Example: Get member change logs",
      "const changeLogs = await sdk.getMemberChangeLogs();",
      "console.log(changeLogs);",
      "```",
      "",
      "For more detailed information about the LinkedIn DMA Data Portability APIs, refer to the official LinkedIn Developer documentation."
    ]
  },
  {
    "name": "@microfox/linkedin-oauth",
    "title": "LinkedIn OAuth",
    "description": "Oauth2 for LinkedIn - Connect to LinkedIn and get access to the LinkedIn API products.",
    "path": "packages/linkedin-oauth",
    "dependencies": ["@microfox/rest-sdk", "zod"],
    "status": "oauthConnector",
    "authEndpoint": "/connect/linkedin-oauth",
    "documentation": "https://www.npmjs.com/package/@microfox/linkedin-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/linkedin-oauth/icon.svg",
    "constructors": [
      {
        "name": "linkedinOAuthManager",
        "description": "Create a new LinkedIn OAuth client",
        "zodSecretSchema": "LinkedInOAuthOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "LINKEDIN_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the LinkedIn client"
          },
          {
            "key": "LINKEDIN_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the LinkedIn client"
          },
          {
            "key": "LINKEDIN_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the LinkedIn application"
          },
          {
            "key": "LINKEDIN_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the LinkedIn application"
          },
          {
            "key": "LINKEDIN_SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the LinkedIn client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "LINKEDIN_ACCESS_TOKEN",
        "constructors": ["linkedinOAuthManager"],
        "description": "The access token for the LinkedIn client",
        "required": true
      },
      {
        "key": "LINKEDIN_REFRESH_TOKEN",
        "constructors": ["linkedinOAuthManager"],
        "description": "The refresh token for the LinkedIn client",
        "required": true
      },
      {
        "key": "LINKEDIN_CLIENT_ID",
        "constructors": ["linkedinOAuthManager"],
        "description": "The client ID for the LinkedIn application",
        "required": true
      },
      {
        "key": "LINKEDIN_CLIENT_SECRET",
        "constructors": ["linkedinOAuthManager"],
        "description": "The client secret for the LinkedIn application",
        "required": true
      },
      {
        "key": "LINKEDIN_SCOPES",
        "constructors": ["linkedinOAuthManager"],
        "description": "The scopes for the LinkedIn client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createLinkedInClient` constructor to create a new LinkedIn OAuth client."
    ],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/linkedin-share",
    "title": "LinkedIn Share",
    "description": "LinkedIn Share - Simple Text Post, Share an Article, Share an Image, Create a draft post. etc..",
    "path": "packages/linkedin-share",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "/connect/linkedin",
    "documentation": "https://www.npmjs.com/package/@microfox/linkedin-share",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/packages/linkedin-share/icon.svg",
    "constructors": [
      {
        "name": "LinkedinShareSdk",
        "description": "Create a new LinkedIn Share client through which you can interact with the API",
        "auth": "oauth2",
        "authEndpoint": "/connect/linkedin",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "LINKEDIN_ACCESS_TOKEN",
            "displayName": "LinkedIn Access Token",
            "description": "The LinkedIn access token required for authentication."
          }
        ],
        "functionalities": ["post", "getUserId"]
      }
    ],
    "keysInfo": [
      {
        "key": "LINKEDIN_ACCESS_TOKEN",
        "constructors": ["LinkedinShareSdk"],
        "description": "The LinkedIn access token required for authentication.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createLinkedInShareClient` constructor to create a new LinkedIn Share client for posting content to LinkedIn."
    ],
    "readme_map": {
      "title": "LinkedIn Share",
      "description": "The full README for the LinkedIn Share",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-share/README.md",
      "functionalities": ["LinkedinShareSdk", "post", "getUserId"],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-share/docs/LinkedinShareSdk.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "LinkedinShareSdk",
          "description": "Initializes a new instance of the LinkedinShareSdk."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-share/docs/post.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "post",
          "description": "Post content to LinkedIn."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/linkedin-share/docs/getUserId.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUserId",
          "description": "Get the current user's LinkedIn ID."
        }
      ]
    }
  },
  {
    "name": "@microfox/llamaindex",
    "title": "Microfox LlamaIndex",
    "description": "Microfox adapter for the LlamaIndex AI SDK",
    "path": "packages/llamaindex",
    "dependencies": ["@microfox/core", "llamaindex"],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/mastra",
    "title": "Microfox Mastra",
    "description": "Microfox adapter for the Mastra AI Agent SDK",
    "path": "packages/mastra",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["MASTRA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/midjourney",
    "title": "Microfox Midjourney",
    "description": "Microfox SDK for the unofficial Midjourney API via imagineapi.dev",
    "path": "packages/midjourney",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["MIDJOURNEY_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/novu",
    "title": "Microfox Novu",
    "description": "Microfox SDK for the Novu notifications API",
    "path": "packages/novu",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["NOVU_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/people-data-labs",
    "title": "Microfox People Data Labs",
    "description": "Microfox SDK for People Data Labs",
    "path": "packages/people-data-labs",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["PEOPLE_DATA_LABS_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/perigon",
    "title": "Microfox Perigon",
    "description": "Microfox SDK for the Perigon News API",
    "path": "packages/perigon",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["PERIGON_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/polygon",
    "title": "Microfox Polygon",
    "description": "Microfox SDK for the Polygon stock API",
    "path": "packages/polygon",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["POLYGON_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/predict-leads",
    "title": "Microfox Predict Leads",
    "description": "Microfox SDK for Predict Leads company intelligence and signals",
    "path": "packages/predict-leads",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["PREDICT_LEADS_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/proxycurl",
    "title": "Proxycurl Scraping API",
    "description": "Proxycurl API client",
    "path": "packages/proxycurl",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["PROXYCURL_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/reddit",
    "title": "Reddit TypeScript SDK",
    "description": "A TypeScript SDK for interacting with the Reddit API, providing functionalities for user data retrieval, search operations (users, posts, communities), post and comment processing, moderation, and comprehensive data access.",
    "path": "packages/reddit",
    "dependencies": ["zod", "@microfox/reddit-oauth"],
    "status": "stable",
    "authEndpoint": "/connect/reddit-oauth",
    "oauth2Scopes": [
      "identity",
      "edit",
      "flair",
      "history",
      "modconfig",
      "modflair",
      "modlog",
      "modposts",
      "modwiki",
      "mysubreddits",
      "privatemessages",
      "read",
      "report",
      "save",
      "submit",
      "subscribe",
      "vote",
      "wikiedit",
      "wikiread"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/reddit",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/reddit.svg",
    "readme_map": {
      "title": "@microfox/@microfox/reddit README",
      "description": "The full README for the Reddit TypeScript SDK",
      "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/README.md",
      "all_readmes": [
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/createRedditSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createRedditSDK"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getMe.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMe"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getUserPreferences.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUserPreferences"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/updateUserPreferences.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateUserPreferences"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getUserKarma.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUserKarma"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getUserTrophies.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUserTrophies"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getUser.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUser"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getUserContent.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getUserContent"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getSubredditInfo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getSubredditInfo"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/searchSubreddit.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "searchSubreddit"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/search.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "search"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/submitComment.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "submitComment"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/submitPost.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "submitPost"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/vote.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "vote"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/deletePost.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "deletePost"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/editUserText.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "editUserText"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/hidePost.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "hidePost"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/unhidePost.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "unhidePost"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/saveItem.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "saveItem"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/unsaveItem.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "unsaveItem"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/reportItem.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "reportItem"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getInfo.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getInfo"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getMoreComments.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMoreComments"
        },
        {
          "path": "https://raw.githubusercontent.com/microfox-ai/microfox/main/packages/reddit/docs/getPost.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getPost"
        }
      ],
      "functionalities": [
        "createRedditSDK",
        "validateAccessToken",
        "refreshAccessToken",
        "getMe",
        "getUserPreferences",
        "updateUserPreferences",
        "getUserKarma",
        "getUserTrophies",
        "getUser",
        "getUserContent",
        "getSubredditInfo",
        "searchSubreddit",
        "search",
        "submitComment",
        "submitPost",
        "vote",
        "deletePost",
        "editUserText",
        "hidePost",
        "unhidePost",
        "saveItem",
        "unsaveItem",
        "reportItem",
        "getInfo",
        "getMoreComments",
        "getPost"
      ]
    },
    "constructors": [
      {
        "name": "createRedditSDK",
        "description": "Create a new Reddit TypeScript SDK client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/reddit-oauth",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "REDDIT_CLIENT_ID",
            "displayName": "Reddit Client ID",
            "description": "Your Reddit application's client ID.  Obtain this by creating a Reddit app at https://www.reddit.com/prefs/apps."
          },
          {
            "key": "REDDIT_CLIENT_SECRET",
            "displayName": "Reddit Client Secret",
            "description": "Your Reddit application's client secret. Obtain this by creating a Reddit app at https://www.reddit.com/prefs/apps."
          },
          {
            "key": "REDDIT_ACCESS_TOKEN",
            "displayName": "Reddit Access Token",
            "description": "The OAuth access token for authenticating with the Reddit API. This token expires after 1 hour."
          },
          {
            "key": "REDDIT_REFRESH_TOKEN",
            "displayName": "Reddit Refresh Token",
            "description": "The OAuth refresh token for obtaining new access tokens. Include `duration=permanent` in the initial authorization request to receive a refresh token."
          },
          {
            "key": "REDDIT_REDIRECT_URI",
            "displayName": "Reddit Redirect URI",
            "description": "The redirect URI you specified when creating your Reddit app. This URI must match exactly."
          }
        ],
        "functionalities": [
          "validateAccessToken",
          "refreshAccessToken",
          "getMe",
          "getUserPreferences",
          "updateUserPreferences",
          "getUserKarma",
          "getUserTrophies",
          "getUser",
          "getUserContent",
          "getSubredditInfo",
          "searchSubreddit",
          "search",
          "submitComment",
          "submitPost",
          "vote",
          "deletePost",
          "editUserText",
          "hidePost",
          "unhidePost",
          "saveItem",
          "unsaveItem",
          "reportItem",
          "getInfo",
          "getMoreComments",
          "getPost"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "REDDIT_CLIENT_ID",
        "constructors": ["createRedditSDK"],
        "description": "Your Reddit application's client ID.  Obtain this by creating a Reddit app at https://www.reddit.com/prefs/apps.",
        "required": true
      },
      {
        "key": "REDDIT_CLIENT_SECRET",
        "constructors": ["createRedditSDK"],
        "description": "Your Reddit application's client secret. Obtain this by creating a Reddit app at https://www.reddit.com/prefs/apps.",
        "required": true
      },
      {
        "key": "REDDIT_ACCESS_TOKEN",
        "constructors": ["createRedditSDK"],
        "description": "The OAuth access token for authenticating with the Reddit API. This token expires after 1 hour.",
        "required": true
      },
      {
        "key": "REDDIT_REFRESH_TOKEN",
        "constructors": ["createRedditSDK"],
        "description": "The OAuth refresh token for obtaining new access tokens. Include `duration=permanent` in the initial authorization request to receive a refresh token.",
        "required": false
      },
      {
        "key": "REDDIT_REDIRECT_URI",
        "constructors": ["createRedditSDK"],
        "description": "The redirect URI you specified when creating your Reddit app. This URI must match exactly.",
        "required": true
      }
    ],
    "extraInfo": [
      "To use this SDK, you need to obtain OAuth credentials from Reddit. Follow these steps:",
      "1. Go to https://www.reddit.com/prefs/apps",
      "2. Click on 'create app' or 'create another app' at the bottom",
      "3. Fill in the required information:",
      "   - Name: Your app's name",
      "   - App type: Choose 'web app' for most cases",
      "   - Description: Brief description of your app",
      "   - About URL: Your app's website (if applicable)",
      "   - Redirect URI: The URI where Reddit will redirect after authorization",
      "4. Click 'create app'",
      "5. You'll receive a Client ID and Client Secret. Keep these secure.",
      "",
      "Environment variables:",
      "- REDDIT_CLIENT_ID: Your Reddit application's client ID",
      "- REDDIT_CLIENT_SECRET: Your Reddit application's client secret",
      "- REDDIT_REDIRECT_URI: The redirect URI you specified when creating the app",
      "",
      "To set up environment variables:",
      "1. Create a .env file in your project root (if not already present)",
      "2. Add the following lines to the .env file:",
      "   REDDIT_CLIENT_ID=your_client_id_here",
      "   REDDIT_CLIENT_SECRET=your_client_secret_here",
      "   REDDIT_REDIRECT_URI=your_redirect_uri_here",
      "3. Use a package like dotenv to load these variables in your application",
      "",
      "Important notes:",
      "- Reddit's OAuth implementation uses comma-separated scopes instead of space-separated",
      "- Access tokens expire after 1 hour (3600 seconds)",
      "- To get a refresh token, include 'duration=permanent' in the initial authorization request",
      "- Rate limits: https://github.com/reddit-archive/reddit/wiki/API#rules",
      "  - 60 requests per minute",
      "  - OAuth2 clients may make up to 600 requests per 10 minutes",
      "  - Monitor the X-Ratelimit headers in API responses for current limits and usage",
      "",
      "For more detailed information, refer to the Reddit API documentation: https://www.reddit.com/dev/api/oauth"
    ]
  },
  {
    "name": "@microfox/reddit-oauth",
    "title": "Microfox Reddit OAuth",
    "description": "A TypeScript OAuth package for Reddit.",
    "path": "packages/reddit-oauth",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "/connect/reddit",
    "oauth2Scopes": [
      "identity",
      "edit",
      "flair",
      "history",
      "modconfig",
      "modflair",
      "modlog",
      "modposts",
      "modwiki",
      "mysubreddits",
      "privatemessages",
      "read",
      "report",
      "save",
      "submit",
      "subscribe",
      "vote",
      "wikiedit",
      "wikiread"
    ],
    "documentation": "https://www.npmjs.com/package/@microfox/reddit-oauth",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/reddit.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "@microfox/@microfox/reddit-oauth README",
      "description": "The full README for the Microfox Reddit OAuth",
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/createRedditOAuth.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createRedditOAuth"
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/getAuthorizationUrl.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAuthorizationUrl"
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/getAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getAccessToken"
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/refreshAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "refreshAccessToken"
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/validateAccessToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "validateAccessToken"
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/reddit-oauth/docs/revokeToken.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "revokeToken"
        }
      ],
      "functionalities": [
        "createRedditOAuth",
        "getAuthorizationUrl",
        "getAccessToken",
        "refreshAccessToken",
        "validateAccessToken",
        "revokeToken"
      ]
    },
    "constructors": [
      {
        "name": "createRedditOAuth",
        "description": "Create a new Microfox Reddit OAuth client through which you can interact with the API",
        "auth": "oauth2",
        "authSdk": "@microfox/reddit",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "REDDIT_CLIENT_ID",
            "displayName": "Reddit Client ID",
            "description": "Your Reddit application's client ID. Obtain this from your Reddit app settings."
          },
          {
            "key": "REDDIT_CLIENT_SECRET",
            "displayName": "Reddit Client Secret",
            "description": "Your Reddit application's client secret. Obtain this from your Reddit app settings."
          },
          {
            "key": "REDDIT_REDIRECT_URI",
            "displayName": "Reddit Redirect URI",
            "description": "The redirect URI you specified when creating your Reddit app."
          }
        ],
        "functionalities": [
          "getAuthorizationUrl",
          "getAccessToken",
          "refreshAccessToken",
          "validateAccessToken",
          "revokeToken"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "REDDIT_CLIENT_ID",
        "constructors": ["createRedditOAuth"],
        "description": "Your Reddit application's client ID. Obtain this from your Reddit app settings.",
        "required": true
      },
      {
        "key": "REDDIT_CLIENT_SECRET",
        "constructors": ["createRedditOAuth"],
        "description": "Your Reddit application's client secret. Obtain this from your Reddit app settings.",
        "required": true
      },
      {
        "key": "REDDIT_REDIRECT_URI",
        "constructors": ["createRedditOAuth"],
        "description": "The redirect URI you specified when creating your Reddit app.",
        "required": true
      }
    ],
    "extraInfo": [
      "To obtain OAuth credentials for Reddit:",
      "1. Go to https://www.reddit.com/prefs/apps",
      "2. Click on 'create app' or 'create another app' at the bottom",
      "3. Fill in the required information:",
      "   - Name: Your app's name",
      "   - App type: Choose 'web app' for most cases",
      "   - Description: Brief description of your app",
      "   - About URL: Your app's website (if applicable)",
      "   - Redirect URI: The URI where Reddit will redirect after authorization",
      "4. Click 'create app'",
      "5. You'll receive a Client ID and Client Secret. Keep these secure.",
      "",
      "Environment variables:",
      "- REDDIT_CLIENT_ID: Your Reddit application's client ID",
      "- REDDIT_CLIENT_SECRET: Your Reddit application's client secret",
      "- REDDIT_REDIRECT_URI: The redirect URI you specified when creating the app",
      "",
      "To set up environment variables:",
      "1. Create a .env file in your project root (if not already present)",
      "2. Add the following lines to the .env file:",
      "   REDDIT_CLIENT_ID=your_client_id_here",
      "   REDDIT_CLIENT_SECRET=your_client_secret_here",
      "   REDDIT_REDIRECT_URI=your_redirect_uri_here",
      "3. Use a package like dotenv to load these variables in your application",
      "",
      "Important notes:",
      "- Reddit's OAuth implementation uses comma-separated scopes instead of space-separated",
      "- The authorization endpoint is https://ssl.reddit.com/api/v1/authorize",
      "- The token endpoint is https://ssl.reddit.com/api/v1/access_token",
      "- Access tokens expire after 1 hour (3600 seconds)",
      "- To get a refresh token, include 'duration=permanent' in the initial authorization request",
      "- Rate limits: https://github.com/reddit-archive/reddit/wiki/API#rules",
      "  - 60 requests per minute",
      "  - OAuth2 clients may make up to 600 requests per 10 minutes",
      "  - Monitor the X-Ratelimit headers in API responses for current limits and usage",
      "",
      "For more detailed information, refer to the Reddit API documentation: https://www.reddit.com/dev/api/oauth"
    ]
  },
  {
    "name": "@microfox/rest-sdk",
    "title": "Microfox REST SDK",
    "description": "REST SDK for Microfox",
    "path": "packages/rest-sdk",
    "dependencies": ["zod"],
    "status": "internal",
    "documentation": "https://www.npmjs.com/package/@microfox/rest-sdk",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/rest-api.svg",
    "constructors": [],
    "keysInfo": [],
    "extraInfo": [],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/rocketreach",
    "title": "Microfox RocketReach",
    "description": "Microfox SDK for RocketReach contact enrichment and B2B intelligence",
    "path": "packages/rocketreach",
    "dependencies": ["@microfox/core"],
    "status": "partial",
    "apiKeys": ["ROCKETREACH_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/searxng",
    "title": "Microfox SearXNG",
    "description": "Microfox SDK for the SearXNG meta search engine",
    "path": "packages/searxng",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/serpapi",
    "title": "Microfox SerpAPI",
    "description": "Microfox SDK for SerpAPI Google Search",
    "path": "packages/serpapi",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["SERPAPI_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/serper",
    "title": "Microfox Serper",
    "description": "Microfox SDK for Serper Google Search",
    "path": "packages/serper",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["SERPER_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/slack-web-tiny",
    "title": "Microfox Slack Web Tiny",
    "description": "A lightweight, type-safe SDK for interacting with the Slack Web API",
    "path": "packages/slack-web-tiny",
    "dependencies": ["zod"],
    "status": "stable",
    "authEndpoint": "/connect/slack",
    "documentation": "https://www.npmjs.com/package/@microfox/slack-web-tiny",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/slack-icon.svg",
    "readme_map": {
      "title": "Microfox Slack Web Tiny",
      "description": "The full README for the Microfox Slack Web Tiny",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-web-tiny/README.md",
      "functionalities": [
        "createSlackSDK",
        "sendMessage",
        "updateMessage",
        "uploadFile"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-web-tiny/docs/createSlackSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createSlackSDK",
          "description": "Creates a new instance of the Slack Web Tiny SDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-web-tiny/docs/sendMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "sendMessage",
          "description": "Sends a message to a Slack channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-web-tiny/docs/updateMessage.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "updateMessage",
          "description": "Updates an existing message in a Slack channel."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/slack-web-tiny/docs/uploadFile.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "uploadFile",
          "description": "Uploads a file to Slack."
        }
      ]
    },
    "constructors": [
      {
        "name": "createSlackSDK",
        "description": "Create a new Microfox Slack Web Tiny client through which you can interact with the API",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [
          {
            "key": "SLACK_BOT_TOKEN",
            "displayName": "Slack Bot Token",
            "description": "The bot token for authenticating with the Slack API."
          }
        ],
        "internalKeys": [],
        "botConfig": [
          {
            "key": "SLACK_AUTHOR_NAME",
            "displayName": "Bot Name",
            "description": "Name that will appear as the message sender",
            "ui": {
              "type": "text",
              "label": "Bot Name",
              "placeholder": "Enter bot name"
            }
          },
          {
            "key": "SLACK_ICON_URL",
            "displayName": "Bot Icon",
            "description": "Icon that will appear as the bot's avatar",
            "ui": {
              "type": "image",
              "label": "Bot Icon"
            }
          }
        ],
        "functionalities": ["sendMessage", "updateMessage", "uploadFile"]
      }
    ],
    "keysInfo": [
      {
        "key": "SLACK_BOT_TOKEN",
        "constructors": ["createSlackSDK"],
        "description": "The bot token for authenticating with the Slack API.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createSlackSDK` constructor to create a new Slack Web Tiny client.",
      "The SDK supports both header and query-based authentication methods."
    ]
  },
  {
    "name": "@microfox/social-data",
    "title": "Microfox Social Data",
    "description": "Microfox SDK for accessing Twitter via Social Data",
    "path": "packages/social-data",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["SOCIAL_DATA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/stdlib",
    "title": "Microfox Stdlib",
    "description": "Standard library of AI functions which work with any LLM and TypeScript AI SDK",
    "path": "packages/stdlib",
    "dependencies": [
      "@microfox/apollo",
      "@microfox/bing",
      "@microfox/calculator",
      "@microfox/clearbit",
      "@microfox/core",
      "@microfox/dexa",
      "@microfox/diffbot",
      "@microfox/e2b",
      "@microfox/exa",
      "@microfox/firecrawl",
      "@microfox/github",
      "@microfox/gravatar",
      "@microfox/hacker-news",
      "@microfox/hunter",
      "@microfox/jina",
      "@microfox/leadmagic",
      "@microfox/midjourney",
      "@microfox/novu",
      "@microfox/people-data-labs",
      "@microfox/perigon",
      "@microfox/polygon",
      "@microfox/predict-leads",
      "@microfox/proxycurl",
      "@microfox/rocketreach",
      "@microfox/searxng",
      "@microfox/serpapi",
      "@microfox/serper",
      "@microfox/slack",
      "@microfox/social-data",
      "@microfox/tavily",
      "@microfox/twilio",
      "@microfox/weather",
      "@microfox/wikidata",
      "@microfox/wikipedia",
      "@microfox/wolfram-alpha",
      "@microfox/zoominfo",
      "@e2b/code-interpreter",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/tavily",
    "title": "Microfox Tavily",
    "description": "Microfox SDK for Tavily",
    "path": "packages/tavily",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": ["TAVILY_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/twilio",
    "title": "Microfox Twilio",
    "description": "Microfox SDK for Twilio",
    "path": "packages/twilio",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["TWILIO_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/twitter",
    "title": "Microfox X SDK",
    "description": "A lightweight, type-safe SDK for interacting with the X (Twitter) API v2",
    "path": "packages/twitter",
    "dependencies": ["crypto", "https", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/x",
    "documentation": "https://www.npmjs.com/package/@microfox/twitter",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/x.svg",
    "readme_map": {
      "title": "Microfox X SDK",
      "description": "The full README for the Microfox X SDK",
      "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/README.md",
      "functionalities": [
        "createXSDK",
        "create",
        "get",
        "getMultiple",
        "delete",
        "getByUsername",
        "getByUsernames",
        "getById",
        "getByIds",
        "getMe",
        "upload",
        "generateOAuthHeader"
      ],
      "all_readmes": [
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/createXSDK.md",
          "type": "constructor",
          "extension": "md",
          "functionality": "createXSDK",
          "description": "Creates a new instance of the Microfox X SDK."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/create.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "create",
          "description": "Creates a new tweet."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/get.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "get",
          "description": "Retrieves a single tweet by ID."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getMultiple.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMultiple",
          "description": "Retrieves multiple tweets by their IDs."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/delete.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "delete",
          "description": "Deletes a tweet by ID."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getByUsername.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getByUsername",
          "description": "Retrieves a user by their username."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getByUsernames.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getByUsernames",
          "description": "Retrieves multiple users by their usernames."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getById.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getById",
          "description": "Retrieves a user by their ID."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getByIds.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getByIds",
          "description": "Retrieves multiple users by their IDs."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/getMe.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "getMe",
          "description": "Retrieves the currently authenticated user."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/upload.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "upload",
          "description": "Uploads media to X."
        },
        {
          "path": "https://github.com/microfox-ai/microfox/blob/main/packages/twitter/docs/generateOAuthHeader.md",
          "type": "functionality",
          "extension": "md",
          "functionality": "generateOAuthHeader",
          "description": "Generates an OAuth 1.0a header."
        }
      ]
    },
    "constructors": [
      {
        "name": "createXSDK",
        "description": "Create a new Microfox X SDK client through which you can interact with the API",
        "auth": "apikey",
        "apiType": "api_key",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "X_API_KEY",
            "displayName": "X API Key",
            "description": "Your X API key."
          },
          {
            "key": "X_API_SECRET",
            "displayName": "X API Secret Key",
            "description": "Your X API secret key."
          },
          {
            "key": "X_ACCESS_TOKEN",
            "displayName": "X Access Token",
            "description": "Your X access token."
          },
          {
            "key": "X_ACCESS_SECRET",
            "displayName": "X Access Secret",
            "description": "Your X access token secret."
          }
        ],
        "functionalities": [
          "create",
          "get",
          "getMultiple",
          "delete",
          "getByUsername",
          "getByUsernames",
          "getById",
          "getByIds",
          "getMe",
          "upload",
          "generateOAuthHeader"
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "X_API_KEY",
        "constructors": ["createXSDK"],
        "description": "Your X API key.",
        "required": true
      },
      {
        "key": "X_API_SECRET",
        "constructors": ["createXSDK"],
        "description": "Your X API secret key.",
        "required": true
      },
      {
        "key": "X_ACCESS_TOKEN",
        "constructors": ["createXSDK"],
        "description": "Your X access token.",
        "required": true
      },
      {
        "key": "X_ACCESS_SECRET",
        "constructors": ["createXSDK"],
        "description": "Your X access token secret.",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createXSDK` constructor to create a new X client.",
      "The SDK supports both v2 API endpoints for tweets and users.",
      "Media uploads are supported through the v1.1 API endpoint."
    ]
  },
  {
    "name": "@microfox/weather",
    "title": "Microfox Weather",
    "description": "Microfox SDK for weatherapi.com",
    "path": "packages/weather",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["WEATHER_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/whatsapp-business",
    "title": "Whatsapp Business",
    "description": "Send messages from Whatsapp Business acount to end users, also types of Whatsapp Business Webhooks",
    "path": "packages/whatsapp-business",
    "dependencies": ["@microfox/rest-sdk"],
    "status": "stable",
    "authEndpoint": "/connect/whatsapp",
    "documentation": "https://www.npmjs.com/package/@microfox/whatsapp-business",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/whatsapp-icon.svg",
    "readme_map": {
      "path": "/README.md",
      "title": "WhatsAppBusinessSDK Microfox",
      "functionalities": [
        "sendTextMessage",
        "sendImageMessage",
        "sendVideoMessage",
        "sendDocumentMessage",
        "sendAudioMessage",
        "sendStickerMessage",
        "sendLocationMessage",
        "sendContactMessage",
        "sendInteractiveMessage",
        "sendTemplateMessage",
        "markMessageAsRead",
        "uploadMedia",
        "downloadMedia",
        "getMediaUrl",
        "registerPhone",
        "deregisterPhone",
        "getBusinessProfile",
        "updateBusinessProfile",
        "getTemplates",
        "createTemplate",
        "deleteTemplate",
        "getQRCode",
        "getPhoneNumbers",
        "getAnalytics",
        "getCommerceSettings",
        "updateCommerceSettings",
        "configureConversationalComponents",
        "getConversationalComponents"
      ],
      "description": "The full README for the WhatsApp Business SDK"
    },
    "constructors": [
      {
        "name": "WhatsAppBusinessSDK",
        "description": "Create a new WhatsApp Business SDK through which you can operate WhatsApp Business API",
        "auth": "apikey",
        "apiType": "bot_token",
        "requiredKeys": [
          {
            "key": "WHATSAPP_BUSINESS_PHONE_NUMBER",
            "displayName": "WhatsApp Business Phone Number",
            "description": "Your whatsapp business phone number"
          },
          {
            "key": "WHATSAPP_BUSINESS_PHONE_NUMBER_ID",
            "displayName": "WhatsApp Phone Number ID",
            "description": "The phone number ID for the WhatsApp Business API (You can find it in the WhatsApp Business API dashboard)"
          },
          {
            "key": "WHATSAPP_BUSINESS_ACCOUNT_ID",
            "displayName": "WhatsApp Business Account ID",
            "description": "The business account ID for the WhatsApp Business API (You can find it in the WhatsApp Business API dashboard)"
          },
          {
            "key": "WHATSAPP_BUSINESS_ACCESS_TOKEN",
            "displayName": "WhatsApp Access Token",
            "description": "The access token for the WhatsApp Business API"
          }
        ],
        "internalKeys": [],
        "botConfigComponent": "WhatsAppBotConfig",
        "botConfig": [
          {
            "key": "WHATSAPP_WEBHOOK_URL",
            "displayName": "WhatsApp Webhook Verify Token",
            "description": "Copy and paste this URL in the whatsapp Webhook dashboard.",
            "ui": {
              "type": "text",
              "isPrefilled": true,
              "label": "WhatsApp Webhook URL"
            },
            "instructions": {
              "type": "image",
              "placement": "onCopy",
              "url": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/docs/images/whatsapp-webhook-url.png"
            }
          },
          {
            "key": "WHATSAPP_WEBHOOK_VERIFY_TOKEN",
            "displayName": "WhatsApp Webhook Verify Token",
            "description": "Generate and paste this token in the webhook verify token field in the WhatsApp Business API dashboard.",
            "ui": {
              "type": "autogeneratedToken",
              "label": "WhatsApp Webhook Verify Token"
            }
          },
          {
            "key": "WHATSAPP_BUSINESS_NAME",
            "displayName": "App Name ( Appears when connecting to your Bot/App/Agent )",
            "description": "The name of the WhatsApp Business API",
            "ui": {
              "type": "text",
              "label": "WhatsApp Business Name",
              "placeholder": "Enter WhatsApp Business Name"
            }
          },
          {
            "key": "WHATSAPP_ICON_URL",
            "displayName": "App Icon URL ( Appears when connecting to your Bot/App/Agent )",
            "description": "The URL of the WhatsApp Business API icon",
            "ui": {
              "type": "image",
              "label": "WhatsApp Icon URL"
            }
          },
          {
            "key": "WHATSAPP_BUSINESS_SLUG",
            "displayName": "App Slug ( Used to connecting to your Bot/App/Agent )",
            "description": "The slug of the your business. This is the slug that will be used to identify your company",
            "ui": {
              "type": "text",
              "label": "Business Slug",
              "placeholder": "Enter Business Slug (e.g. microfox-business)",
              "isUnique": true
            }
          },
          {
            "key": "WHATSAPP_AGENTCHAT_API_KEY",
            "displayName": "WhatsApp AgentChat API Key",
            "description": "This key will be used to securely communicate with the registered user",
            "ui": {
              "type": "autogeneratedToken",
              "label": "WhatsApp AgentChat API Key"
            }
          },
          {
            "key": "WHATSAPP_AGENTCHAT_ENDPOINT",
            "displayName": "WhatsApp AgentChat Endpoint",
            "description": "The endpoint to communicate with the registered user",
            "ui": {
              "type": "text",
              "label": "WhatsApp AgentChat Endpoint",
              "placeholder": "Enter WhatsApp AgentChat Endpoint"
            }
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "WHATSAPP_BUSINESS_PHONE_NUMBER",
        "constructors": ["WhatsAppBusinessSDK"],
        "description": "Your whatsapp business phone number to send the text from",
        "required": true
      },
      {
        "key": "WHATSAPP_PHONE_NUMBER_ID",
        "constructors": ["WhatsAppBusinessSDK"],
        "description": "The phone number ID for the WhatsApp Business API",
        "required": true
      },
      {
        "key": "WHATSAPP_BUSINESS_ACCOUNT_ID",
        "constructors": ["WhatsAppBusinessSDK"],
        "description": "The business account ID for the WhatsApp Business API",
        "required": true
      },
      {
        "key": "WHATSAPP_ACCESS_TOKEN",
        "constructors": ["WhatsAppBusinessSDK"],
        "description": "The access token for the WhatsApp Business API",
        "required": true
      },
      {
        "key": "WHATSAPP_WEBHOOK_VERIFY_TOKEN",
        "constructors": ["WhatsAppBusinessSDK"],
        "description": "The verify token for the WhatsApp Webhook",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `WhatsAppBusinessSDK` constructor to create a new WhatsApp Business API client.",
      "The SDK supports sending various types of messages including text, media, and templates.",
      "Make sure to have a verified WhatsApp Business account and the necessary API credentials."
    ]
  },
  {
    "name": "@microfox/wikidata",
    "title": "Microfox Wikidata",
    "description": "Microfox SDK for Wikidata",
    "path": "packages/wikidata",
    "dependencies": [
      "@microfox/core",
      "ky",
      "p-throttle",
      "wikibase-sdk",
      "zod"
    ],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/wikipedia",
    "title": "Microfox Wikipedia",
    "description": "Microfox SDK for Wikipedia",
    "path": "packages/wikipedia",
    "dependencies": ["@microfox/core", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  },
  {
    "name": "@microfox/wolfram-alpha",
    "title": "Microfox Wolfram Alpha",
    "description": "Microfox SDK for Wolfram Alpha",
    "path": "packages/wolfram-alpha",
    "dependencies": ["@microfox/core", "ky", "zod"],
    "status": "partial",
    "apiKeys": ["WOLFRAM_ALPHA_API_KEY"],
    "extraInfo": []
  },
  {
    "name": "@microfox/youtube",
    "title": "Microfox YouTube SDK",
    "description": "YouTube SDK for Microfox",
    "path": "packages/youtube",
    "dependencies": ["@microfox/google", "@microfox/rest-sdk", "zod"],
    "status": "stable",
    "authEndpoint": "/connect/google",
    "documentation": "https://www.npmjs.com/package/@microfox/youtube",
    "icon": "https://raw.githubusercontent.com/microfox-ai/microfox/refs/heads/main/logos/youtube-icon.svg",
    "constructors": [
      {
        "name": "createYouTubeSDKWithTokens",
        "description": "Create a new YouTube client",
        "zodSecretSchema": "YouTubeSDKOptionsSchema",
        "auth": "oauth2",
        "requiredKeys": [],
        "internalKeys": [
          {
            "key": "GOOGLE_ACCESS_TOKEN",
            "displayName": "Access Token",
            "description": "The access token for the YouTube client"
          },
          {
            "key": "GOOGLE_REFRESH_TOKEN",
            "displayName": "Refresh Token",
            "description": "The refresh token for the YouTube client"
          },
          {
            "key": "GOOGLE_CLIENT_ID",
            "displayName": "Client ID",
            "description": "The client ID for the YouTube client"
          },
          {
            "key": "GOOGLE_CLIENT_SECRET",
            "displayName": "Client Secret",
            "description": "The client secret for the YouTube client"
          },
          {
            "key": "SCOPES",
            "displayName": "Scopes",
            "description": "The scopes for the YouTube client"
          }
        ]
      }
    ],
    "keysInfo": [
      {
        "key": "GOOGLE_ACCESS_TOKEN",
        "constructors": ["createYouTubeSDKWithTokens"],
        "description": "The access token for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_REFRESH_TOKEN",
        "constructors": ["createYouTubeSDKWithTokens"],
        "description": "The refresh token for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_ID",
        "constructors": ["createYouTubeSDKWithTokens"],
        "description": "The client ID for the YouTube client",
        "required": true
      },
      {
        "key": "GOOGLE_CLIENT_SECRET",
        "constructors": ["createYouTubeSDKWithTokens"],
        "description": "The client secret for the YouTube client",
        "required": true
      },
      {
        "key": "SCOPES",
        "constructors": ["createYouTubeSDKWithTokens"],
        "description": "The scopes for the YouTube client",
        "required": true
      }
    ],
    "extraInfo": [
      "Use the `createYouTubeSDKWithTokens` constructor to create a new YouTube client."
    ],
    "readme_map": {
      "path": "/README.md",
      "functionalities": [],
      "description": "No description provided",
      "all_readmes": []
    }
  },
  {
    "name": "@microfox/zoominfo",
    "title": "Microfox ZoomInfo",
    "description": "Microfox SDK for ZoomInfo",
    "path": "packages/zoominfo",
    "dependencies": ["@microfox/core", "jsrsasign", "ky", "p-throttle", "zod"],
    "status": "partial",
    "apiKeys": [],
    "extraInfo": []
  }
]
